(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    530430,       9983]
NotebookOptionsPosition[    511838,       9679]
NotebookOutlinePosition[    512293,       9697]
CellTagsIndexPosition[    512250,       9694]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[
     StyleBox["D",
      FontSlant->"Plain"], "5"], "+"], TraditionalForm]],ExpressionUUID->
  "3264eaca-4447-42f5-ab13-b1af6bb1ca53"],
 " DVR Adiabatic"
}], "Chapter",
 CellChangeTimes->{{3.731863985172079*^9, 3.7318639863199368`*^9}, {
   3.734891636796474*^9, 3.734891649850445*^9}, {3.745182404731666*^9, 
   3.745182409315515*^9}, 3.74518245026158*^9, {3.7598678121166973`*^9, 
   3.759867812116866*^9}},
 TextAlignment->Center,ExpressionUUID->"108dd256-757c-4065-a0c6-9649daa7ea2f"],

Cell["2/22/2019", "Text",
 CellChangeTimes->{{3.731863989207284*^9, 3.731863990655895*^9}, {
  3.731864026554674*^9, 3.731864033938505*^9}, {3.7598616732610493`*^9, 
  3.7598616753009863`*^9}},
 TextAlignment->Right,ExpressionUUID->"ef26530d-7ef4-4cd4-b0ff-34c81b953df6"],

Cell[TextData[{
 "Adiabatic treatment of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[
     StyleBox["D",
      FontSlant->"Plain"], "5"], "+"], TraditionalForm]],ExpressionUUID->
  "ecb5baf0-fdee-46b3-8214-454e283554e1"]
}], "Text",
 CellChangeTimes->{{3.745182582129764*^9, 3.745182592099962*^9}, {
  3.7598678092373943`*^9, 
  3.759867810961665*^9}},ExpressionUUID->"6f57ca09-0e55-4c6d-b00b-\
d59ff317d095"],

Cell[CellGroupData[{

Cell["Average Field (Adiabatic Treatment)", "Section",
 CellChangeTimes->{{3.7348929629536343`*^9, 3.7348929771866083`*^9}, {
  3.738596532627039*^9, 3.738596537593079*^9}, {3.744568560358317*^9, 
  3.744568565054776*^9}},ExpressionUUID->"aed6ec0c-3e49-41b3-86f5-\
840099dff719"],

Cell[CellGroupData[{

Cell["Load Package", "Subsection",
 CellChangeTimes->{{3.7500080712049503`*^9, 
  3.750008075219386*^9}},ExpressionUUID->"67ad0683-cd26-409e-abc1-\
b8098a7710ba"],

Cell[BoxData[
 RowBox[{"Get", "@", 
  "\"\<~/Documents/UW/Research/H5+/Common/H5Core.m\>\""}]], "Input",
 CellChangeTimes->{{3.750008076792406*^9, 3.750008096091104*^9}, 
   3.756131132773386*^9, {3.7571031019925327`*^9, 3.757103105823854*^9}, 
   3.759862036058713*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"a5302110-dac0-4374-af3e-1656594b8df1"],

Cell[BoxData[{
 RowBox[{"<<", "ChemTools`DVR`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "ChemTools`Wavefunctions`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "ChemTools`DataStructures`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "ChemTools`Spectroscopy`"}]}], "Input",
 CellChangeTimes->{{3.750008076792406*^9, 3.750008096091104*^9}, 
   3.756131132773386*^9, {3.7571031019925327`*^9, 3.757103105823854*^9}, 
   3.759862036058713*^9, {3.7599359779446173`*^9, 3.759935978818392*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"f8a76d40-9000-4bd1-9d70-e38da48e787d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$HistoryLength", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "@@", 
   RowBox[{"Unprotect", "[", "Out", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.759936988904265*^9, 3.759937013743372*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"71873df0-99a3-4596-ac33-8dfc30c5ebb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Common", "Subsection",
 CellChangeTimes->{{3.7453458818925867`*^9, 3.74534588342701*^9}, {
  3.750011520271427*^9, 
  3.750011520829*^9}},ExpressionUUID->"69d278cb-1584-45e5-97b1-eee3a9e3d718"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"saMainGrid", "=", 
   RowBox[{"$D5DVR", "[", "\"\<Grid\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"saGrid", "=", 
   RowBox[{"saMainGrid", "[", "\"\<Points\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.738600324036819*^9, 3.738600353586584*^9}, {
   3.7386098225214663`*^9, 3.738609824948983*^9}, {3.738614008763254*^9, 
   3.73861401096229*^9}, {3.7422648406364098`*^9, 3.742264852314206*^9}, {
   3.744750441791654*^9, 3.744750442155787*^9}, {3.7536010008767567`*^9, 
   3.753601026356306*^9}, {3.753602637342009*^9, 3.7536026449468927`*^9}, {
   3.7561499569884663`*^9, 3.756149959616074*^9}, {3.7567738095370903`*^9, 
   3.7567738098734818`*^9}, {3.7571864852521763`*^9, 3.75718648558016*^9}, {
   3.757306023904344*^9, 3.757306024181562*^9}, {3.7575330512041197`*^9, 
   3.757533052097063*^9}, 3.7597906279487677`*^9, {3.759819658175324*^9, 
   3.759819674105735*^9}, {3.759819753439424*^9, 3.759819759759369*^9}, 
   3.7598198194745913`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"d6d00be0-65a1-4234-b054-36f3dce8e0d1"],

Cell[BoxData[{
 RowBox[{"d2SAPot", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2SAPot", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", " ", "s_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R1R2", "=", 
         RowBox[{
          RowBox[{"RotationMatrix", "[", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"a", ",", " ", "s"}], "}"}]}]}], ",", " ", 
        RowBox[{"bounds", "=", 
         RowBox[{"H5FullInterpPot", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"R1R2", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"bounds", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<=", "#", "<", 
          RowBox[{"bounds", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"h5PotCutVec", "[", 
     RowBox[{"{", 
      RowBox[{
      "a", ",", " ", "s", ",", " ", "Automatic", ",", " ", "Automatic"}], 
      "}"}], "]"}], ",", "\[IndentingNewLine]", "$Failed"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7386003625944366`*^9, 3.738600371985814*^9}, {
   3.738603918225898*^9, 3.7386039551649227`*^9}, {3.7386098333648567`*^9, 
   3.738609857182663*^9}, {3.738612068166306*^9, 3.738612070756476*^9}, {
   3.738612168932646*^9, 3.738612189034616*^9}, {3.7386122527025747`*^9, 
   3.738612261256266*^9}, {3.7386122962959957`*^9, 3.738612367358974*^9}, {
   3.738612400176401*^9, 3.7386124027005177`*^9}, {3.742178389715143*^9, 
   3.742178520395451*^9}, {3.742178562423058*^9, 3.742178594653269*^9}, {
   3.7421788020189533`*^9, 3.742178858384389*^9}, {3.742178902828765*^9, 
   3.7421789142492313`*^9}, {3.7421802654289217`*^9, 3.742180266531019*^9}, {
   3.7421808227131233`*^9, 3.742180833792638*^9}, {3.7421808849563513`*^9, 
   3.7421809103475027`*^9}, {3.742180965110235*^9, 3.742180965946213*^9}, 
   3.742181083946302*^9, {3.742181171293356*^9, 3.742181253937222*^9}, 
   3.742183486811425*^9, {3.742183924841072*^9, 3.742183926691185*^9}, {
   3.742184205756753*^9, 3.742184207379163*^9}, {3.742184253444003*^9, 
   3.742184256130295*^9}, {3.742184642941605*^9, 3.742184643705871*^9}, {
   3.759790749551409*^9, 3.759790749555571*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"4f834f25-016b-4f2e-9763-43094930c116"],

Cell[CellGroupData[{

Cell["SA Stuff", "Subsubsection",
 CellChangeTimes->{{3.745345837894363*^9, 
  3.7453458394596977`*^9}},ExpressionUUID->"2450d262-7951-41ca-b086-\
6afd0f7d3027"],

Cell[TextData[{
 "This is misnamed as it\[CloseCurlyQuote]s really an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", "s"}], ")"}], TraditionalForm]],ExpressionUUID->
  "4b96f747-abb3-4c63-a002-ddfc983ed349"],
 " grid...but no energy to fix it."
}], "Text",
 CellChangeTimes->{{3.7421795403457212`*^9, 3.742179556859112*^9}, {
  3.755533243672463*^9, 
  3.75553324754762*^9}},ExpressionUUID->"6d68ca11-dd36-4e05-8b2b-\
39068c2ea902"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"saMainGrid", "=", 
   RowBox[{"$D5DVR", "[", "\"\<Grid\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"saGrid", "=", 
   RowBox[{"saMainGrid", "[", "\"\<Points\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.738600324036819*^9, 3.738600353586584*^9}, {
   3.7386098225214663`*^9, 3.738609824948983*^9}, {3.738614008763254*^9, 
   3.73861401096229*^9}, {3.7422648406364098`*^9, 3.742264852314206*^9}, {
   3.744750441791654*^9, 3.744750442155787*^9}, {3.7536010008767567`*^9, 
   3.753601026356306*^9}, {3.753602637342009*^9, 3.7536026449468927`*^9}, {
   3.7561499569884663`*^9, 3.756149959616074*^9}, 3.759790643341112*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"100d1152-2f32-4958-900c-8dd4f608cea7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"$d2SAPotMins", "=", 
    RowBox[{
    "Import", "[", 
     "\"\<~/Documents/UW/Research/H5+/inputs/sa_pot_mins.mx\>\"", "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2SAPotMin", "[", 
     RowBox[{"{", 
      RowBox[{"a_", ",", " ", "s_"}], "}"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d2SAPotMin", "[", 
      RowBox[{"{", 
       RowBox[{"a", ",", " ", "s"}], "}"}], "]"}], "=", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"R1R2", "=", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", "s"}], "}"}]}]}], ",", " ", 
           RowBox[{"bounds", "=", 
            RowBox[{"H5FullInterpPot", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AllTrue", "[", 
          RowBox[{"R1R2", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"bounds", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<=", "#", "<", 
             RowBox[{"bounds", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"NMinimize", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"h5PotCut", "[", 
            RowBox[{"{", 
             RowBox[{
             "a", ",", " ", "s", ",", " ", "Automatic", ",", " ", 
              "Automatic"}], "}"}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"r1", ",", " ", "r2"}], "}"}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r1", ",", " ", "r2"}], "}"}], "\[Element]", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{".1", ",", " ", ".1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", "2"}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "$Failed"}],
       "\[IndentingNewLine]", "]"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7421836245247993`*^9, 3.742183659087142*^9}, {
  3.7421838874584*^9, 3.7421838968754473`*^9}, {3.742492639236232*^9, 
  3.742492639450226*^9}, {3.759790749562829*^9, 
  3.759790749569729*^9}},ExpressionUUID->"b52c25aa-e118-471d-bc18-\
acc41f1dad70"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"potGridFunc", "=", "\[IndentingNewLine]", " ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"arr", "=", 
         RowBox[{"QuantityMagnitude", "@", "H5Core`Private`H5FullPotQA"}]}], 
        ",", "\[IndentingNewLine]", "gg"}], "\[IndentingNewLine]", "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gg", "=", "\[IndentingNewLine]", 
        RowBox[{"GatherBy", "[", "\[IndentingNewLine]", 
         RowBox[{"arr", ",", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p", "=", "#"}], "}"}], ",", " ", 
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "p", "]"}], "]"}], ",", " ", ".0001"}], "]"}], 
               "&"}]}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", "3", "]"}]}]}], "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "ChemTools`DataStructures`GridFunctionObject", "[", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"gg", "[", 
          RowBox[{"[", 
           RowBox[{
           "All", ",", " ", "All", ",", " ", "All", ",", " ", "All", ",", " ", 
            RowBox[{";;", "4"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "-", 
            RowBox[{"Min", "[", "#", "]"}]}], "&"}], "@", 
          RowBox[{"gg", "[", 
           RowBox[{"[", 
            RowBox[{
            "All", ",", " ", "All", ",", " ", "All", ",", " ", "All", ",", 
             " ", "5"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.753601110491645*^9, 3.753601141211*^9}, {
  3.753601172447694*^9, 3.75360147013347*^9}, {3.753601537609449*^9, 
  3.753601641623518*^9}, {3.753601673151643*^9, 3.75360178645918*^9}, {
  3.753603213434429*^9, 3.753603219598523*^9}, {3.753603559438553*^9, 
  3.7536035792032547`*^9}, {3.7571074190611563`*^9, 
  3.757107431334009*^9}},ExpressionUUID->"9698bb2c-3e66-49c6-a023-\
4c0a045e6690"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"test", "=", "\[IndentingNewLine]", 
      RowBox[{"potGridFunc", "@", "\[IndentingNewLine]", 
       RowBox[{"\"\<Compile\>\"", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rr", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"rr", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", "Automatic", ",", " ", 
           "Automatic"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<CoordinateTransformation\>\"", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{"\[Pi]", "/", "4."}], "]"}], ".", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", " ", "3"}], "}"}], "]"}], "]"}]}]}], 
             "]"}], "&"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Default\>\"", "\[Rule]", 
          RowBox[{"10.", "^", "5"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{"saGrid", ",", "\[IndentingNewLine]", 
        RowBox[{"Transpose", "@", 
         RowBox[{"List", "@", 
          RowBox[{"test", "@", "saGrid"}]}]}], ",", "\[IndentingNewLine]", 
        "2"}], "\[IndentingNewLine]", "]"}], "//", "ListPlot3D"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"rr", ",", " ", 
      RowBox[{"{", 
       RowBox[{".26", ",", " ", ".26"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1.8", ",", " ", "1.8"}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.75360193699013*^9, 3.753601941637973*^9}, {
  3.753602225392482*^9, 3.753602232054984*^9}, {3.753602617747787*^9, 
  3.753602623320209*^9}, {3.753602656064918*^9, 3.753602682939478*^9}, {
  3.753603685114264*^9, 3.753603769657877*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"81b7a5ac-4f9e-4b5a-8ef6-effa0938af98"],

Cell[BoxData[{
 RowBox[{"d2SAPot", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2SAPot", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", " ", "s_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R1R2", "=", 
         RowBox[{
          RowBox[{"RotationMatrix", "[", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"a", ",", " ", "s"}], "}"}]}]}], ",", " ", 
        RowBox[{"bounds", "=", 
         RowBox[{"H5FullInterpPot", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"R1R2", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"bounds", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<=", "#", "<", 
          RowBox[{"bounds", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"h5PotCutVec", "[", 
     RowBox[{"{", 
      RowBox[{
      "a", ",", " ", "s", ",", " ", "Automatic", ",", " ", "Automatic"}], 
      "}"}], "]"}], ",", "\[IndentingNewLine]", "$Failed"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7386003625944366`*^9, 3.738600371985814*^9}, {
   3.738603918225898*^9, 3.7386039551649227`*^9}, {3.7386098333648567`*^9, 
   3.738609857182663*^9}, {3.738612068166306*^9, 3.738612070756476*^9}, {
   3.738612168932646*^9, 3.738612189034616*^9}, {3.7386122527025747`*^9, 
   3.738612261256266*^9}, {3.7386122962959957`*^9, 3.738612367358974*^9}, {
   3.738612400176401*^9, 3.7386124027005177`*^9}, {3.742178389715143*^9, 
   3.742178520395451*^9}, {3.742178562423058*^9, 3.742178594653269*^9}, {
   3.7421788020189533`*^9, 3.742178858384389*^9}, {3.742178902828765*^9, 
   3.7421789142492313`*^9}, {3.7421802654289217`*^9, 3.742180266531019*^9}, {
   3.7421808227131233`*^9, 3.742180833792638*^9}, {3.7421808849563513`*^9, 
   3.7421809103475027`*^9}, {3.742180965110235*^9, 3.742180965946213*^9}, 
   3.742181083946302*^9, {3.742181171293356*^9, 3.742181253937222*^9}, 
   3.742183486811425*^9, {3.742183924841072*^9, 3.742183926691185*^9}, {
   3.742184205756753*^9, 3.742184207379163*^9}, {3.742184253444003*^9, 
   3.742184256130295*^9}, {3.742184642941605*^9, 3.742184643705871*^9}, {
   3.759790749576439*^9, 
   3.75979074958014*^9}},ExpressionUUID->"f9e000b0-fb02-4fbf-8998-\
1393550a23c0"],

Cell[BoxData[{
 RowBox[{"d2SAPotSingles", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2SAPotSingles", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", " ", "s_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R1R2", "=", 
         RowBox[{
          RowBox[{"RotationMatrix", "[", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"a", ",", " ", "s"}], "}"}]}]}], ",", " ", 
        RowBox[{"bounds", "=", 
         RowBox[{"H5FullInterpPot", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"R1R2", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"bounds", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<=", "#", "<", 
          RowBox[{"bounds", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"h5PotCut", "[", 
     RowBox[{"{", 
      RowBox[{
      "a", ",", " ", "s", ",", " ", "Automatic", ",", " ", "Automatic"}], 
      "}"}], "]"}], ",", "\[IndentingNewLine]", "$Failed"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7386003625944366`*^9, 3.738600371985814*^9}, {
   3.738603918225898*^9, 3.7386039551649227`*^9}, {3.7386098333648567`*^9, 
   3.738609857182663*^9}, {3.738612068166306*^9, 3.738612070756476*^9}, {
   3.738612168932646*^9, 3.738612189034616*^9}, {3.7386122527025747`*^9, 
   3.738612261256266*^9}, {3.7386122962959957`*^9, 3.738612367358974*^9}, {
   3.738612400176401*^9, 3.7386124027005177`*^9}, {3.742178389715143*^9, 
   3.742178520395451*^9}, {3.742178562423058*^9, 3.742178594653269*^9}, {
   3.7421788020189533`*^9, 3.742178858384389*^9}, {3.742178902828765*^9, 
   3.7421789142492313`*^9}, {3.7421802654289217`*^9, 3.742180266531019*^9}, {
   3.7421808227131233`*^9, 3.742180833792638*^9}, {3.7421808849563513`*^9, 
   3.7421809103475027`*^9}, {3.742180965110235*^9, 3.742180965946213*^9}, 
   3.742181083946302*^9, {3.742181171293356*^9, 3.742181253937222*^9}, 
   3.742183486811425*^9, {3.742183924841072*^9, 3.742183926691185*^9}, {
   3.742184205756753*^9, 3.742184207379163*^9}, {3.742184253444003*^9, 
   3.742184256130295*^9}, {3.742184642941605*^9, 3.742184643705871*^9}, {
   3.745894375404546*^9, 3.745894382219674*^9}, {3.746214703686009*^9, 
   3.746214704465618*^9}, {3.759790749586557*^9, 
   3.7597907495901537`*^9}},ExpressionUUID->"9543db35-fb9c-4a8a-87dd-\
63b9c21bba21"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Quiet", "@", "\[IndentingNewLine]", 
   RowBox[{"NMinimize", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"H5FullInterpPot", "[", 
      RowBox[{"r1", ",", " ", "r2", ",", " ", "R1", ",", " ", "R2"}], "]"}], 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r1", ",", " ", "r2", ",", " ", "R1", ",", " ", "R2"}], "}"}], 
      "\[Element]", 
      RowBox[{"Region", "@", 
       RowBox[{"Apply", "[", 
        RowBox[{"Cuboid", ",", " ", 
         RowBox[{"Transpose", "@", 
          RowBox[{"H5FullInterpPot", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7453478360017853`*^9, 3.745347897360867*^9}, {
  3.745348097273129*^9, 3.74534810983985*^9}, {3.745348152433373*^9, 
  3.745348174665738*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"ec028264-2904-4460-85cb-26d2ec647705"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d2SAPotsGrid", "=", "\[IndentingNewLine]", 
   RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CoordinateBoundsArray", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"H5FullInterpPot", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", 
          RowBox[{";;", "2"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"H5FullInterpPot", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1", ",", " ", "2"}], "]"}], "]"}], "-", 
          RowBox[{"H5FullInterpPot", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1", ",", " ", "1"}], "]"}], "]"}]}], ")"}], 
        "/", "150"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", "1"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"d2SAPotsUncoupled", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2SAPotsUncoupled", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", " ", "s_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"d2SAPotsUncoupled", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "s"}], "}"}], "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pot", "=", 
        RowBox[{"d2SAPot", "[", 
         RowBox[{"{", 
          RowBox[{"a", ",", " ", "s"}], "}"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"d2SAPotSingles", "[", 
         RowBox[{"{", 
          RowBox[{"a", ",", " ", "s"}], "}"}], "]"}], "*)"}], ",", 
       "\[IndentingNewLine]", "nmins", ",", "\[IndentingNewLine]", "r1", ",", 
       "\[IndentingNewLine]", "r2", ",", "\[IndentingNewLine]", "vecs"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pot", "=!=", "$Failed"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nmins", "=", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "If", " ", "this", " ", "sucks", " ", "too", " ", "much", " ", 
            "just", " ", "make", " ", "a", " ", "super", " ", "refined", " ", 
            "grid", " ", "over", " ", "these", " ", "points", " ", "and", " ",
             "use", " ", "the", " ", "vectorized", " ", "version", " ", "of", 
            " ", "the", " ", 
            RowBox[{"potential", ".", " ", "That"}], " ", "should", " ", "be",
             " ", "close"}], "-", 
           RowBox[{
           "ish", " ", "to", " ", "right", " ", "and", " ", "a", " ", "hell", 
            " ", "of", " ", "a", " ", "lot", " ", 
            RowBox[{"faster", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MinimalBy", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{"{", 
              RowBox[{"d2SAPotsGrid", ",", " ", 
               RowBox[{"pot", "@", "d2SAPotsGrid"}]}], "}"}], "]"}], ",", " ",
             "Last"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"r1", "=", 
           RowBox[{"$r1", "/.", "nmins"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"r2", "=", 
           RowBox[{"$r2", "/.", "nmins"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r1", ",", " ", "r2"}], "}"}], "=", "nmins"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", "gridList", "}"}], ",", " ", 
             RowBox[{"\[FormalP]", "[", 
              RowBox[{"List", "/@", "gridList"}], "]"}]}], "]"}], "/.", 
           RowBox[{"\[FormalP]", "\[Rule]", 
            RowBox[{"h5PotCutVec", "[", 
             RowBox[{"{", 
              RowBox[{
              "a", ",", " ", "s", ",", " ", "r1", ",", " ", "Automatic"}], 
              "}"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", "gridList", "}"}], ",", " ", 
             RowBox[{"\[FormalP]", "[", 
              RowBox[{"List", "/@", "gridList"}], "]"}]}], "]"}], "/.", 
           RowBox[{"\[FormalP]", "->", 
            RowBox[{"h5PotCutVec", "[", 
             RowBox[{"{", 
              RowBox[{
              "a", ",", " ", "s", ",", " ", "Automatic", ",", " ", "r2"}], 
              "}"}], "]"}]}]}]}], "\[IndentingNewLine]", "}"}]}], ",", 
       "\[IndentingNewLine]", "$Failed"}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7386003625944366`*^9, 3.738600371985814*^9}, {
   3.738603918225898*^9, 3.7386039551649227`*^9}, {3.7386098333648567`*^9, 
   3.738609857182663*^9}, {3.738612068166306*^9, 3.738612070756476*^9}, {
   3.738612168932646*^9, 3.738612189034616*^9}, {3.7386122527025747`*^9, 
   3.738612261256266*^9}, {3.7386122962959957`*^9, 3.738612367358974*^9}, {
   3.738612400176401*^9, 3.7386124027005177`*^9}, {3.742178389715143*^9, 
   3.742178520395451*^9}, {3.742178562423058*^9, 3.742178594653269*^9}, {
   3.7421788020189533`*^9, 3.742178858384389*^9}, {3.742178902828765*^9, 
   3.7421789142492313`*^9}, {3.7421802654289217`*^9, 3.742180266531019*^9}, {
   3.7421808227131233`*^9, 3.742180833792638*^9}, {3.7421808849563513`*^9, 
   3.7421809103475027`*^9}, {3.742180965110235*^9, 3.742180965946213*^9}, 
   3.742181083946302*^9, {3.742181171293356*^9, 3.742181253937222*^9}, 
   3.742183486811425*^9, {3.742183924841072*^9, 3.742183926691185*^9}, {
   3.742184205756753*^9, 3.742184207379163*^9}, {3.742184253444003*^9, 
   3.742184256130295*^9}, {3.742184642941605*^9, 3.742184643705871*^9}, {
   3.74589397743472*^9, 3.745893984140629*^9}, {3.745894057425506*^9, 
   3.745894075804729*^9}, {3.745894111496752*^9, 3.745894267347424*^9}, {
   3.745894363436783*^9, 3.745894390699264*^9}, {3.745894674147766*^9, 
   3.745894683016243*^9}, {3.74589509884426*^9, 3.745895199173315*^9}, {
   3.74589526847499*^9, 3.74589532711103*^9}, {3.745895892815237*^9, 
   3.745895897027977*^9}, {3.745896346071274*^9, 3.74589637015563*^9}, {
   3.745904583164044*^9, 3.745904645617247*^9}, {3.746214840695731*^9, 
   3.746214907543849*^9}, {3.746214962337484*^9, 3.746214977720852*^9}, {
   3.746215115813952*^9, 3.746215128429945*^9}, {3.746452716822919*^9, 
   3.7464527194880123`*^9}, {3.746477106990465*^9, 3.7464771084530087`*^9}, 
   3.746477259520944*^9, {3.746477643941991*^9, 3.7464776553530903`*^9}, {
   3.7464779842803802`*^9, 3.7464780022942047`*^9}, {3.746478198719982*^9, 
   3.746478199022575*^9}, 3.7464784202513857`*^9, {3.759790749595665*^9, 
   3.7597907496267357`*^9}},ExpressionUUID->"1e827eb8-67d8-42d0-9aec-\
20c3d382ebc5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SAUncPots", "=", 
   RowBox[{"AssociationMap", "[", 
    RowBox[{"d2SAPotsUncoupled", ",", " ", "saGrid"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746215050558856*^9, 3.746215090970437*^9}, {
  3.759790749633119*^9, 
  3.759790749636705*^9}},ExpressionUUID->"6087dcb0-59ad-4d05-999e-\
8faf65f4903f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/Documents/UW/Research/H5+/results/d2_outer_SA_pots_uncoupled.mx\>\"\
", ",", " ", "d2SAUncPots"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.738612958911417*^9, 3.738612989115444*^9}, {
   3.738613088356886*^9, 3.7386130892826767`*^9}, {3.7424926855732603`*^9, 
   3.7424926857140417`*^9}, {3.7459032201131983`*^9, 3.745903222847443*^9}, {
   3.746222192845821*^9, 3.746222199608652*^9}, 3.759790749645213*^9, 
   3.759819612308153*^9},ExpressionUUID->"9a7c17ee-7941-4438-b942-\
c9efc1d9abb6"],

Cell[BoxData["\"\<~/Documents/UW/Research/H5+/results/d2_outer_SA_pots_\
uncoupled.mx\>\""], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.746222203990994*^9, 3.746458505406399*^9, 
  3.7465582654637127`*^9, 
  3.759819612316697*^9},ExpressionUUID->"a894b05d-200f-4e8d-b718-\
bec76eee0472"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SAUncPots", "=", 
   RowBox[{
   "Import", "@", 
    "\"\<~/Documents/UW/Research/H5+/results/d2_outer_SA_pots_uncoupled.mx\>\"\
"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755895916565069*^9, 3.755895926032901*^9}, 
   3.7597907496514673`*^9, 
   3.759819612324604*^9},ExpressionUUID->"f60d938c-bcbe-481e-b4e3-\
84f7ec0bcf09"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d2SAEqPts", "=", "\[IndentingNewLine]", 
  RowBox[{"Nearest", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"saGrid", "\[Rule]", "\"\<Index\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2.1364750560940324`"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2SAEqPt", "=", 
   RowBox[{"d2SAEqPts", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.739813949067408*^9, 3.739813984808428*^9}, {
  3.740415852589265*^9, 3.7404158860151052`*^9}, {3.75979074965807*^9, 
  3.759790749664104*^9}},ExpressionUUID->"b9fd9aa1-8853-4614-8f77-\
8db2004c4865"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1759", ",", "1819"}], "}"}]], "Output",
 CellChangeTimes->{{3.7398139579325027`*^9, 3.739813985056961*^9}, {
   3.740415854318583*^9, 3.740415886384775*^9}, 3.741147836383741*^9, 
   3.741369477862192*^9, 3.741531219855268*^9, 3.7415623839276752`*^9, 
   3.742169134365305*^9, 3.742170854767261*^9, 3.742183928605297*^9, 
   3.742244602986046*^9, 3.742264855321671*^9, 3.742264910018488*^9, 
   3.742269869183589*^9, 3.742539515776103*^9, 3.744742392535639*^9, 
   3.744749898933008*^9, 3.744750450072628*^9, 3.745026933486372*^9, 
   3.745077771898238*^9, 3.745166818986203*^9, 3.7451697240581903`*^9, 
   3.7453460601134768`*^9, 3.745347337704298*^9, 3.745867552945738*^9, 
   3.746462351048067*^9, 3.746558265635084*^9, 3.7500094626532907`*^9, 
   3.75589592777909*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"5860d3e6-a796-4790-aa94-e7126b7edf9b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SA Grid", "Subsubsection",
 CellChangeTimes->{{3.7453465767742977`*^9, 
  3.7453465778526*^9}},ExpressionUUID->"9beb3b28-2e12-4e4e-a30b-6e895b43ef84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d2SAGridObject", "=", "\[IndentingNewLine]", 
   RowBox[{"Catch", "@", 
    RowBox[{"$D2DVR", "[", "\[IndentingNewLine]", 
     RowBox[{"\"\<Grid\>\"", ",", "\[IndentingNewLine]", " ", 
      RowBox[{"\"\<PotentialOptimizationOptions\>\"", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<PotentialFunction\>\"", "\[Rule]", "h2SinglePot"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<OptimizedBasisSize\>\"", "\[Rule]", "25"}]}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2SAGrid", "=", 
   RowBox[{"d2SAGridObject", "[", "\"\<Grid\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2SAGridPts", "=", 
   RowBox[{"d2SAGridObject", "[", "\"\<Points\>\"", "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.738611680080572*^9, 3.738611684748712*^9}, {
   3.738611747448289*^9, 3.738611750686493*^9}, {3.741709122250718*^9, 
   3.741709122456314*^9}, {3.742170319233698*^9, 3.742170321273416*^9}, {
   3.7421703861089897`*^9, 3.7421703956325817`*^9}, {3.7421704393663597`*^9, 
   3.742170464102068*^9}, {3.7421753237238207`*^9, 3.7421753283346043`*^9}, {
   3.742264917023877*^9, 3.742264931729027*^9}, {3.7535954858299723`*^9, 
   3.753595499763126*^9}, {3.7536009641870823`*^9, 3.753600966475205*^9}, {
   3.756773821746509*^9, 3.7567738219441423`*^9}, 3.759790749671049*^9, {
   3.7597907906338787`*^9, 3.7597907910287333`*^9}, 3.759790831086038*^9, 
   3.759791095917555*^9, {3.759819420198842*^9, 3.759819421540977*^9}, {
   3.7598195907474194`*^9, 3.759819620951354*^9}, {3.7598198304188957`*^9, 
   3.7598198613960752`*^9}, {3.759819943975233*^9, 3.759819952347764*^9}, {
   3.7598199860056763`*^9, 3.759819991700652*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"dbef40fb-6929-4d3c-86bc-cd24139bb623"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rrrr", "=", "\[IndentingNewLine]", 
   RowBox[{"$H2DVR", "[", "\[IndentingNewLine]", " ", 
    RowBox[{"\"\<PotentialOptimizationOptions\>\"", "\[Rule]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<PotentialFunction\>\"", "\[Rule]", "h2SinglePot"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<OptimizedBasisSize\>\"", "\[Rule]", "25"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.759790801587223*^9, 3.759790815665984*^9}, {
  3.759818170994933*^9, 3.759818171824898*^9}, {3.7598196123393917`*^9, 
  3.7598196226571503`*^9}},ExpressionUUID->"f1937eb7-703c-45bb-acb9-\
9dfd912b55c4"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Core Data", "Subsection",
 CellChangeTimes->{{3.745182414387413*^9, 3.7451824279780483`*^9}, {
  3.759853128894742*^9, 3.759853140035264*^9}, {3.7598643542588797`*^9, 
  3.759864355745146*^9}},ExpressionUUID->"4049f78b-630d-4c13-a620-\
908d50d4583b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", "preload", " ", 
    RowBox[{"because", " ", ".", "mx"}], " ", "can", " ", "do", " ", "weird", 
    " ", "things", " ", "sometimes"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CoordinateGridObject", ";"}], "\[IndentingNewLine]", 
   RowBox[{"GridFunctionObject", ";"}], "\[IndentingNewLine]", 
   RowBox[{"WavefunctionsObject", ";"}]}]}]], "Input",
 CellChangeTimes->{{3.759935960429944*^9, 
  3.759936006673616*^9}},ExpressionUUID->"eb2bacb4-a3f7-4fe7-b527-\
f7a3f847b9e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SAWavefunctions", "=", 
   RowBox[{
   "Import", "@", 
    "\"\<~/Documents/UW/Research/H5+/results/d2_outer_SA_wfns.mx\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7598497596436777`*^9, 3.759849768481896*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"f78658bc-f9e5-4ec6-9e1f-a9f883603794"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullD2SAWfs", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "=!=", "$Failed"}], ",", "\[IndentingNewLine]", 
       RowBox[{"#", "@", 
        RowBox[{"\"\<CorrectPhase\>\"", "[", "]"}]}], ",", 
       "\[IndentingNewLine]", "#"}], "\[IndentingNewLine]", "]"}], "&"}], "/@",
     "d2SAWavefunctions"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75604431237385*^9, 3.756044376186713*^9}, {
   3.756078925835086*^9, 3.756078931877397*^9}, {3.75607902105157*^9, 
   3.756079041464807*^9}, {3.756079737905678*^9, 3.7560797412548122`*^9}, {
   3.756131333952168*^9, 3.756131334222467*^9}, {3.756141820697781*^9, 
   3.756141832465805*^9}, 3.7561466050741587`*^9, {3.757184813985538*^9, 
   3.757184815575973*^9}, {3.757186002180224*^9, 3.757186024495246*^9}, {
   3.7571871747545424`*^9, 3.757187175336051*^9}, 3.7597907499502783`*^9, 
   3.759849946041173*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"7f924a51-42ce-473d-9e19-7718f6be5cf2"],

Cell[CellGroupData[{

Cell["H2 Wavefunctions", "Subsubsection",
 CellChangeTimes->{{3.7349066689507923`*^9, 3.734906670492128*^9}, {
  3.741392660986568*^9, 3.741392677787201*^9}, {3.741533861513762*^9, 
  3.741533862723555*^9}},ExpressionUUID->"49fc77f4-f308-4304-a6a3-\
35e2e2ee8be6"],

Cell[TextData[{
 "Get ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["H",
     FontSlant->"Plain"], "2"], TraditionalForm]],ExpressionUUID->
  "18649b06-89ea-43df-a3b3-7c4b50dcc2db"],
 " wavefunctions parametrized by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"s", ",", " ", "a"}], ")"}], TraditionalForm]],ExpressionUUID->
  "54d52a67-d530-4f2c-ab54-b3fb788b6ebe"]
}], "Text",
 CellChangeTimes->{{3.741382648677244*^9, 3.7413826637718763`*^9}, 
   3.757107597455894*^9},ExpressionUUID->"af94012f-1095-42e7-a58d-\
2d67f57624cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SAWavefunctions", "=", "\[IndentingNewLine]", 
   RowBox[{"AssociationMap", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pot", "=", 
          RowBox[{"d2SAPot", "[", "#", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"pot", "=!=", "$Failed"}], ",", "\[IndentingNewLine]", 
          RowBox[{"$D2DVR", "[", "\[IndentingNewLine]", 
           RowBox[{"\"\<Wavefunctions\>\"", ",", "\[IndentingNewLine]", " ", 
            RowBox[{"\"\<PotentialEnergy\>\"", "\[Rule]", 
             RowBox[{"SparseArray", "[", 
              RowBox[{
               RowBox[{"Band", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", " ", "1"}], "}"}], "]"}], "->", 
               RowBox[{"pot", "@", "d2SAGridPts"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<Grid\>\"", "->", "d2SAGridObject"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<ArnoldiIterations\>\"", "\[Rule]", "5000"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          "$Failed"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
       "]"}], "&"}], ",", "\[IndentingNewLine]", "saGrid"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.73490228279834*^9, 3.734902290106052*^9}, 
   3.7349031962180223`*^9, 3.734903242975876*^9, {3.734905098551463*^9, 
   3.7349051233399687`*^9}, {3.734905160192696*^9, 3.734905160489134*^9}, {
   3.734905193715808*^9, 3.73490519449617*^9}, {3.734905582715137*^9, 
   3.734905582951749*^9}, {3.734906664269864*^9, 3.734906665645563*^9}, {
   3.738596563553864*^9, 3.738596576523164*^9}, {3.738609841918824*^9, 
   3.738609906715796*^9}, {3.738611565949904*^9, 3.738611575626307*^9}, 
   3.738611665757269*^9, {3.738611717659878*^9, 3.738611843499489*^9}, {
   3.738612091000445*^9, 3.738612097157988*^9}, {3.7386122665298767`*^9, 
   3.7386122900064287`*^9}, {3.7386124365914803`*^9, 3.738612437612302*^9}, {
   3.739813395906458*^9, 3.739813403385548*^9}, {3.7421717007420263`*^9, 
   3.742171723652216*^9}, {3.742173455800829*^9, 3.7421734782773952`*^9}, {
   3.742176614046948*^9, 3.742176635193391*^9}, 3.744751287173767*^9, {
   3.757107408932398*^9, 3.757107409160473*^9}, {3.757107585057041*^9, 
   3.757107585585895*^9}, {3.757107622941737*^9, 3.7571076258111773`*^9}, 
   3.759790682316154*^9, {3.759790749676839*^9, 3.7597907496869793`*^9}, {
   3.759819878900964*^9, 3.7598198883407183`*^9}, 3.759820004913402*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"cc65627c-46a7-447a-a8b9-1cefd8b24760"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/Documents/UW/Research/H5+/results/d2_outer_SA_wfns.mx\>\"", ",", 
    " ", "d2SAWavefunctions"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.738612958911417*^9, 3.738612989115444*^9}, {
   3.738613088356886*^9, 3.7386130892826767`*^9}, {3.7424926855732603`*^9, 
   3.7424926857140417`*^9}, {3.757108002868389*^9, 3.757108003386791*^9}, 
   3.7597907496955833`*^9, 3.759819612348693*^9, {3.759820015306829*^9, 
   3.759820015482086*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"9ea0cd47-f72e-4fad-8e3a-bc869606560c"],

Cell[BoxData["\<\"~/Documents/UW/Research/H5+/results/d2_outer_SA_wfns.mx\"\>\
"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7571082101063128`*^9, 3.759819612355852*^9, 
  3.7598205522596416`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"bf41cab9-bf98-422f-8bf4-4962f50fb3ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SAWavefunctions", "=", 
   RowBox[{
   "Import", "@", 
    "\"\<~/Documents/UW/Research/H5+/results/d2_outer_SA_wfns.mx\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739301653774809*^9, 3.7393016610555677`*^9}, {
   3.739301734477829*^9, 3.739301735301366*^9}, {3.7424926430858173`*^9, 
   3.742492643324345*^9}, 3.742492679890687*^9, {3.747414962055045*^9, 
   3.7474149629632196`*^9}, 3.7571099840648813`*^9, 3.759790749710568*^9, 
   3.759819612375842*^9, {3.759820019425494*^9, 
   3.7598200196099443`*^9}},ExpressionUUID->"356a1306-344b-4c0a-9d70-\
76fca1ed834a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SAValidCoords", "=", "\[IndentingNewLine]", 
   RowBox[{"Complement", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"Length", "@", "d2SAWavefunctions"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Pick", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "d2SAWavefunctions"}], "]"}], ",", " ", 
       RowBox[{"Values", "[", "d2SAWavefunctions", "]"}], ",", " ", 
       "$Failed"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.741389442888949*^9, 3.7413895277697353`*^9}, {
  3.7597907497171392`*^9, 
  3.759790749726976*^9}},ExpressionUUID->"f7119e18-b58f-4495-be1c-\
b22e35608e4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SAInterestingWavefunctions", "=", "\[IndentingNewLine]", 
   RowBox[{"Select", "[", 
    RowBox[{"d2SAWavefunctions", ",", " ", 
     RowBox[{
      RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.738612702530003*^9, 3.7386127133716908`*^9}, {
   3.746297867198905*^9, 3.746297877992154*^9}, 3.7464525424166107`*^9, {
   3.759790749733917*^9, 
   3.7597907497369547`*^9}},ExpressionUUID->"64728d00-ffbb-41f5-b0b0-\
1c81359d04fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["Phase Corrections", "Subsubsection",
 CellChangeTimes->{{3.757304590763949*^9, 
  3.757304597120837*^9}},ExpressionUUID->"13033fe1-49a8-4f1e-befe-\
73f60d02c8b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rephaseThingies", "=", "\[IndentingNewLine]", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"overlaps", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"init", ",", " ", "_Integer"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"tol", ",", " ", "_Real"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"prev", ",", " ", "el", ",", " ", 
         RowBox[{"ov", "=", "overlaps"}], ",", 
         RowBox[{"swapEl", "=", "init"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"el", "=", 
             RowBox[{"ov", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"el", "<", 
               RowBox[{"-", "tol"}]}], ",", " ", 
              RowBox[{"swapEl", "=", 
               RowBox[{"-", "swapEl"}]}]}], "]"}], ";", "\[IndentingNewLine]",
             "swapEl"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"Length", "@", "ov"}]}], "}"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", "init"}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    RowBox[{"(*", 
     RowBox[{",", "\[IndentingNewLine]", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rephaseWfns", "[", 
   RowBox[{"s_", ",", " ", "wfns_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wfns", "[", "\"\<Energies\>\"", "]"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Scale", "[", 
          RowBox[{"#", ",", " ", "s"}], "]"}], "&"}], ",", " ", 
        RowBox[{"wfns", "[", "\"\<Wavefunctions\>\"", "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"wfns", "[", "\"\<Grid\>\"", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\n", 
 RowBox[{"getPhaseCorrection", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getPhaseCorrection", "[", 
    RowBox[{
    "wfs_List", ",", " ", "\[IndentingNewLine]", "grid_", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"state", ":", 
      RowBox[{"{", 
       RowBox[{"_Integer", "?", "IntegerQ"}], "}"}], ":", 
      RowBox[{"{", "2", "}"}]}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{"basePhase", ":", 
      RowBox[{"1", "|", 
       RowBox[{"-", "1"}]}], ":", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rephase", ":", 
      RowBox[{"True", "|", "False"}], ":", "False"}]}], "\[IndentingNewLine]",
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"pos", ",", "\[IndentingNewLine]", 
       RowBox[{"gridPoints", "=", 
        RowBox[{"grid", "[", "\"\<Points\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", "cleanGrid", ",", "\[IndentingNewLine]", 
       "cleanGridSorted", ",", "\[IndentingNewLine]", "gridReordering", ",", 
       "\[IndentingNewLine]", "gridPositions", ",", "\[IndentingNewLine]", 
       "reorderedWfs", ",", "\[IndentingNewLine]", "rephasedWavefunctions", 
       ",", "\[IndentingNewLine]", "fullWfs", ",", "\[IndentingNewLine]", 
       "overlaps", ",", "\[IndentingNewLine]", "phases", ",", 
       "\[IndentingNewLine]", "orderComplement", ",", "\[IndentingNewLine]", 
       "phaseVector", ",", "\[IndentingNewLine]", "newWfns"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pos", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
           RowBox[{"#", ">", "0"}]}], "&"}], "]"}], "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Position", "[", 
          RowBox[{"wfs", ",", " ", "_WavefunctionsObject", ",", " ", 
           RowBox[{"{", "1", "}"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cleanGrid", "=", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", "pos", "]"}], "]"}], ".", 
          RowBox[{"RotationMatrix", "[", 
           RowBox[{"\[Pi]", "/", "4"}], "]"}]}], ",", " ", ".001"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"cleanGridSorted", "=", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "[", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", "Reverse", 
             ",", " ", "Identity"}], "]"}], "@", "#"}], "&"}], "]"}], "@", 
        "\[IndentingNewLine]", 
        RowBox[{"SortBy", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"SortBy", "[", 
             RowBox[{"#", ",", " ", "First"}], "]"}], "&"}], "/@", 
           RowBox[{"GatherBy", "[", 
            RowBox[{"cleanGrid", ",", " ", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ",", 
          " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], "&"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridReordering", "=", "\[IndentingNewLine]", 
       RowBox[{"Flatten", "@", "\[IndentingNewLine]", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"PositionIndex", "[", "cleanGrid", "]"}], ",", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"cleanGridSorted", ",", " ", "1"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridPositions", "=", 
       RowBox[{"pos", "[", 
        RowBox[{"[", "gridReordering", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"reorderedWfs", "=", 
       RowBox[{"wfs", "[", 
        RowBox[{"[", "gridPositions", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fullWfs", "=", "\[IndentingNewLine]", 
       RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Flatten", "/@", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", " ", 
               RowBox[{
                RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}], "[", 
                RowBox[{"[", "state", "]"}], "]"}]}], "}"}], "&"}], "/@", 
            "\[IndentingNewLine]", "reorderedWfs"}], "\[IndentingNewLine]", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"reorderedWfs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Grid\>\"", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"overlaps", "=", 
       RowBox[{"Developer`ToPackedArray", "[", 
        RowBox[{"fullWfs", "@", 
         RowBox[{"\"\<Overlaps\>\"", "[", "fullWfs", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"phases", "=", 
       RowBox[{"rephaseThingies", "[", 
        RowBox[{
         RowBox[{"Diagonal", "[", 
          RowBox[{"overlaps", ",", " ", "1"}], "]"}], ",", " ", "basePhase", 
         ",", " ", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"orderComplement", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "wfs"}], "]"}], ",", " ", "gridPositions"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"phaseVector", "=", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"phases", ",", " ", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"$Failed", ",", " ", 
            RowBox[{"Length", "@", "orderComplement"}]}], "]"}]}], "]"}], "[", 
        RowBox[{"[", "\[IndentingNewLine]", 
         RowBox[{"Ordering", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"gridPositions", ",", " ", "orderComplement"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"rephase", ",", "\[IndentingNewLine]", 
        RowBox[{"newWfns", "=", "\[IndentingNewLine]", 
         RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", "===", "$Failed"}], ",", "\[IndentingNewLine]", 
              "#", ",", "\[IndentingNewLine]", 
              RowBox[{"rephaseWfns", "[", 
               RowBox[{"#", ",", " ", "#2"}], "]"}]}], " ", 
             "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"phaseVector", ",", "\[IndentingNewLine]", "wfs"}], 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"newWfns", "=", "None"}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<Wavefunctions\>\"", "->", "newWfns"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<PhaseVector\>\"", "\[Rule]", "phaseVector"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Positions\>\"", "\[Rule]", "pos"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Ordering\>\"", "->", "gridPositions"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Phases\>\"", "\[Rule]", "phases"}]}], 
       "\[IndentingNewLine]", "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getPhaseCorrection", "[", 
   RowBox[{
   "wfs_List", ",", " ", "\[IndentingNewLine]", "grid_", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"states", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_Integer", "?", "IntegerQ"}], ",", " ", 
       RowBox[{"__Integer", "?", "IntegerQ"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"basePhases", ":", 
     RowBox[{"1", "|", 
      RowBox[{"-", "1"}], "|", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "|", 
          RowBox[{"-", "1"}]}], ")"}], ".."}], "}"}]}], ":", "1"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"rephase", ":", 
     RowBox[{"True", "|", "False"}], ":", "True"}]}], "\[IndentingNewLine]", 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"wfSets", ",", " ", "rephasing", ",", " ", "newWfns"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"wfSets", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", "state", "}"}], "]"}], "]"}]}], "]"}], "&"}], "/@",
          "wfs"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"state", ",", " ", "states"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rephasing", "=", "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"getPhaseCorrection", "[", 
          RowBox[{"#", ",", " ", "grid", ",", " ", 
           RowBox[{"{", "1", "}"}], ",", " ", "#2", ",", " ", "False"}], 
          "]"}], "&"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"wfSets", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"basePhases", ",", " ", 
              RowBox[{"Length", "@", "wfSets"}]}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"Length", "@", "wfSets"}]}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], " ", "\[IndentingNewLine]", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"rephase", ",", "\[IndentingNewLine]", 
       RowBox[{"newWfns", "=", "\[IndentingNewLine]", 
        RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
             RowBox[{"Join", "[", "##", "]"}]}], "]"}], "&"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#", "===", "$Failed"}], ",", "\[IndentingNewLine]",
                   "#", ",", "\[IndentingNewLine]", 
                  RowBox[{"rephaseWfns", "[", 
                   RowBox[{"#", ",", " ", "#2"}], "]"}]}], " ", 
                 "\[IndentingNewLine]", "]"}], "&"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"#", "[", "\"\<PhaseVector\>\"", "]"}], ",", 
                 "\[IndentingNewLine]", "#2"}], "\[IndentingNewLine]", 
                "}"}]}], "\[IndentingNewLine]", "]"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"rephasing", ",", " ", "wfSets"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"newWfns", "=", "None"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Wavefunctions\>\"", "->", "newWfns"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Rephasings\>\"", "->", "rephasing"}]}], 
      "\[IndentingNewLine]", "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{"getVectorPhaseCorrection", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getVectorPhaseCorrection", "[", 
   RowBox[{
   "values_List", ",", " ", "\[IndentingNewLine]", "grid_", ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"basePhase", ":", 
     RowBox[{"1", "|", 
      RowBox[{"-", "1"}]}], ":", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rephase", ":", 
     RowBox[{"True", "|", "False"}], ":", "True"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"tol", ":", "_Real", ":", ".001"}]}], "\[IndentingNewLine]", 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"pos", ",", "\[IndentingNewLine]", 
      RowBox[{"gridPoints", "=", 
       RowBox[{"grid", "[", "\"\<Points\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", "cleanGrid", ",", "\[IndentingNewLine]", 
      "cleanGridSorted", ",", "\[IndentingNewLine]", "gridReordering", ",", 
      "\[IndentingNewLine]", "gridPositions", ",", "\[IndentingNewLine]", 
      "ratios", ",", "\[IndentingNewLine]", "reorderedVals", ",", 
      "\[IndentingNewLine]", "phases", ",", "\[IndentingNewLine]", 
      "orderComplement", ",", "\[IndentingNewLine]", "phaseVector", ",", 
      "\[IndentingNewLine]", "newValues"}], "\[IndentingNewLine]", "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pos", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Position", "[", 
        RowBox[{"values", ",", " ", 
         RowBox[{"_", "?", "NumericQ"}], ",", " ", 
         RowBox[{"{", "1", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cleanGrid", "=", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"grid", "[", 
          RowBox[{"[", "pos", "]"}], "]"}], ".", 
         RowBox[{"RotationMatrix", "[", 
          RowBox[{"\[Pi]", "/", "4"}], "]"}]}], ",", " ", ".001"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cleanGridSorted", "=", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"EvenQ", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", "Reverse", ",",
             " ", "Identity"}], "]"}], "@", "#"}], "&"}], "]"}], "@", 
       "\[IndentingNewLine]", 
       RowBox[{"SortBy", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"SortBy", "[", 
            RowBox[{"#", ",", " ", "First"}], "]"}], "&"}], "/@", 
          RowBox[{"GatherBy", "[", 
           RowBox[{"cleanGrid", ",", " ", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], "&"}]}], 
        "\[IndentingNewLine]", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gridReordering", "=", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "@", "\[IndentingNewLine]", 
       RowBox[{"Lookup", "[", 
        RowBox[{
         RowBox[{"PositionIndex", "[", "cleanGrid", "]"}], ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"cleanGridSorted", ",", " ", "1"}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gridPositions", "=", 
      RowBox[{"pos", "[", 
       RowBox[{"[", "gridReordering", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reorderedVals", "=", 
      RowBox[{"values", "[", 
       RowBox[{"[", "gridPositions", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ratios", "=", 
      RowBox[{"MovingMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}], ",", " ", 
           RowBox[{"Divide", "@@", "#"}], ",", " ", "0."}], "]"}], "&"}], ",",
         " ", "reorderedVals", 
        RowBox[{"(*", 
         RowBox[{"Differences", "[", "reorderedVals", "]"}], "*)"}], ",", " ",
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"ratios", ",", " ", 
         RowBox[{"ratios", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"phases", "=", 
      RowBox[{"rephaseThingies", "[", 
       RowBox[{"ratios", ",", " ", "basePhase", ",", " ", "tol"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"orderComplement", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "values"}], "]"}], ",", " ", 
        "gridPositions"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phaseVector", "=", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"phases", ",", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"$Failed", ",", " ", 
           RowBox[{"Length", "@", "orderComplement"}]}], "]"}]}], "]"}], "[", 
       
       RowBox[{"[", "\[IndentingNewLine]", 
        RowBox[{"Ordering", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"gridPositions", ",", " ", "orderComplement"}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"rephase", ",", "\[IndentingNewLine]", 
       RowBox[{"newValues", "=", "\[IndentingNewLine]", 
        RowBox[{"values", "*", 
         RowBox[{"Replace", "[", 
          RowBox[{"phaseVector", ",", " ", 
           RowBox[{"$Failed", "\[Rule]", "1"}], ",", " ", "1"}], "]"}]}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"newValues", "=", "None"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Values\>\"", "->", "newValues"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<PhaseVector\>\"", "\[Rule]", "phaseVector"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Positions\>\"", "\[Rule]", "pos"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Ordering\>\"", "->", "gridPositions"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Phases\>\"", "\[Rule]", "phases"}]}], 
      "\[IndentingNewLine]", "|>"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.75614667592527*^9, 3.756146832817232*^9}, {
   3.756146915308991*^9, 3.7561469697608757`*^9}, {3.756147079873176*^9, 
   3.75614716169322*^9}, {3.75614719492625*^9, 3.756147198442926*^9}, {
   3.7561500513067093`*^9, 3.756150060332079*^9}, {3.757304833692659*^9, 
   3.757305024646228*^9}, {3.7573055356252823`*^9, 3.7573055585636797`*^9}, {
   3.757305625168099*^9, 3.757305821580371*^9}, {3.757305896091896*^9, 
   3.757305901563105*^9}, {3.757305953819809*^9, 3.757305956602747*^9}, {
   3.757306078447998*^9, 3.7573062449351788`*^9}, {3.757306288686699*^9, 
   3.7573062892192507`*^9}, {3.757306352462512*^9, 3.7573063546136847`*^9}, {
   3.757306391308292*^9, 3.757306411483017*^9}, {3.757306451875703*^9, 
   3.757306691598527*^9}, {3.757308828751746*^9, 3.75730884984623*^9}, 
   3.757533435334896*^9, 3.7578011259476433`*^9, {3.759871237110038*^9, 
   3.759871300430026*^9}, {3.759871339576556*^9, 3.759871373019458*^9}, {
   3.759872134305381*^9, 3.759872134510396*^9}, {3.7599359250635643`*^9, 
   3.759935925610004*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"8a18ec59-c0e2-4675-91b7-77851638cd64"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.759899963477049*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"8ff8e313-567c-4085-9396-486a486b973a"]
}, Closed]],

Cell[CellGroupData[{

Cell["SCF Procedure", "Subsubsection",
 CellChangeTimes->{{3.755534581540028*^9, 3.755534585722755*^9}, 
   3.75730612579627*^9},ExpressionUUID->"72b21857-0919-4b3c-8ae5-\
854f08906cb5"],

Cell[CellGroupData[{

Cell["Core Data", "Subsubsubsection",
 CellChangeTimes->{{3.7598700872345467`*^9, 
  3.759870088425372*^9}},ExpressionUUID->"6af55a9b-6774-44ab-8f89-\
50b5f96ad8d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rephasingData", "=", "\[IndentingNewLine]", 
   RowBox[{"getPhaseCorrection", "[", 
    RowBox[{
     RowBox[{"Values", "@", "fullD2SAWfs"}], ",", " ", 
     RowBox[{"Keys", "[", "fullD2SAWfs", "]"}], ",", " ", 
     RowBox[{"Range", "[", "10", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757354866667294*^9, 3.7573548760973597`*^9}, {
   3.757354906250585*^9, 3.757354941508438*^9}, {3.7573549958245277`*^9, 
   3.757355015183893*^9}, {3.757355080246973*^9, 3.7573550946668673`*^9}, {
   3.7573551491228*^9, 3.757355155640161*^9}, {3.7573552817922363`*^9, 
   3.75735532217027*^9}, {3.757355492818199*^9, 3.757355494055044*^9}, 
   3.757533420086323*^9, {3.759790749917697*^9, 3.7597907499210873`*^9}, {
   3.7598532524600363`*^9, 3.7598532671226807`*^9}, 3.7598621941935043`*^9, {
   3.7598678811568747`*^9, 3.75986788115983*^9}, 3.759935900467362*^9, 
   3.759935943823319*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"c4e27e0d-993a-45f8-aa89-d63050158aca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rephasedH2s2", "=", "\[IndentingNewLine]", 
   RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Keys", "[", "fullD2SAWfs", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rephasingData", "[", "\"\<Wavefunctions\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.759911708366727*^9, 3.7599117110878*^9}, 
   3.759936046739545*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"d393d3f4-11d3-4014-b64b-e6990151d370"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coefficientData", "=", "\[IndentingNewLine]", 
   RowBox[{
   "Import", "@", 
    "\"\<~/Documents/UW/Research/H5+/results/d5_coeffs_and_wfns.mx\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.759868442056419*^9, 3.759868444060746*^9}, 
   3.7598702069892282`*^9, {3.759936039339826*^9, 3.759936050722002*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"6ef24751-fbd1-4323-a60b-76e36c13048b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phaseInCorrectDVR", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AssociationQ", "[", "#", "]"}], ",", " ", 
       RowBox[{"#", "[", "\"\<DVRWavefunctions\>\"", "]"}], ",", " ", "#"}], 
      "]"}], "&"}], "/@", "\[IndentingNewLine]", "coefficientData"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.759907914014628*^9, 3.759907922713056*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"d9b6d711-41e9-4789-aad4-eb9f637cba41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phaseCorrectDVR", "=", "\[IndentingNewLine]", 
   RowBox[{"getPhaseCorrection", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"AssociationQ", "[", "#", "]"}], ",", " ", 
         RowBox[{"#", "[", "\"\<DVRWavefunctions\>\"", "]"}], ",", " ", "#"}],
         "]"}], "&"}], "/@", "\[IndentingNewLine]", "coefficientData"}], ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"Keys", "[", "d2SAWavefunctions", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Range", "[", "6", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", 
       RowBox[{"-", " ", "1"}], ",", " ", "1", ",", " ", "1", ",", " ", "1"}],
       "}"}], ",", "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.759869253055719*^9, 3.759869284920835*^9}, {
   3.759869318864256*^9, 3.7598693266562653`*^9}, {3.759869369935828*^9, 
   3.7598694573242702`*^9}, 3.75986981212077*^9, 3.75986989817651*^9, {
   3.7598699985486097`*^9, 3.759870017587022*^9}, {3.759870051356366*^9, 
   3.759870051858138*^9}, {3.759872102003231*^9, 3.759872105432124*^9}, {
   3.75987219446397*^9, 3.759872198990748*^9}, {3.75987660668225*^9, 
   3.7598766087149754`*^9}, {3.759904938356359*^9, 3.759904948576049*^9}, 
   3.759906939880468*^9, 3.759936057453581*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"f2dd44cd-2404-48f7-9c85-ca04ad7bb343"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phaseCorrectSCF", "=", "\[IndentingNewLine]", 
   RowBox[{"getPhaseCorrection", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"AssociationQ", "[", "#", "]"}], ",", " ", 
         RowBox[{"#", "[", "\"\<SCFWavefunctions\>\"", "]"}], ",", " ", "#"}],
         "]"}], "&"}], "/@", "\[IndentingNewLine]", "coefficientData"}], ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"Keys", "[", "d2SAWavefunctions", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Range", "[", "6", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", " ", "1", ",", " ", "1", ",", " ", "1", ",", " ", "1", ",", 
       " ", "1"}], "}"}], ",", "\[IndentingNewLine]", "True"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7598700585623426`*^9, 3.7598700705457497`*^9}, {
   3.75987016062735*^9, 3.759870160752399*^9}, {3.759870248995981*^9, 
   3.7598702511993017`*^9}, {3.759871156889234*^9, 3.759871159368202*^9}, {
   3.759871214914813*^9, 3.759871215423099*^9}, {3.759871305239141*^9, 
   3.759871310279468*^9}, {3.759871426533576*^9, 3.7598714330754232`*^9}, {
   3.759871507160804*^9, 3.759871516009961*^9}, {3.759871572699088*^9, 
   3.759871624064271*^9}, {3.75987668849154*^9, 3.759876692472672*^9}, 
   3.759936062806512*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"e08c9e6a-d9cf-4ce8-a312-2884aa16ca45"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SCF Wavefunction Computation", "Subsubsubsection",
 CellChangeTimes->{{3.75614998871863*^9, 
  3.756149995784986*^9}},ExpressionUUID->"0722dbba-df47-4032-869a-\
2b124ad3f2d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SCFGrid", "=", "\[IndentingNewLine]", 
   RowBox[{"$D2DVR", "[", 
    RowBox[{"\"\<Grid\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Points\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"60", ",", " ", "60"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<PotentialOptimize\>\"", "\[Rule]", "False"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755895939054476*^9, 3.755895973066475*^9}, {
   3.755896335567666*^9, 3.755896340094911*^9}, 3.7559819005754337`*^9, 
   3.755982533782464*^9, {3.755996592420143*^9, 3.7559965942010183`*^9}, {
   3.755997664115162*^9, 3.7559976665753403`*^9}, 3.759790682353331*^9, 
   3.7598196127892017`*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"19bf32bd-0bfe-46c7-80ca-079ee1450613"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"d2SAPlotTexture", "[", "pot_CompiledFunction", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", "zerp", "\[IndentingNewLine]", "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"zerp", "=", 
       RowBox[{"d2SCFGrid", "@", 
        RowBox[{"\"\<BuildFunction\>\"", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pot", "[", 
            RowBox[{"{", "#", "}"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"zerp", "@", 
       RowBox[{"\"\<Plot\>\"", "[", 
        RowBox[{
         RowBox[{"\"\<PlotMode\>\"", "\[Rule]", "\"\<Contour\>\""}], ",", " ", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"ImagePadding", "\[Rule]", "None"}], ",", " ", 
         RowBox[{"PlotRangePadding", "\[Rule]", "None"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2SAPlotTexture", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", " ", "s_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"d2SAPlotTexture", "@", 
   RowBox[{"d2SAPot", "@", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "s"}], "}"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.755977280171307*^9, 3.755977364418291*^9}, {
   3.755977407746718*^9, 3.755977408530212*^9}, 3.757186546094849*^9, {
   3.7597907498816977`*^9, 3.759790749891234*^9}, 3.759819612797867*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"5fec128f-bf14-47df-862c-52dc7cf5b90d"],

Cell[BoxData[{
 RowBox[{"d2SCFWavefunction", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d2SCFWavefunction", "[", "\[IndentingNewLine]", 
    RowBox[{"pot_CompiledFunction", ",", "\[IndentingNewLine]", 
     RowBox[{"states", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"n", ":", 
      RowBox[{"_Integer", "|", "Automatic"}], ":", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<SCF\>\"", ",", "\[IndentingNewLine]", "$D2SingleDVR", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridFunctionObject", "[", "\[IndentingNewLine]", 
      RowBox[{"d2SCFGrid", ",", "\[IndentingNewLine]", 
       RowBox[{"pot", "@", 
        RowBox[{"d2SCFGrid", "[", "\"\<Points\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<StateVectors\>\"", "\[Rule]", "states"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "n"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d2SCFWavefunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", " ", "s_"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"states", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"n", ":", 
      RowBox[{"_Integer", "|", "Automatic"}], ":", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pot", "=", 
       RowBox[{"d2SAPot", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", " ", "s"}], "}"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pot", "===", "$Failed"}], ",", "\[IndentingNewLine]", 
       "$Failed", ",", "\[IndentingNewLine]", 
       RowBox[{"d2SCFWavefunction", "[", "\[IndentingNewLine]", 
        RowBox[{
        "pot", ",", "\[IndentingNewLine]", "states", ",", 
         "\[IndentingNewLine]", "n"}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"d2SCFWavefunctionData", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d2SCFWavefunctionData", "[", "\[IndentingNewLine]", 
    RowBox[{"pot_CompiledFunction", ",", "\[IndentingNewLine]", 
     RowBox[{"states", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"its", ":", 
      RowBox[{"_Integer", "|", "Automatic"}], ":", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
   "ChemTools`Wavefunctions`Package`SelfConsistentWavefunctions", "[", 
    "\[IndentingNewLine]", 
    RowBox[{"$D2SingleDVR", ",", "\[IndentingNewLine]", 
     RowBox[{"GridFunctionObject", "[", "\[IndentingNewLine]", 
      RowBox[{"d2SCFGrid", ",", "\[IndentingNewLine]", 
       RowBox[{"pot", "@", 
        RowBox[{"d2SCFGrid", "[", "\"\<Points\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<StateVectors\>\"", "\[Rule]", "states"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "its"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7500095094990664`*^9, 3.750009587867111*^9}, {
   3.7500096418265676`*^9, 3.750009643494831*^9}, {3.750009684102909*^9, 
   3.7500097218050213`*^9}, {3.750010407826641*^9, 3.75001042056207*^9}, 
   3.7500104525729628`*^9, {3.750011161862878*^9, 3.750011194691389*^9}, {
   3.7500112371644773`*^9, 3.750011253226528*^9}, {3.750011447002714*^9, 
   3.7500114738063393`*^9}, {3.750011525277876*^9, 3.7500115465531588`*^9}, {
   3.750011604669718*^9, 3.750011644262453*^9}, {3.7500116918556013`*^9, 
   3.750011722090723*^9}, {3.750011779565028*^9, 3.7500118419129*^9}, {
   3.750017787196432*^9, 3.750017819522703*^9}, {3.7500178528143167`*^9, 
   3.750017962321149*^9}, 3.7500180301988983`*^9, {3.750018140428204*^9, 
   3.750018204292746*^9}, {3.750018263103168*^9, 3.750018335803183*^9}, {
   3.750018368655155*^9, 3.750018477713501*^9}, {3.750018687576778*^9, 
   3.7500187214543133`*^9}, {3.750018813870063*^9, 3.7500188184628*^9}, {
   3.750019325958385*^9, 3.750019339938998*^9}, {3.7500194296305428`*^9, 
   3.7500194300982122`*^9}, {3.750019711311267*^9, 3.7500197614771347`*^9}, {
   3.750020151461976*^9, 3.7500202296047277`*^9}, {3.7500202713819304`*^9, 
   3.750020310299859*^9}, {3.75002038954452*^9, 3.750020399399523*^9}, {
   3.750020735853537*^9, 3.750020753361464*^9}, 3.750020787691684*^9, {
   3.750020850451076*^9, 3.750020890839486*^9}, {3.7500210033305597`*^9, 
   3.7500211500741987`*^9}, {3.750023835864579*^9, 3.750023934513764*^9}, {
   3.7500241456989813`*^9, 3.75002415255471*^9}, 3.750024440774068*^9, {
   3.750024811229383*^9, 3.750024835047988*^9}, {3.750024990603437*^9, 
   3.750025073406787*^9}, {3.7500251698333817`*^9, 3.7500252584605827`*^9}, {
   3.750026118167328*^9, 3.750026119355721*^9}, {3.7500261550184593`*^9, 
   3.750026204401412*^9}, {3.750026481225659*^9, 3.750026541308765*^9}, 
   3.7500265927385283`*^9, {3.750026971415984*^9, 3.750027026915435*^9}, 
   3.7500271543153954`*^9, {3.7500277658184357`*^9, 3.75002785742342*^9}, {
   3.750027889842613*^9, 3.7500279391682*^9}, {3.755895833546261*^9, 
   3.755895836536778*^9}, {3.755895870529175*^9, 3.755895873656013*^9}, {
   3.755895976776313*^9, 3.755896033647717*^9}, {3.7558960734734488`*^9, 
   3.755896091182761*^9}, {3.755896123009433*^9, 3.75589612335085*^9}, {
   3.755896167824472*^9, 3.755896232253992*^9}, {3.755896284464015*^9, 
   3.755896294945848*^9}, {3.755896462407709*^9, 3.755896494863839*^9}, {
   3.7559016701102123`*^9, 3.755901671299128*^9}, {3.755901749242343*^9, 
   3.7559017505036917`*^9}, {3.755902014147543*^9, 3.755902111712451*^9}, {
   3.755977462827969*^9, 3.75597748246565*^9}, {3.7559792756692257`*^9, 
   3.755979280107912*^9}, {3.755979348451664*^9, 3.7559793607565804`*^9}, {
   3.755979690554264*^9, 3.7559797337730207`*^9}, {3.7559805721833487`*^9, 
   3.7559805961617947`*^9}, {3.75598108862255*^9, 3.755981111345644*^9}, {
   3.7559816877326736`*^9, 3.75598168794796*^9}, {3.759790695382669*^9, 
   3.759790695386524*^9}, 3.7597907499009647`*^9, {3.7598196128103743`*^9, 
   3.7598196128565702`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"f5085857-8d3c-44bb-beda-f2e415c9f820"],

Cell[BoxData[{
 RowBox[{"d2SCFCoeffData", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2SCFCoeffData", "[", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a_", ",", " ", "s_"}], "}"}], 
   RowBox[{"(*", 
    RowBox[{",", "\[IndentingNewLine]", 
     RowBox[{"wfns", ":", 
      RowBox[{"{", "__Integer", "}"}]}]}], "*)"}], "\[IndentingNewLine]", 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pot", "=", 
       RowBox[{"d2SAPot", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", " ", "s"}], "}"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "wfs", ",", "\[IndentingNewLine]", "wfs2D", ",", 
      "\[IndentingNewLine]", "coeffs", ",", "\[IndentingNewLine]", "expand"}],
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"pot", "===", "$Failed"}], ",", "\[IndentingNewLine]", 
      "$Failed", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"wfs", "=", "\[IndentingNewLine]", 
        RowBox[{"d2SCFWavefunction", "[", "\[IndentingNewLine]", 
         RowBox[{"pot", ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "1"}], "}"}], ",", "\[IndentingNewLine]", 
            " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"3", ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "3"}], "}"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"{", 
             RowBox[{"4", ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", "3"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"3", ",", " ", "2"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "4"}], "}"}]}], "\[IndentingNewLine]", 
           "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"wfs2D", "=", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"$D2DVR", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<Points\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"60", ",", " ", "60"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<PotentialOptimize\>\"", "\[Rule]", "False"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<PotentialFunction\>\"", "\[Rule]", "pot"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<NumberOfWavefunctions\>\"", "\[Rule]", "10"}]}], 
          "\[IndentingNewLine]", "]"}], "[", "\"\<Wavefunctions\>\"", "]"}]}],
        ";", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"coeffs", "=", 
          RowBox[{
           RowBox[{"wfs2D", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"2", ",", " ", "3"}], "}"}], "]"}], "]"}], "@", 
           RowBox[{"\"\<Overlaps\>\"", "[", "wfs", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"expand", "=", "\[IndentingNewLine]", 
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Function", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "@", 
                RowBox[{"\"\<Add\>\"", "[", "#2", "]"}]}], "&"}], "@@", 
              "\[IndentingNewLine]", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Scale", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"wfs", "[", "\"\<Wavefunctions\>\"", "]"}], ",", 
                  "#"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
            "\[IndentingNewLine]", "coeffs"}], "\[IndentingNewLine]", "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"expand", "=", 
          RowBox[{"WavefunctionsObject", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"wfs", "[", "\"\<Energies\>\"", "]"}], ",", " ", 
              "expand"}], "}"}], ",", " ", 
            RowBox[{
             RowBox[{"expand", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Grid\>\"", "]"}]}], 
           "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<Coefficients\>\"", "->", "coeffs"}], ","}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<SCFWavefunctions\>\"", "->", "wfs"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<DVRWavefunctions\>\"", "->", "wfs2D"}]}], 
        RowBox[{"(*", 
         RowBox[{",", "\[IndentingNewLine]", 
          RowBox[{"\"\<ExpansionWavefunctions\>\"", "\[Rule]", "expand"}]}], 
         "*)"}], "\[IndentingNewLine]", "|>"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.755901969826437*^9, 3.75590199535301*^9}, {
   3.755902114632306*^9, 3.755902297586977*^9}, {3.7559023303267727`*^9, 
   3.755902455736073*^9}, {3.755904547285879*^9, 3.755904654506433*^9}, {
   3.755967208376379*^9, 3.755967238740172*^9}, {3.755976624500194*^9, 
   3.75597662572068*^9}, {3.755976893692944*^9, 3.755976896046804*^9}, {
   3.7559977022607927`*^9, 3.755997704205274*^9}, 3.757110015947858*^9, {
   3.757184915879159*^9, 3.757184916191264*^9}, {3.757185666009997*^9, 
   3.757185684898992*^9}, {3.757282899373543*^9, 3.757282935026513*^9}, 
   3.757282978835269*^9, {3.7572830192779922`*^9, 3.757283070244713*^9}, 
   3.759790682366228*^9, 3.759790749911735*^9, {3.75981961287276*^9, 
   3.759819612884675*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"f38efd3c-53e4-4975-87af-837b8b6a8d2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cdataFull", "=", 
    RowBox[{"d2SCFCoeffData", "/@", "saGrid"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.75596784155403*^9, 3.755967864152708*^9}, 
   3.756001460445938*^9, {3.757185696858873*^9, 3.757185698038463*^9}, 
   3.757283096717814*^9, 3.759819612907646*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"4f7960d8-284f-49c4-835d-eba452442938"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/Documents/UW/Research/H5+/results/d5_coeffs_and_wfns.mx\>\"", ",", 
    " ", "cdataFull"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.755967866139084*^9, 3.755967898095566*^9}, {
   3.756041879591134*^9, 3.7560418811827917`*^9}, 3.757112603092342*^9, {
   3.7598200698121977`*^9, 3.759820075548443*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"fbea5194-f8c9-4bd4-9046-45454cea46d8"],

Cell[BoxData["\<\"~/Documents/UW/Research/H5+/results/d5_coeffs_and_wfns.mx\"\
\>"], "Output",
 CellChangeTimes->{3.757122954228611*^9, 3.759835547276163*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"d30708e3-1a8f-4f70-8640-c4e17305cd93"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"coefficientData", "=", 
    RowBox[{
    "Import", "@", 
     "\"\<~/Documents/UW/Research/H5+/results/coeffs_and_wfns3.mx\>\""}]}], 
   ";"}], "*)"}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.7560418962190332`*^9, {3.756071828447523*^9, 3.756071836040923*^9}, {
   3.757112608396991*^9, 3.757112617347166*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"4815b4e1-4d63-4cad-9377-514aa0e54b9b"]
}, Closed]],

Cell[CellGroupData[{

Cell["SCF Phases 1 Quantum", "Subsubsubsection",
 CellChangeTimes->{{3.757779727491561*^9, 3.757779732605317*^9}, 
   3.759853115985839*^9, {3.759853147019318*^9, 
   3.759853159476714*^9}},ExpressionUUID->"b668bae0-1215-42c6-85d8-\
5680c382ac73"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"overlapMatrixOneQuantum", ",", " ", "goodSparseOneQuantum"}], 
    "}"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fleng", "=", 
        RowBox[{"Length", "[", "d2SAWavefunctions", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"overlapStates", "=", 
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "3"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"scalingThings", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
       "blerp", ",", "\[IndentingNewLine]", "baseWfnsSCF", ",", 
       "\[IndentingNewLine]", "baseWfnsDVR", ",", "\[IndentingNewLine]", 
       "expansionCoeffs", ",", "\[IndentingNewLine]", "blerpDVR", ",", 
       "\[IndentingNewLine]", "coeffs", ",", "\[IndentingNewLine]", 
       "overlaps", ",", "\[IndentingNewLine]", "goodPlace", ",", 
       "\[IndentingNewLine]", "goodPos", ",", "\[IndentingNewLine]", 
       "goodPairs", ",", "\[IndentingNewLine]", "goodSparseOneQuantum"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "overlapStates"}], "!=", 
         RowBox[{"Length", "@", "scalingThings"}]}], ",", " ", 
        RowBox[{"Throw", "@", "\"\<I'm sad\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fleng", "=", 
       RowBox[{"Length", "[", "d2SAWavefunctions", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"blerp", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"phaseCorrectSCF", "[", "\"\<Wavefunctions\>\"", "]"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"blerpDVR", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"phaseCorrectDVR", "[", "\"\<Wavefunctions\>\"", "]"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"baseWfnsSCF", "=", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
            "blerp"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "overlapStates"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"baseWfnsDVR", "=", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
            "blerpDVR"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "overlapStates"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"coeffs", "=", "\[IndentingNewLine]", 
       RowBox[{"Apply", "[", "\[IndentingNewLine]", 
        RowBox[{"Join", ",", "\[IndentingNewLine]", 
         RowBox[{"scalingThings", "*", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Transpose", "@", "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Diagonal", "[", 
                 RowBox[{"dvrWfs", "@", 
                  RowBox[{"\"\<Overlaps\>\"", "[", "scfWfs", "]"}]}], "]"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"scfWfs", ",", " ", "baseWfnsSCF"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"dvrWfs", ",", " ", "baseWfnsDVR"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"overlaps", "=", 
       RowBox[{"coeffs", ".", 
        RowBox[{"Transpose", "[", "coeffs", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"overlaps", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"goodPlace", "=", 
          RowBox[{"Pick", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "@", "d2SAWavefunctions"}], "]"}], ",", " ", 
            RowBox[{"Values", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "=!=", "$Failed"}], "&"}], "/@", 
              "d2SAWavefunctions"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"goodPos", "=", 
          RowBox[{"Join", "@@", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "+", "goodPlace"}], "&"}], ",", " ", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", 
                RowBox[{
                 RowBox[{"Length", "[", "overlapStates", "]"}], "-", "1"}]}], 
               "]"}], "*", "fleng"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"goodPairs", "=", 
          RowBox[{"Developer`ToPackedArray", "@", 
           RowBox[{"Tuples", "[", 
            RowBox[{"goodPos", ",", " ", "2"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{"goodPairs", "\[Rule]", 
            RowBox[{"Flatten", "@", "overlaps"}]}], ",", 
           RowBox[{
            RowBox[{"Length", "[", "overlapStates", "]"}], "*", "fleng", "*", 
            
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], " ", ",", " ", "0."}], 
          "]"}]}]}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757354866667294*^9, 3.7573548760973597`*^9}, {
   3.757354906250585*^9, 3.757354941508438*^9}, {3.7573549958245277`*^9, 
   3.757355015183893*^9}, {3.757355080246973*^9, 3.7573550946668673`*^9}, {
   3.7573551491228*^9, 3.757355155640161*^9}, {3.7573552817922363`*^9, 
   3.75735532217027*^9}, {3.757355492818199*^9, 3.757355494055044*^9}, 
   3.757533420086323*^9, {3.759790749917697*^9, 3.7597907499210873`*^9}, {
   3.7598532524600363`*^9, 3.759853292147922*^9}, 3.7598678811664753`*^9, {
   3.759867944734968*^9, 3.7598680016292267`*^9}, 3.7598683425877237`*^9, {
   3.7598700964014807`*^9, 3.759870155097356*^9}, {3.759870271822544*^9, 
   3.759870282606887*^9}, {3.759870345855404*^9, 3.759870469148584*^9}, 
   3.7598705327350607`*^9, {3.759870563322926*^9, 3.759870563610783*^9}, 
   3.759871057006386*^9, {3.759871121706298*^9, 3.759871135157216*^9}, 
   3.759871167685328*^9, 3.759871769717258*^9, {3.759871928872045*^9, 
   3.759872040221674*^9}, {3.759872216442994*^9, 3.759872425372468*^9}, {
   3.759872476368827*^9, 3.759872532794771*^9}, {3.7598725712536793`*^9, 
   3.75987260036141*^9}, {3.75987677928537*^9, 3.759876872658758*^9}, {
   3.7598781876051207`*^9, 3.759878204714904*^9}, 3.759904953852916*^9, {
   3.759905147431938*^9, 3.759905149958387*^9}, 3.759905215628162*^9, 
   3.759906954536406*^9, {3.759936077345707*^9, 3.7599360874122887`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"f74f7076-37d6-4613-af57-cee4451b9798"]
}, Closed]],

Cell[CellGroupData[{

Cell["SCF Phases 2 Quanta", "Subsubsubsection",
 CellChangeTimes->{{3.757779727491561*^9, 3.757779732605317*^9}, 
   3.759853115985839*^9, {3.759853147019318*^9, 3.7598531488514767`*^9}, {
   3.75987151874718*^9, 3.75987151967529*^9}, 
   3.759910817272098*^9},ExpressionUUID->"3b2368df-88ec-4d02-a455-\
8391fcc782d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"overlapMatrixTwoQuanta", ",", " ", "goodSparseTwoQuanta"}], 
    "}"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fleng", "=", 
        RowBox[{"Length", "[", "d2SAWavefunctions", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"overlapStates", "=", 
        RowBox[{"{", 
         RowBox[{"4", ",", " ", "5", ",", " ", "6"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"scalingThings", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", 
          RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", 
       "\[IndentingNewLine]", "blerp", ",", "\[IndentingNewLine]", 
       "baseWfnsSCF", ",", "\[IndentingNewLine]", "baseWfnsDVR", ",", 
       "\[IndentingNewLine]", "expansionCoeffs", ",", "\[IndentingNewLine]", 
       "blerpDVR", ",", "\[IndentingNewLine]", "coeffs", ",", 
       "\[IndentingNewLine]", "overlaps", ",", "\[IndentingNewLine]", 
       "goodPlace", ",", "\[IndentingNewLine]", "goodPos", ",", 
       "\[IndentingNewLine]", "goodPairs", ",", "\[IndentingNewLine]", 
       "goodSparseOneQuantum"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "overlapStates"}], "!=", 
         RowBox[{"Length", "@", "scalingThings"}]}], ",", " ", 
        RowBox[{"Throw", "@", "\"\<I'm sad\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fleng", "=", 
       RowBox[{"Length", "[", "d2SAWavefunctions", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"blerp", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"phaseCorrectSCF", "[", "\"\<Wavefunctions\>\"", "]"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"blerpDVR", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"phaseCorrectDVR", "[", "\"\<Wavefunctions\>\"", "]"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"baseWfnsSCF", "=", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
            "blerp"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "overlapStates"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"baseWfnsDVR", "=", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
            "blerpDVR"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "overlapStates"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"coeffs", "=", "\[IndentingNewLine]", 
       RowBox[{"Apply", "[", "\[IndentingNewLine]", 
        RowBox[{"Join", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "scalingThings", "**)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "@", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Developer`ToPackedArray", "[", 
               RowBox[{"Diagonal", "[", 
                RowBox[{"dvrWfs", "@", 
                 RowBox[{"\"\<Overlaps\>\"", "[", "scfWfs", "]"}]}], "]"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"scfWfs", ",", " ", "baseWfnsSCF"}], "}"}]}], 
             "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"dvrWfs", ",", " ", "baseWfnsDVR"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"overlaps", "=", 
       RowBox[{"coeffs", ".", 
        RowBox[{"Transpose", "[", "coeffs", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"overlaps", "*=", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"THIS", " ", "IS", " ", "A", " ", "HACK"}], "..."}], "I", 
           " ", "JUST", " ", "WANT", " ", "TO", " ", "SEE", " ", "WHAT", " ", 
           "COUPLINGS", " ", "DO", " ", "TO", " ", "THE", " ", "SPECTRUM"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"KroneckerProduct", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "1", ",", "   ", "0"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"1", ",", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", " ", "1"}], "}"}], "*", 
              RowBox[{
               RowBox[{"Length", "[", "overlaps", "]"}], "/", "3"}]}]}], 
            "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"overlaps", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"goodPlace", "=", 
          RowBox[{"Pick", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "@", "d2SAWavefunctions"}], "]"}], ",", " ", 
            RowBox[{"Values", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "=!=", "$Failed"}], "&"}], "/@", 
              "d2SAWavefunctions"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"goodPos", "=", 
          RowBox[{"Join", "@@", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "+", "goodPlace"}], "&"}], ",", " ", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", 
                RowBox[{
                 RowBox[{"Length", "[", "overlapStates", "]"}], "-", "1"}]}], 
               "]"}], "*", "fleng"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"goodPairs", "=", 
          RowBox[{"Developer`ToPackedArray", "@", 
           RowBox[{"Tuples", "[", 
            RowBox[{"goodPos", ",", " ", "2"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{"goodPairs", "\[Rule]", 
            RowBox[{"Flatten", "@", "overlaps"}]}], ",", 
           RowBox[{
            RowBox[{"Length", "[", "overlapStates", "]"}], "*", "fleng", "*", 
            
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], " ", ",", " ", "0."}], 
          "]"}]}]}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757354866667294*^9, 3.7573548760973597`*^9}, {
   3.757354906250585*^9, 3.757354941508438*^9}, {3.7573549958245277`*^9, 
   3.757355015183893*^9}, {3.757355080246973*^9, 3.7573550946668673`*^9}, {
   3.7573551491228*^9, 3.757355155640161*^9}, {3.7573552817922363`*^9, 
   3.75735532217027*^9}, {3.757355492818199*^9, 3.757355494055044*^9}, 
   3.757533420086323*^9, {3.759790749917697*^9, 3.7597907499210873`*^9}, {
   3.7598532524600363`*^9, 3.759853292147922*^9}, 3.7598678811664753`*^9, {
   3.759867944734968*^9, 3.7598680016292267`*^9}, 3.7598683425877237`*^9, {
   3.7598700964014807`*^9, 3.759870155097356*^9}, {3.759870271822544*^9, 
   3.759870282606887*^9}, {3.759870345855404*^9, 3.759870469148584*^9}, {
   3.759870522259987*^9, 3.759870559820251*^9}, {3.759877680197548*^9, 
   3.759877704115224*^9}, {3.75987773509205*^9, 3.759877751338303*^9}, {
   3.759877820234329*^9, 3.759877827067329*^9}, {3.759878152670156*^9, 
   3.759878182869166*^9}, {3.759878530615588*^9, 3.759878552800105*^9}, 
   3.759878677109784*^9, 3.7598788783732767`*^9, 3.759879064343486*^9, 
   3.7598791450143003`*^9, {3.759879202355783*^9, 3.759879203841838*^9}, {
   3.759905232764511*^9, 3.759905237446578*^9}, {3.759905276745636*^9, 
   3.759905279382187*^9}, {3.7599064122335243`*^9, 3.759906414048181*^9}, {
   3.759906637769578*^9, 3.7599066464706907`*^9}, {3.7599069600041103`*^9, 
   3.759906965193306*^9}, {3.7599075726022997`*^9, 3.759907581888384*^9}, {
   3.7599076722016287`*^9, 3.759907676493487*^9}, {3.759907822386586*^9, 
   3.7599078395711603`*^9}, {3.759907928959003*^9, 3.759907939477274*^9}, 
   3.759908688432073*^9, 3.7599089327503433`*^9, {3.7599089758889627`*^9, 
   3.7599089935886374`*^9}, {3.75990931946115*^9, 3.759909321531261*^9}, 
   3.759910814345253*^9, 3.759910961176053*^9, 3.7599110711166077`*^9, {
   3.759911171863608*^9, 3.759911177494233*^9}, {3.75991157065758*^9, 
   3.759911642464162*^9}, 3.7599117885502377`*^9, {3.75991189124507*^9, 
   3.759911900241696*^9}, {3.759912075999827*^9, 3.7599120792563066`*^9}, 
   3.7599123111677313`*^9, {3.759912343078109*^9, 3.759912377686839*^9}, 
   3.759912648421782*^9, {3.759936092346624*^9, 3.759936101659204*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"82d75b28-af05-4765-a4bb-beae6a52c652"]
}, Closed]],

Cell[CellGroupData[{

Cell["Clean Up", "Subsubsubsection",
 CellChangeTimes->{{3.759937354103619*^9, 
  3.75993735634198*^9}},ExpressionUUID->"50c9ca96-ea69-46ea-bc6b-\
c699700d0c3f"],

Cell[BoxData[{
 RowBox[{"phaseCorrectDVR", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{"phaseCorrectSCF", "//", "Clear"}]}], "Input",
 CellChangeTimes->{{3.759937326647017*^9, 3.75993737623814*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"debd71e1-0b8a-4539-8eeb-fe23c3388d1c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wavefunctions", "Subsection",
 CellChangeTimes->{{3.745345876844707*^9, 3.7453458789404716`*^9}, {
  3.757188013003214*^9, 
  3.757188014634042*^9}},ExpressionUUID->"d83284f2-0e91-4fe6-b769-\
f5e59621de11"],

Cell[CellGroupData[{

Cell["Hamiltonian", "Subsubsubsection",
 CellChangeTimes->{{3.7598617403079157`*^9, 
  3.7598617442271233`*^9}},ExpressionUUID->"661a11e8-829b-492d-8bd6-\
b2d3875f6534"],

Cell[CellGroupData[{

Cell["Coupled KE", "Subsubsubsubsection",
 CellChangeTimes->{{3.744754255817916*^9, 
  3.744754278817781*^9}},ExpressionUUID->"045dad9c-2e1c-47d9-b488-\
27eef7094444"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d2CoupledKineticEnergyU", "//", "Clear"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d2CoupledKineticEnergyU", "[", 
    RowBox[{"overlapMat_", ",", " ", "i___"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lens", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"{", "i", "}"}], "]"}]}], ",", "\[IndentingNewLine]", "woop",
        ",", "\[IndentingNewLine]", 
       RowBox[{"waap", "=", 
        RowBox[{"$D5DVR", "[", "\"\<KineticEnergy\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", "klap"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"woop", "=", "overlapMat"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "woop", "]"}], "=!=", 
         RowBox[{"lens", "*", 
          RowBox[{"Length", "[", "waap", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Throw", "[", "\"\<h2SCFOverlapMat misdimensioned\>\"", "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"klap", "=", "\[IndentingNewLine]", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"{", 
               RowBox[{"lens", ",", " ", "lens"}], "}"}]}], "]"}], ",", " ", 
            "waap"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"woop", "*", "klap"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.738613858948965*^9, 3.738613925114476*^9}, {
   3.738615026962035*^9, 3.738615040330036*^9}, {3.744742909734215*^9, 
   3.7447429138289537`*^9}, {3.744742967521903*^9, 3.744742968664618*^9}, {
   3.744754297755559*^9, 3.74475433633745*^9}, {3.7447544483595*^9, 
   3.744754526767173*^9}, {3.744754560139894*^9, 3.7447546206445837`*^9}, {
   3.745081488381971*^9, 3.745081490234047*^9}, {3.7450865752911053`*^9, 
   3.745086600876523*^9}, {3.747415006244911*^9, 3.7474150074917173`*^9}, {
   3.755987785616908*^9, 3.755987786776649*^9}, {3.755990959850429*^9, 
   3.7559909611706247`*^9}, {3.7559934574166927`*^9, 3.755993457831195*^9}, {
   3.755993519177783*^9, 3.755993519229782*^9}, 3.755993867418201*^9, {
   3.756068622050139*^9, 3.756068688933175*^9}, {3.7560687466227293`*^9, 
   3.756068761141039*^9}, {3.7560695248463907`*^9, 3.7560695319463263`*^9}, {
   3.75606961260058*^9, 3.756069613191127*^9}, {3.756070468004884*^9, 
   3.75607047060878*^9}, {3.756072219781233*^9, 3.7560722375821333`*^9}, {
   3.756131638459578*^9, 3.756131660038795*^9}, {3.7561412014166393`*^9, 
   3.756141207833145*^9}, {3.757309739999694*^9, 3.757309740645792*^9}, {
   3.757609280722396*^9, 3.757609304733947*^9}, 3.757609353816255*^9, {
   3.7576094459458427`*^9, 3.757609454902361*^9}, {3.7578031435613422`*^9, 
   3.757803175206655*^9}, {3.7578033867130404`*^9, 3.7578033988290453`*^9}, {
   3.757805198051059*^9, 3.757805244014543*^9}, 3.759790645028092*^9, {
   3.759819613084373*^9, 3.759819613094151*^9}, {3.759863219664603*^9, 
   3.759863233022265*^9}, 3.7598667630209703`*^9, {3.759866801591633*^9, 
   3.759866801598983*^9}, {3.759936216203765*^9, 3.7599362210709143`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"0d54f982-3783-41d6-b4f1-e9639e482ef9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Pots", "Subsubsubsubsection",
 CellChangeTimes->{{3.7451654565803213`*^9, 
  3.7451654572966022`*^9}},ExpressionUUID->"f6e129c6-eae7-453b-9a9d-\
69708761f21d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"d2AveragedEnergyU", "[", "i_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "===", "$Failed"}], ",", " ", 
        RowBox[{
         RowBox[{"10", "^", "9"}], "//", "N"}], ",", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "&"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Values", "@", "d2SAWavefunctions"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"d5AdiabaticPotU", "[", "i___", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"SparseArray", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Band", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1"}], "}"}], "]"}], "\[Rule]", 
     "\[IndentingNewLine]", 
     RowBox[{"Developer`ToPackedArray", "@", "\[IndentingNewLine]", 
      RowBox[{"Apply", "[", 
       RowBox[{"Join", ",", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"d2AveragedEnergyU", "[", "#", "]"}], "&"}], ",", " ", 
          RowBox[{"{", "i", "}"}]}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.738613858948965*^9, 3.738613925114476*^9}, {
   3.738615026962035*^9, 3.738615040330036*^9}, {3.747415013348444*^9, 
   3.747415014395459*^9}, 3.755987897481905*^9, {3.757172789949011*^9, 
   3.757172795837172*^9}, 3.757268269907055*^9, {3.757804276400836*^9, 
   3.757804299739188*^9}, {3.7578047399895363`*^9, 3.757804740642438*^9}, 
   3.759790750101762*^9, {3.759819613136055*^9, 3.759819613141036*^9}, {
   3.759866801606738*^9, 3.7598668016135902`*^9}, {3.759936205985243*^9, 
   3.759936212030242*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"429ffc1c-997e-4dc9-a060-97d44ee846fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["Grid", "Subsubsubsubsection",
 CellChangeTimes->{{3.757804645745041*^9, 
  3.757804646235776*^9}},ExpressionUUID->"3f1b69b5-52cd-4a3a-a41c-\
d05a599410d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coupledGrid", "[", "i__", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{
        RowBox[{"$D5DVR", "[", "\"\<Grid\>\"", "]"}], "@", "\"\<Grid\>\""}]}],
       ",", " ", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "i", "}"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"CoordinateGridObject", "@", "\[IndentingNewLine]", 
     RowBox[{"Apply", "[", "\[IndentingNewLine]", 
      RowBox[{"Join", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"m", "=", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", "*", "#", "*", 
                  RowBox[{"Min", "[", "g", "]"}]}], ",", " ", "0"}], "}"}], 
               ",", " ", 
               RowBox[{
                RowBox[{"Dimensions", "[", "g", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"g", "-", "m"}]}], "\[IndentingNewLine]", "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"l", "-", "1"}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7578043065202303`*^9, 3.757804398345067*^9}, {
   3.7578045969811573`*^9, 3.7578046357888937`*^9}, 3.759790645062038*^9, 
   3.7598667630421*^9, 3.759936199272749*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"bdc533db-b89e-4e1c-ab76-a1d8de6c9234"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hammer", "Subsubsubsubsection",
 CellChangeTimes->{{3.745165386325832*^9, 
  3.745165387802412*^9}},ExpressionUUID->"f62ac295-0082-4507-b0fd-\
f45262eed41d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d5AdiabatCoupledHamU", "[", 
    RowBox[{"i_", ",", " ", "j_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d5AdiabaticPotU", "[", 
     RowBox[{"i", ",", " ", "j"}], "]"}], "+", 
    RowBox[{"d2CoupledKineticEnergyU", "[", 
     RowBox[{"i", ",", " ", "j"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.745165447830452*^9, 3.745165608941931*^9}, {
   3.74516572328901*^9, 3.7451657621078176`*^9}, {3.745165833220704*^9, 
   3.745165890970765*^9}, {3.745179504412858*^9, 3.745179516767619*^9}, {
   3.747415016885188*^9, 3.747415024811818*^9}, 3.755989105357923*^9, 
   3.755989213758491*^9, {3.755996391763159*^9, 3.755996399349999*^9}, 
   3.7598196131540413`*^9, 3.7598668016204033`*^9, {3.7599361916859827`*^9, 
   3.7599361945986433`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"e2bdacf9-591b-44e6-97a8-19fad3b4b246"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsubsubsection",
 CellChangeTimes->{{3.755997049266605*^9, 
  3.755997052040826*^9}},ExpressionUUID->"11a8bd2f-a085-4196-8440-\
fd68a2063226"],

Cell[CellGroupData[{

Cell["No Quanta", "Subsubsubsubsection",
 CellChangeTimes->{{3.759863270956705*^9, 
  3.75986327465889*^9}},ExpressionUUID->"02a1cb09-61ba-4ba8-86c3-\
aa95c900bae2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noQuantaWfns", "=", "\[IndentingNewLine]", 
   RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
    RowBox[{"\"\<Diagonalize\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"$D5DVR", "[", "\"\<KineticEnergy\>\"", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"d5AdiabaticPotU", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"$D5DVR", "[", "\"\<Grid\>\"", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<NumberOfWavefunctions\>\"", "\[Rule]", "100"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ArnoldiIterations\>\"", "\[Rule]", "5000"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PruningEnergy\>\"", "\[Rule]", 
      RowBox[{"Scaled", "[", ".9", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.759863278149651*^9, 3.7598633380347147`*^9}, {
  3.7598667630526247`*^9, 3.759866763056095*^9}, {3.759936256583275*^9, 
  3.759936259790392*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"53a6a50d-0b1b-4222-be2c-c759f01b9491"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"noQuantaWfns", "[", "\"\<Energies\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "-", 
  RowBox[{"Min", "[", 
   RowBox[{"d2AveragedEnergyU", "[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75990734447335*^9, 3.759907359239971*^9}, 
   3.7599362785194883`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"ab3cbf45-572e-4f9f-ba3c-2179694862f8"],

Cell[BoxData["675.015764910786`"], "Output",
 CellChangeTimes->{{3.759907355704606*^9, 3.75990735968248*^9}, 
   3.7599119502552147`*^9, {3.759936272339731*^9, 3.759936293773349*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"e3c987c9-8ed2-4111-99fd-e18155e4ecf2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["One Quantum", "Subsubsubsubsection",
 CellChangeTimes->{{3.759863201853817*^9, 3.7598632047720013`*^9}, 
   3.759863241299552*^9},ExpressionUUID->"d35a8afc-62a0-40c1-9534-\
72d0a7199cc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"oneQuantumWfns", "=", "\[IndentingNewLine]", 
     RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
      RowBox[{"\"\<Diagonalize\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"d2CoupledKineticEnergyU", "[", 
        RowBox[{"goodSparseOneQuantum", ",", " ", "2", ",", " ", "3"}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"d5AdiabaticPotU", "[", 
        RowBox[{"2", ",", " ", "3"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"coupledGrid", "[", 
        RowBox[{"2", ",", " ", "3"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<NumberOfWavefunctions\>\"", "\[Rule]", "100"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<ArnoldiIterations\>\"", "\[Rule]", "5000"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<PruningEnergy\>\"", "\[Rule]", 
        RowBox[{"Scaled", "[", ".9", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "//", "AbsoluteTiming"}], "//", "First"}]], "Input",
 CellChangeTimes->{{3.7451704324353943`*^9, 3.7451704939708557`*^9}, {
   3.745170636805746*^9, 3.745170637738531*^9}, {3.7451707756518106`*^9, 
   3.745170785832059*^9}, {3.745910750525032*^9, 3.74591076049893*^9}, {
   3.745936753573188*^9, 3.745936754486637*^9}, {3.7559880313632917`*^9, 
   3.755988051887361*^9}, {3.755988133202392*^9, 3.7559882074390793`*^9}, 
   3.755988354481037*^9, {3.7559886554565277`*^9, 3.755988656471874*^9}, {
   3.755991090352387*^9, 3.7559910934634867`*^9}, 3.755994621351981*^9, {
   3.7559963491472197`*^9, 3.755996355921508*^9}, {3.755996408002249*^9, 
   3.75599641758843*^9}, {3.755997293648031*^9, 3.755997294005706*^9}, 
   3.7559973366490803`*^9, {3.7560469406176777`*^9, 3.756046941165394*^9}, {
   3.7560469874032173`*^9, 3.756047001468123*^9}, {3.756072246357415*^9, 
   3.756072246578965*^9}, {3.756150894900334*^9, 3.756150898233931*^9}, {
   3.756156370299522*^9, 3.756156370647628*^9}, 3.756160647431408*^9, {
   3.756162513639196*^9, 3.756162514317853*^9}, 3.7561688155087013`*^9, {
   3.7567751180616693`*^9, 3.756775118461627*^9}, {3.756775286597139*^9, 
   3.7567753057515593`*^9}, {3.756775962376075*^9, 3.756775965951539*^9}, {
   3.756776119883643*^9, 3.756776120330359*^9}, {3.7572682665138893`*^9, 
   3.757268272944707*^9}, {3.7573097464934998`*^9, 3.757309746716404*^9}, {
   3.7575463689104137`*^9, 3.7575463691883087`*^9}, {3.757805123293702*^9, 
   3.757805123408701*^9}, 3.759819613172501*^9, {3.7598632082477293`*^9, 
   3.7598632122769012`*^9}, {3.759863254080076*^9, 3.759863285400076*^9}, {
   3.759863476931889*^9, 3.759863480744416*^9}, 3.75986680163024*^9, 
   3.7598680563237457`*^9, {3.7599362500223103`*^9, 3.759936251141231*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"4b258cc3-ce37-4c9e-adff-9a6ea91c8fad"],

Cell[BoxData["21.078383`"], "Output",
 CellChangeTimes->{3.759862133400976*^9, 3.759862224768128*^9, 
  3.759863503966992*^9, 3.759868048640102*^9, 3.759870600060157*^9, 
  3.759877875548911*^9, 3.759904980028247*^9, 3.759905083606784*^9, 
  3.7599069446130457`*^9, 3.759911971210985*^9, 3.75993629356242*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"041a54ba-13fd-4f8f-b988-9ee23d0bb218"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"overlapMatrixOneQuantum", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{"goodSparseOneQuantum", "//", "Clear"}]}], "Input",
 CellChangeTimes->{{3.759937144716659*^9, 3.759937161217331*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"41c9ad1a-4478-446a-8b86-49c3a33eb64a"],

Cell["ZPE", "Text",
 CellChangeTimes->{{3.756097013631378*^9, 3.756097014005886*^9}, {
  3.7561598889549313`*^9, 3.756159889714182*^9}, {3.756160432137156*^9, 
  3.7561604328397913`*^9}},ExpressionUUID->"d86c28f4-20d7-49c0-b739-\
7be97d970e14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"oneQuantumWfns", "[", "\"\<Energies\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "-", 
  RowBox[{"Min", "[", 
   RowBox[{"d2AveragedEnergyU", "[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756097005639647*^9, 3.7560970096318417`*^9}, 
   3.756156413274461*^9, 3.759819613184708*^9, 3.759866801636538*^9, 
   3.75986803590273*^9, {3.759877871431007*^9, 3.7598778747492447`*^9}, 
   3.759936282299836*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"b4a10f0a-4dc8-4342-9579-b1755acb334e"],

Cell[BoxData["686.1070139938965`"], "Output",
 CellChangeTimes->{3.7598778760643873`*^9, 3.759904980317428*^9, 
  3.759905083730939*^9, 3.7599070841304207`*^9, 3.7599362939734707`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"e57cbc98-d331-43d0-9a5d-476e1983a9fd"]
}, Open  ]],

Cell["Base Freq.", "Text",
 CellChangeTimes->{{3.756097013631378*^9, 3.756097014005886*^9}, {
  3.7561598889549313`*^9, 3.756159889714182*^9}, {3.756160432137156*^9, 
  3.7561604328397913`*^9}, {3.759907319043936*^9, 
  3.7599073229288807`*^9}},ExpressionUUID->"93931958-2f00-4a97-811c-\
7583ea54a2dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"oneQuantumWfns", "[", "\"\<Energies\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "-", 
  RowBox[{
   RowBox[{"noQuantaWfns", "[", "\"\<Energies\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756097005639647*^9, 3.7560970096318417`*^9}, 
   3.756156413274461*^9, 3.759819613184708*^9, 3.759866801636538*^9, 
   3.75986803590273*^9, {3.759877871431007*^9, 3.7598778747492447`*^9}, {
   3.759907302923341*^9, 3.7599073080652313`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"260e188e-4edf-4cd2-b8da-372d1fa638bd"],

Cell[BoxData["2187.7299372385605`"], "Output",
 CellChangeTimes->{3.759907308370613*^9, 3.759936294130336*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"477a866b-f627-4ff3-a9a5-d9fd3821b26e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two Quanta", "Subsubsubsubsection",
 CellChangeTimes->{{3.759863201853817*^9, 3.7598632047720013`*^9}, 
   3.759863241299552*^9, {3.759863559360339*^9, 3.759863562030024*^9}, 
   3.759864913613227*^9},ExpressionUUID->"2a8d6ad2-2a8a-48dc-9f6d-\
e6c981ab6ebb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"twoQuantaWfns", "=", "\[IndentingNewLine]", 
     RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
      RowBox[{"\"\<Diagonalize\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"d2CoupledKineticEnergyU", "[", 
        RowBox[{
        "goodSparseTwoQuanta", ",", " ", "4", ",", " ", "5", ",", " ", "6"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"d5AdiabaticPotU", "[", 
        RowBox[{"4", ",", " ", "5", ",", " ", "6"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"coupledGrid", "[", 
        RowBox[{"4", ",", " ", "5", ",", " ", "6"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<NumberOfWavefunctions\>\"", "\[Rule]", "100"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<ArnoldiIterations\>\"", "\[Rule]", "5000"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<PruningEnergy\>\"", "\[Rule]", 
        RowBox[{"Scaled", "[", ".9", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "//", "AbsoluteTiming"}], "//", "First"}]], "Input",
 CellChangeTimes->{{3.7451704324353943`*^9, 3.7451704939708557`*^9}, {
   3.745170636805746*^9, 3.745170637738531*^9}, {3.7451707756518106`*^9, 
   3.745170785832059*^9}, {3.745910750525032*^9, 3.74591076049893*^9}, {
   3.745936753573188*^9, 3.745936754486637*^9}, {3.7559880313632917`*^9, 
   3.755988051887361*^9}, {3.755988133202392*^9, 3.7559882074390793`*^9}, 
   3.755988354481037*^9, {3.7559886554565277`*^9, 3.755988656471874*^9}, {
   3.755991090352387*^9, 3.7559910934634867`*^9}, 3.755994621351981*^9, {
   3.7559963491472197`*^9, 3.755996355921508*^9}, {3.755996408002249*^9, 
   3.75599641758843*^9}, {3.755997293648031*^9, 3.755997294005706*^9}, 
   3.7559973366490803`*^9, {3.7560469406176777`*^9, 3.756046941165394*^9}, {
   3.7560469874032173`*^9, 3.756047001468123*^9}, {3.756072246357415*^9, 
   3.756072246578965*^9}, {3.756150894900334*^9, 3.756150898233931*^9}, {
   3.756156370299522*^9, 3.756156370647628*^9}, 3.756160647431408*^9, {
   3.756162513639196*^9, 3.756162514317853*^9}, 3.7561688155087013`*^9, {
   3.7567751180616693`*^9, 3.756775118461627*^9}, {3.756775286597139*^9, 
   3.7567753057515593`*^9}, {3.756775962376075*^9, 3.756775965951539*^9}, {
   3.756776119883643*^9, 3.756776120330359*^9}, {3.7572682665138893`*^9, 
   3.757268272944707*^9}, {3.7573097464934998`*^9, 3.757309746716404*^9}, {
   3.7575463689104137`*^9, 3.7575463691883087`*^9}, {3.757805123293702*^9, 
   3.757805123408701*^9}, 3.759819613172501*^9, {3.7598632082477293`*^9, 
   3.7598632122769012`*^9}, {3.759863254080076*^9, 3.759863285400076*^9}, {
   3.759863476931889*^9, 3.759863480744416*^9}, {3.759863563336294*^9, 
   3.7598635902979183`*^9}, 3.75986680164673*^9, {3.759868057969713*^9, 
   3.7598680601286087`*^9}, {3.7599097121079187`*^9, 3.759909724486381*^9}, {
   3.7599108466628428`*^9, 3.759910847942936*^9}, {3.7599115466992207`*^9, 
   3.759911547244204*^9}, {3.759911941716371*^9, 3.7599119434203453`*^9}, {
   3.759936186035336*^9, 3.759936188231084*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"6ffd7bf9-f5b7-4875-a4f5-2eddac169bd7"],

Cell[BoxData["58.89744`"], "Output",
 CellChangeTimes->{3.759912028448772*^9, 3.7599123957275467`*^9, 
  3.7599124603360147`*^9, 3.7599138720407133`*^9, 3.759936367891098*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"b67fad2b-71c5-423b-a64b-e8a5d24ad00b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"overlapMatrixTwoQuanta", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{"goodSparseTwoQuanta", "//", "Clear"}]}], "Input",
 CellChangeTimes->{{3.759937144716659*^9, 3.759937151640625*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"3f298956-beb1-4136-b02d-78fe38d36db8"],

Cell["ZPE", "Text",
 CellChangeTimes->{{3.756097013631378*^9, 3.756097014005886*^9}, {
  3.7561598889549313`*^9, 3.756159889714182*^9}, {3.756160432137156*^9, 
  3.7561604328397913`*^9}},ExpressionUUID->"c5780ee4-242a-4115-9f21-\
75caddb23721"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"twoQuantaWfns", "[", "\"\<Energies\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "-", 
  RowBox[{"Min", "[", 
   RowBox[{"d2AveragedEnergyU", "[", "4", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756097005639647*^9, 3.7560970096318417`*^9}, 
   3.756156413274461*^9, 3.759819613184708*^9, 3.759866801636538*^9, 
   3.75986803590273*^9, {3.759877871431007*^9, 3.7598778747492447`*^9}, {
   3.759907330795129*^9, 3.7599073371765223`*^9}, 3.7599363115965433`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"18d770a3-d861-4d35-8a7a-4ab9c2f4660d"],

Cell[BoxData["709.974010644306`"], "Output",
 CellChangeTimes->{3.7598778760643873`*^9, 3.759904980317428*^9, 
  3.759905083730939*^9, 3.7599070841304207`*^9, 3.759907337480392*^9, 
  3.75990805978992*^9, 3.7599086715558434`*^9, 3.759908756525187*^9, 
  3.759909056396885*^9, 3.759909777909807*^9, 3.7599099523414917`*^9, 
  3.7599105812843437`*^9, 3.759910699415064*^9, 3.759910935234254*^9, 
  3.759911025982766*^9, 3.75991114121134*^9, 3.759912460697867*^9, 
  3.759913872668456*^9, 3.759936368062422*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"1d2e1b72-48d0-4ef3-a6b4-94b12d43bd1d"]
}, Open  ]],

Cell["Base Freq.", "Text",
 CellChangeTimes->{{3.756097013631378*^9, 3.756097014005886*^9}, {
  3.7561598889549313`*^9, 3.756159889714182*^9}, {3.756160432137156*^9, 
  3.7561604328397913`*^9}, {3.759907319043936*^9, 
  3.7599073229288807`*^9}},ExpressionUUID->"f3a93a30-2222-4766-a8f6-\
13e3e726512d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"twoQuantaWfns", "[", "\"\<Energies\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "-", 
  RowBox[{
   RowBox[{"noQuantaWfns", "[", "\"\<Energies\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756097005639647*^9, 3.7560970096318417`*^9}, 
   3.756156413274461*^9, 3.759819613184708*^9, 3.759866801636538*^9, 
   3.75986803590273*^9, {3.759877871431007*^9, 3.7598778747492447`*^9}, {
   3.759907302923341*^9, 3.7599073080652313`*^9}, 3.75990737095509*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"3cfcdf75-d2e8-458d-a081-c69407a09e8d"],

Cell[BoxData["4372.815175368683`"], "Output",
 CellChangeTimes->{
  3.759907308370613*^9, {3.759907371341749*^9, 3.7599073733228607`*^9}, 
   3.759908059886715*^9, 3.759908671763217*^9, 3.759908756356241*^9, 
   3.759909056523041*^9, 3.759909778072364*^9, 3.7599099524803877`*^9, 
   3.759910581482346*^9, 3.759910699550853*^9, 3.759910935428645*^9, 
   3.759911026124249*^9, 3.7599111413258057`*^9, 3.75991246087004*^9, 
   3.7599138727808447`*^9, 3.759936368191773*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"7d28fa62-d491-4233-8ae1-274d3501ee42"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Projections", "Subsubsubsection",
 CellChangeTimes->{{3.7561678647869797`*^9, 3.756167869649324*^9}, 
   3.759864367368926*^9},ExpressionUUID->"978daa61-b3c3-40d5-9f10-\
9f30736c1f28"],

Cell[CellGroupData[{

Cell["One Quantum", "Subsubsubsubsection",
 CellChangeTimes->{
  3.759864375517325*^9},ExpressionUUID->"cd55872d-01bb-4936-afb0-\
e64ae99eb9ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oneQuantumProjections", "=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g2", "=", 
        RowBox[{"$D5DVR", "[", "\"\<Grid\>\"", "]"}]}], ",", " ", 
       RowBox[{"g", "=", 
        RowBox[{"Min", "@", 
         RowBox[{
          RowBox[{"$D5DVR", "[", "\"\<Grid\>\"", "]"}], "@", 
          "\"\<Grid\>\""}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"GridFunctionObject", "[", "\[IndentingNewLine]", 
                 RowBox[{"g2", ",", "\[IndentingNewLine]", 
                  RowBox[{"#", "@", "\"\<Values\>\""}]}], 
                 "\[IndentingNewLine]", "]"}], "&"}], "/@", 
               RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}]}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"$D5DVR", "[", "\"\<Grid\>\"", "]"}]}], 
           "\[IndentingNewLine]", "]"}], "&"}], "@", 
         RowBox[{"oneQuantumWfns", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{"#", ";;", "#2"}]}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", " ", "1"}], "]"}], "*", "60"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", " ", "2"}], "]"}], "*", "60"}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756167883406499*^9, 3.756167899864807*^9}, {
   3.756167953535864*^9, 3.756167968596747*^9}, {3.756168028325548*^9, 
   3.756168039946423*^9}, {3.757271006118342*^9, 3.7572710099389*^9}, {
   3.7572730700036917`*^9, 3.7572730928353443`*^9}, {3.75727312979388*^9, 
   3.757273233669076*^9}, {3.7575464258858967`*^9, 3.7575464260053864`*^9}, 
   3.7597906458966303`*^9, {3.7598636039909973`*^9, 3.759863615616287*^9}, 
   3.759866763082143*^9, 3.75993617612542*^9, {3.759936374516346*^9, 
   3.75993638729912*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"c2c2266d-1e78-4fcb-a9f6-cc9a45cde704"]
}, Closed]],

Cell[CellGroupData[{

Cell["Two Quanta", "Subsubsubsubsection",
 CellChangeTimes->{{3.759864375517325*^9, 
  3.7598643830009813`*^9}},ExpressionUUID->"a332bdd4-17f2-4c04-9f34-\
3b14ae630daf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"twoQuantaProjections", "=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g2", "=", 
        RowBox[{"$D5DVR", "[", "\"\<Grid\>\"", "]"}]}], ",", " ", 
       RowBox[{"g", "=", 
        RowBox[{"Min", "@", 
         RowBox[{
          RowBox[{"$D5DVR", "[", "\"\<Grid\>\"", "]"}], "@", 
          "\"\<Grid\>\""}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"GridFunctionObject", "[", "\[IndentingNewLine]", 
                 RowBox[{"g2", ",", "\[IndentingNewLine]", 
                  RowBox[{"#", "@", "\"\<Values\>\""}]}], 
                 "\[IndentingNewLine]", "]"}], "&"}], "/@", 
               RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}]}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"$D5DVR", "[", "\"\<Grid\>\"", "]"}]}], 
           "\[IndentingNewLine]", "]"}], "&"}], "@", 
         RowBox[{"twoQuantaWfns", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{"#", ";;", "#2"}]}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", " ", "2"}], "]"}], "*", "60"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", " ", "3"}], "]"}], "*", "60"}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756167883406499*^9, 3.756167899864807*^9}, {
   3.756167953535864*^9, 3.756167968596747*^9}, {3.756168028325548*^9, 
   3.756168039946423*^9}, {3.757271006118342*^9, 3.7572710099389*^9}, {
   3.7572730700036917`*^9, 3.7572730928353443`*^9}, {3.75727312979388*^9, 
   3.757273233669076*^9}, {3.7575464258858967`*^9, 3.7575464260053864`*^9}, {
   3.757804899379428*^9, 3.757804928743814*^9}, {3.759261276882699*^9, 
   3.759261280871253*^9}, {3.759261591112032*^9, 3.759261611009453*^9}, {
   3.759261651562992*^9, 3.7592616531051893`*^9}, {3.759790645909379*^9, 
   3.759790645917495*^9}, {3.7598636233518467`*^9, 3.759863636249715*^9}, {
   3.759866763092395*^9, 3.7598667631000347`*^9}, {3.759909359492629*^9, 
   3.759909388740205*^9}, {3.759913778901389*^9, 3.759913797802547*^9}, {
   3.759914004557048*^9, 3.759914008006399*^9}, {3.759914050046172*^9, 
   3.75991406886657*^9}, {3.759936164316576*^9, 3.7599361711308537`*^9}, 
   3.7599363226754*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"72b162b1-1ba7-409b-a4ee-e590fd16db8b"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectrum", "Subsection",
 CellChangeTimes->{{3.759864388824855*^9, 
  3.759864390216895*^9}},ExpressionUUID->"55f5d3d2-d649-4ff5-b7f3-\
1717d85914ca"],

Cell[CellGroupData[{

Cell["Transition Moments", "Subsubsection",
 CellChangeTimes->{{3.74042009424655*^9, 
  3.740420098492478*^9}},ExpressionUUID->"6f475f16-b865-468c-9ff6-\
eef8e8d26710"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"rephasingData", "=", "\[IndentingNewLine]", 
    RowBox[{"getPhaseCorrection", "[", 
     RowBox[{
      RowBox[{"Values", "@", "fullD2SAWfs"}], ",", " ", 
      RowBox[{"Keys", "[", "fullD2SAWfs", "]"}], ",", " ", 
      RowBox[{"Range", "[", "10", "]"}]}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.757354866667294*^9, 3.7573548760973597`*^9}, {
   3.757354906250585*^9, 3.757354941508438*^9}, {3.7573549958245277`*^9, 
   3.757355015183893*^9}, {3.757355080246973*^9, 3.7573550946668673`*^9}, {
   3.7573551491228*^9, 3.757355155640161*^9}, {3.7573552817922363`*^9, 
   3.75735532217027*^9}, {3.757355492818199*^9, 3.757355494055044*^9}, 
   3.757533420086323*^9, {3.75979075018757*^9, 3.759790750191478*^9}, {
   3.75986442234818*^9, 3.759864423452201*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"1d613332-05ae-477e-aa8e-f70d5c897780"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"rephasedH2s2", "=", "\[IndentingNewLine]", 
    RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Keys", "[", "d2SAWavefunctions", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"rephasingData", "[", "\"\<Wavefunctions\>\"", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.757354866667294*^9, 3.7573548760973597`*^9}, {
   3.757354906250585*^9, 3.757354941508438*^9}, {3.7573549958245277`*^9, 
   3.757355015183893*^9}, {3.757355080246973*^9, 3.7573550946668673`*^9}, {
   3.7573551491228*^9, 3.757355155640161*^9}, {3.7573552817922363`*^9, 
   3.75735533449471*^9}, {3.7573553677318573`*^9, 3.757355370982264*^9}, {
   3.7573554323668423`*^9, 3.757355450167128*^9}, {3.757533416983762*^9, 
   3.757533417212749*^9}, 3.7597907502010117`*^9},
 CellLabel->
  "In[143]:=",ExpressionUUID->"5208a761-e36b-4f12-8a1e-d9d48e93a13b"],

Cell[CellGroupData[{

Cell["Build Base Dipole Vectors", "Subsubsubsection",
 CellChangeTimes->{{3.757310355612214*^9, 
  3.75731036145855*^9}},ExpressionUUID->"3b4bac79-c5d9-4424-9817-\
13019c17897c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hhh", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/Documents/UW/Research/H5+/inputs/recentered_dipole_surface.mx\>\"",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"newInterp", "=", "\[IndentingNewLine]", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"hhh", "[", "\"\<Grid\>\"", "]"}], ",", " ", "3"}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"List", "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"hhh", "[", "\"\<ValuesOnGrid\>\"", "]"}], ",", " ", "3"}], 
         "]"}]}], ",", "\[IndentingNewLine]", "2"}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"0.", "&"}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2SAInterpolatedDipoleSurface", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", " ", "s_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R1", "=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2.", "]"}]}], 
        RowBox[{"(", 
         RowBox[{"a", "+", "s"}], ")"}]}]}], ",", " ", 
      RowBox[{"R2", "=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2.", "]"}]}], 
        RowBox[{"(", 
         RowBox[{"s", "-", "a"}], ")"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newInterp", "[", 
      RowBox[{
       RowBox[{"Sequence", "@@", 
        RowBox[{"Transpose", "[", "#", "]"}]}], ",", " ", "R1", ",", " ", 
       "R2"}], "]"}], "&"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.741151599032167*^9, 3.7411516152656507`*^9}, {
   3.7411516536812887`*^9, 3.741151669897037*^9}, {3.741151702330139*^9, 
   3.741151801705586*^9}, {3.741151834256665*^9, 3.741151886855463*^9}, {
   3.741151930880084*^9, 3.741151949677331*^9}, {3.741152031500819*^9, 
   3.741152033364304*^9}, {3.741152287432192*^9, 3.741152289026104*^9}, {
   3.741152458896369*^9, 3.741152459403281*^9}, {3.7411526787286377`*^9, 
   3.741152705279117*^9}, {3.741152763282712*^9, 3.741152853171748*^9}, {
   3.7422701589773893`*^9, 3.742270163127624*^9}, {3.756478440237261*^9, 
   3.756478440564061*^9}, {3.7572229156102667`*^9, 3.7572229939803753`*^9}, {
   3.757223206017478*^9, 3.757223207626034*^9}, {3.757268350722116*^9, 
   3.757268356407729*^9}, 3.75979075020986*^9},
 CellLabel->
  "In[144]:=",ExpressionUUID->"d08f9ee4-97ac-442c-b466-a586aa107ac2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SADipoleVectors", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/Documents/UW/Research/H5+/results/d5_sa_dipole_vecs.mx\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756773900353779*^9, 3.756773903694234*^9}, 
   3.759790750218927*^9, 3.759819613517144*^9, 
   3.759864486486392*^9},ExpressionUUID->"456c2d95-5ec9-4a86-89e9-\
a3b03cef561b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SADipoleVectors", "=", "\[IndentingNewLine]", 
   RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fg", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"SelectFirst", "[", 
            RowBox[{"rephasedH2s2", ",", " ", 
             RowBox[{
              RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}], "[", 
           "\"\<Grid\>\"", "]"}], "@", "\"\<Points\>\""}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Developer`ToPackedArray", "[", 
           RowBox[{
            RowBox[{"d2SAInterpolatedDipoleSurface", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "]"}], "@", "fg"}],
            "]"}], ",", "\[IndentingNewLine]", "$Failed"}], 
         "\[IndentingNewLine]", "]"}], "&"}]}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "This", " ", "is", " ", "just", " ", "here", " ", "for", " ", "the", 
       " ", "keys", " ", "and", " ", "the", " ", "$Failed"}], " ", "*)"}], 
     "\[IndentingNewLine]", "d2SAWavefunctions"}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740421636241317*^9, 3.7404217970745897`*^9}, {
   3.740421871564698*^9, 3.7404218818765593`*^9}, {3.740421960037055*^9, 
   3.740421965602729*^9}, 3.740422110271852*^9, {3.7404223227152*^9, 
   3.740422328178351*^9}, {3.740424002376114*^9, 3.740424064425633*^9}, {
   3.7404332784627333`*^9, 3.740433309125947*^9}, {3.740434439432356*^9, 
   3.7404344627586*^9}, 3.7404349810163603`*^9, {3.741148287015574*^9, 
   3.741148308850835*^9}, {3.741149729722797*^9, 3.741149799245707*^9}, {
   3.741149845020452*^9, 3.7411499306153097`*^9}, 3.7411501551803713`*^9, {
   3.741150436262117*^9, 3.7411504621993504`*^9}, {3.741151630102854*^9, 
   3.741151650842063*^9}, {3.741151746713331*^9, 3.741151751424386*^9}, {
   3.74115204914859*^9, 3.741152119357419*^9}, {3.741153005283437*^9, 
   3.741153046048668*^9}, {3.741154443939692*^9, 3.741154491379589*^9}, {
   3.74115453612136*^9, 3.74115457492109*^9}, {3.741369714645455*^9, 
   3.74136971923771*^9}, {3.741376631803238*^9, 3.741376649649929*^9}, {
   3.741376704806162*^9, 3.741376705226481*^9}, {3.741378137521867*^9, 
   3.741378178504554*^9}, {3.741378299789171*^9, 3.7413783078700933`*^9}, {
   3.7413809854086237`*^9, 3.7413810184530354`*^9}, 3.741381052973338*^9, {
   3.741381092601544*^9, 3.7413810945484667`*^9}, {3.741381581182963*^9, 
   3.741381607666194*^9}, {3.741383071952972*^9, 3.7413831066601467`*^9}, {
   3.741383141314911*^9, 3.741383144975553*^9}, {3.741383460088784*^9, 
   3.74138346211865*^9}, {3.7413889730940123`*^9, 3.741388980541914*^9}, {
   3.741389014401251*^9, 3.741389017567774*^9}, {3.741389066473247*^9, 
   3.741389092785081*^9}, {3.741389137557341*^9, 3.741389154398452*^9}, {
   3.741389212882389*^9, 3.741389216038817*^9}, {3.741389272711375*^9, 
   3.741389291619053*^9}, {3.741391089335146*^9, 3.7413910917700872`*^9}, {
   3.741562470384266*^9, 3.741562473757059*^9}, {3.741562601427658*^9, 
   3.741562603229766*^9}, {3.742172068914383*^9, 3.742172079891963*^9}, {
   3.7561638137652693`*^9, 3.756163815225609*^9}, {3.7561639564989223`*^9, 
   3.7561639601316023`*^9}, {3.756164044946827*^9, 3.7561640457348337`*^9}, {
   3.75616435953876*^9, 3.756164398533539*^9}, {3.757106931989356*^9, 
   3.7571069324443398`*^9}, {3.757188047316923*^9, 3.757188085394204*^9}, {
   3.757223002176095*^9, 3.757223054004418*^9}, 3.757223266717329*^9, {
   3.757224726955052*^9, 3.757224729386899*^9}, {3.757306860291027*^9, 
   3.757306867542041*^9}, {3.757306933443737*^9, 3.7573069348582363`*^9}, {
   3.757307779577258*^9, 3.757307781489191*^9}, 3.757533725378337*^9, {
   3.7597907502264843`*^9, 3.759790750233574*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"3d17bae7-97dd-469b-8448-dc814cf4b286"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/Documents/UW/Research/H5+/results/d5_sa_dipole_vecs_2.mx\>\"", ",", 
   " ", "d2SADipoleVectors"}], "]"}]], "Input",
 CellChangeTimes->{{3.756165004329679*^9, 3.756165038863612*^9}, 
   3.7571745947680883`*^9, 3.757188694263953*^9, {3.757269524202976*^9, 
   3.75726952440396*^9}, 3.7597907502425957`*^9, 3.759819613528023*^9, 
   3.7598644638628063`*^9},
 CellLabel->
  "In[148]:=",ExpressionUUID->"96675c04-5803-4620-bfc4-a3ecea10da07"],

Cell[BoxData["\<\"~/Documents/UW/Research/H5+/results/d5_sa_dipole_vecs_2.mx\"\
\>"], "Output",
 CellChangeTimes->{3.759864599086941*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"6c1c0997-b1a8-4ae4-8325-7455dbd6bc4e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Extract Transition Moments", "Subsubsubsection",
 CellChangeTimes->{{3.757310355612214*^9, 
  3.75731037046618*^9}},ExpressionUUID->"9481ae8b-e6c9-431e-9cfe-\
96c2aa27ff98"],

Cell[CellGroupData[{

Cell["Calc moments", "Subsubsubsubsection",
 CellChangeTimes->{{3.757804972288328*^9, 
  3.757804995769597*^9}},ExpressionUUID->"cc7b27e8-f0d7-4b90-a986-\
6ab102e3fca4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SATransitionMoments", "=", "\[IndentingNewLine]", 
   RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "=!=", "$Failed"}], ",", "\[IndentingNewLine]", 
        RowBox[{"#", "@", 
         RowBox[{"\"\<TransitionMoments\>\"", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"#2", ",", " ", "\[IndentingNewLine]", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"0.", ",", " ", 
               RowBox[{"Length", "[", "#2", "]"}]}], "]"}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"0.", ",", " ", 
               RowBox[{"Length", "[", "#2", "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"1", ",", " ", 
             RowBox[{"1", ";;", "10"}]}], "}"}]}], "\[IndentingNewLine]", 
          "]"}]}], ",", "\[IndentingNewLine]", "$Failed"}], 
       "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", "d2RephaseWfns", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", "rephasedH2Wfns", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
      "rephasedH2s2", ",", "\[IndentingNewLine]", "d2SADipoleVectors"}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.741389225519876*^9, 3.7413892322456217`*^9}, {
   3.741389263315156*^9, 3.741389264299038*^9}, {3.7413897220351257`*^9, 
   3.741389733683709*^9}, {3.741391404606308*^9, 3.7413914194819117`*^9}, {
   3.741392140001916*^9, 3.741392157206468*^9}, {3.741392388186488*^9, 
   3.741392391792953*^9}, {3.741448005526219*^9, 3.741448053354413*^9}, {
   3.741448105354643*^9, 3.741448128243527*^9}, {3.741448209053697*^9, 
   3.741448209759305*^9}, {3.75616406536051*^9, 3.756164096061324*^9}, {
   3.756165100126627*^9, 3.756165117218646*^9}, {3.756165163561924*^9, 
   3.756165169351871*^9}, {3.756165623458214*^9, 3.756165624206149*^9}, {
   3.756167073850114*^9, 3.756167112468685*^9}, {3.756167143865016*^9, 
   3.756167147788957*^9}, 3.75717519703391*^9, 3.757175250358272*^9, 
   3.757176274529272*^9, {3.757179909676662*^9, 3.757179945129881*^9}, {
   3.757179997855344*^9, 3.75717999879618*^9}, {3.757188121923444*^9, 
   3.757188152502252*^9}, 3.757188323423812*^9, {3.7572232925366287`*^9, 
   3.7572233165748568`*^9}, {3.757224740715437*^9, 3.757224742061837*^9}, {
   3.757225695204612*^9, 3.757225695356678*^9}, {3.75722576197027*^9, 
   3.757225783402687*^9}, 3.7572908872159023`*^9, 3.7573069560993443`*^9, 
   3.75731695531295*^9, {3.757355180884164*^9, 3.757355191028234*^9}, {
   3.757533333383546*^9, 3.757533333734641*^9}, {3.757533482273286*^9, 
   3.7575334828735313`*^9}, {3.7575335393090973`*^9, 
   3.7575335663081083`*^9}, {3.7575339514878397`*^9, 3.757533954197106*^9}, {
   3.759790750290756*^9, 3.759790750294116*^9}, 3.759819613588475*^9},
 CellLabel->
  "In[149]:=",ExpressionUUID->"13a0dc06-4a9d-429d-9937-31c360fbd9f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/Documents/UW/Research/H5+/results/d5_t_mom_vecs.mx\>\"", ",", " ", 
   "d2SATransitionMoments"}], "]"}]], "Input",
 CellChangeTimes->{{3.756165004329679*^9, 3.756165038863612*^9}, {
   3.756247126931048*^9, 3.756247131979431*^9}, {3.757290295325416*^9, 
   3.75729029591608*^9}, 3.7597907503028297`*^9, 3.759819613599587*^9, 
   3.759864519333859*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"5f94045e-56d7-45fb-8cc7-e03db00566c9"],

Cell[BoxData["\<\"~/Documents/UW/Research/H5+/results/d5_t_mom_vecs.mx\"\>"], \
"Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.757533999964272*^9, 3.759819613608045*^9, 
  3.7598646050141153`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"ea21245e-aa57-4d7d-82a0-a330b515d34f"],

Cell[BoxData["\"\<~/Documents/UW/Research/H5+/results/d2_t_mom_vecs.mx\>\""], \
"Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.757533999964272*^9, 
  3.759819613608045*^9},ExpressionUUID->"4601be6e-91e1-4098-9a34-\
f6e33d6b9727"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Result", "Subsubsubsubsection",
 CellChangeTimes->{{3.757804976312107*^9, 
  3.7578049770215673`*^9}},ExpressionUUID->"670160a0-1b2f-48a7-92f7-\
4a9f66d5b7c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SATransitionMoments", "=", "\[IndentingNewLine]", 
   RowBox[{
   "Import", "[", 
    "\"\<~/Documents/UW/Research/H5+/results/d5_t_mom_vecs.mx\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.7562471326234913`*^9, 3.757290296406294*^9, {3.7575333513797417`*^9, 
   3.757533355781787*^9}, 3.759790750311887*^9, 3.759819613616132*^9, 
   3.759864522989997*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"fb62bca2-78d2-4726-a82c-24ebea993613"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full moments", "Subsubsubsubsection",
 CellChangeTimes->{{3.757317020302462*^9, 3.757317022828332*^9}, {
  3.759865289891618*^9, 
  3.759865297169354*^9}},ExpressionUUID->"f1f97c7d-ad0a-489d-ac73-\
bf3bd7c47d83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2SAGridTMs", "=", "\[IndentingNewLine]", 
   RowBox[{"Transpose", "@", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#", "===", "$Failed"}], ",", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0.", ",", " ", 
           RowBox[{"{", 
            RowBox[{"10", ",", " ", "3"}], "}"}]}], "]"}], ",", " ", "#"}], 
        "]"}], "&"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"Values", "@", "d2SATransitionMoments"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.741383247791429*^9, 3.7413832589385443`*^9}, {
   3.741391495531871*^9, 3.7413915182719803`*^9}, {3.741392530385466*^9, 
   3.741392560895166*^9}, {3.75677393047303*^9, 3.756773933855681*^9}, 
   3.757175945402092*^9, {3.75717654238063*^9, 3.757176545125881*^9}, 
   3.757183640156383*^9, {3.7572258606416388`*^9, 3.757225860939289*^9}, {
   3.757291097012814*^9, 3.75729109901075*^9}, 3.757356442173778*^9, {
   3.7575333660967293`*^9, 3.757533366325798*^9}, {3.759790750385055*^9, 
   3.759790750388754*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"7dcd8ec0-8bb2-4b7c-b82b-9d8ca5a11258"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Intensities", "Subsubsection",
 CellChangeTimes->{{3.757317038605698*^9, 3.757317045252878*^9}, {
  3.7598645500946836`*^9, 
  3.7598645507662163`*^9}},ExpressionUUID->"46a36b61-316d-446d-bb0c-\
a11817a30587"],

Cell["Ground state stuff", "Text",
 CellChangeTimes->{{3.75780501334137*^9, 
  3.757805015702262*^9}},ExpressionUUID->"35bf10d1-aa70-4b3b-a69f-\
d6ddfba72c47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"zaWfn", "=", 
   RowBox[{"noQuantaWfns", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7572260376988163`*^9, 3.757226044364921*^9}, {
   3.757552885146144*^9, 3.757552885390151*^9}, {3.7575529647666273`*^9, 
   3.757553002033923*^9}, 3.7598646667772503`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"7afc7bd6-bf35-446f-b7c4-03ead787275d"],

Cell[CellGroupData[{

Cell["Base Wfns", "Subsubsubsection",
 CellChangeTimes->{{3.759864759019826*^9, 
  3.759864760793888*^9}},ExpressionUUID->"db6986a8-4965-438e-9be6-\
61bf92060d3f"],

Cell[CellGroupData[{

Cell["One Quantum", "Subsubsubsubsection",
 CellChangeTimes->{{3.759864579558324*^9, 
  3.7598645825802383`*^9}},ExpressionUUID->"ac956bde-e616-44e0-83e1-\
d58700c26944"],

Cell["Get sets of projection wavefunctions to moment over", "Text",
 CellChangeTimes->{{3.757805517522911*^9, 
  3.757805528073351*^9}},ExpressionUUID->"daad715a-cd68-48d5-b759-\
79026c1a6de8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oneQuantumTransWfs", "=", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", " ", 
            RowBox[{"zaWfn", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}], ",", " ", 
            RowBox[{"zaWfn", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]",
          "}"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"zaWfn", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<Grid\>\"", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
     "oneQuantumProjections"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7571781322341146`*^9, 3.757178137192602*^9}, {
   3.75717908057475*^9, 3.757179091132702*^9}, 3.757180123362417*^9, {
   3.759864612199798*^9, 3.759864622460889*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"d7cb1800-224b-4e6f-9d3a-8989027ded46"]
}, Closed]],

Cell[CellGroupData[{

Cell["Two Quanta", "Subsubsubsubsection",
 CellChangeTimes->{{3.759864719492529*^9, 
  3.759864722482595*^9}},ExpressionUUID->"7b032839-d85e-47f5-a750-\
e3de8b804565"],

Cell[BoxData[
 RowBox[{
  RowBox[{"twoQuantaTransWfs", "=", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", " ", 
            RowBox[{"zaWfn", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}], ",", " ", 
            RowBox[{"zaWfn", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]",
          "}"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"zaWfn", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<Grid\>\"", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
     "twoQuantaProjections"}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.757805480853015*^9, 3.757805512439332*^9}, {
  3.7598647377681828`*^9, 3.759864745986329*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"2c7abccb-c67b-4c48-8462-53423c34dcf0"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transition Moments", "Subsubsubsection",
 CellChangeTimes->{{3.7598647500839243`*^9, 
  3.7598647737938423`*^9}},ExpressionUUID->"0b142713-5da1-41bb-a106-\
eba4266b69c8"],

Cell["Pull transition moments and take combos", "Text",
 CellChangeTimes->{{3.757805517522911*^9, 
  3.757805539489489*^9}},ExpressionUUID->"7ff99bfa-1afb-454f-9931-\
3235581a9b82"],

Cell[CellGroupData[{

Cell["No Quanta", "Subsubsubsubsection",
 CellChangeTimes->{{3.759864553902276*^9, 
  3.7598645557248383`*^9}},ExpressionUUID->"6759ced7-b34b-49d7-b9b4-\
840a7b5bfc96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noQuantaTMoms", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"noQuantaWfns", "[", "\[IndentingNewLine]", 
      RowBox[{"\"\<TransitionMoments\>\"", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", "#", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", 
          RowBox[{"2", ";;"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", "]"}], "&"}], "/@", 
    RowBox[{"d2SAGridTMs", "[", 
     RowBox[{"[", 
      RowBox[{";;", "1"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757178628689147*^9, 3.7571786415359993`*^9}, {
   3.757178814584424*^9, 3.7571788427837276`*^9}, {3.757178911213558*^9, 
   3.7571790324010973`*^9}, 3.757179340485448*^9, {3.757226011136739*^9, 
   3.757226028005536*^9}, {3.7573097007608128`*^9, 3.757309700909943*^9}, {
   3.757317455377355*^9, 3.75731745650966*^9}, 3.7575342846519127`*^9, {
   3.7575345635486794`*^9, 3.7575345651466*^9}, {3.757538107068469*^9, 
   3.757538170369876*^9}, {3.757538202803638*^9, 3.757538218247758*^9}, {
   3.7575528621875677`*^9, 3.7575528624649277`*^9}, {3.757553030633197*^9, 
   3.757553031169433*^9}, {3.757553062531283*^9, 3.757553062896764*^9}, {
   3.7578050080006113`*^9, 3.7578050172784433`*^9}, 3.759790750398472*^9, {
   3.759864560758759*^9, 3.759864567402709*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"94240183-ea83-464c-8489-42100744814f"]
}, Closed]],

Cell[CellGroupData[{

Cell["One Quantum", "Subsubsubsubsection",
 CellChangeTimes->{{3.759864784027849*^9, 
  3.759864785545665*^9}},ExpressionUUID->"cdc85496-3f88-4123-8c71-\
49fb0b8e0532"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"oneQuantumTMoms", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"wf", "=", "#"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"wf", "@", 
          RowBox[{"\"\<TransitionMoments\>\"", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "#", "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", 
              RowBox[{"2", ";;", "26"}]}], "}"}]}], "]"}]}], "&"}], "/@", 
        "d2SAGridTMs"}]}], "\[IndentingNewLine]", "]"}], "&"}], "/@", 
    "oneQuantumTransWfs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oneQuantumCombos", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"oneQuantumTMoms", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2", ",", "  ", "All", ",", " ", "1"}], "]"}], "]"}], 
    "+", "\[IndentingNewLine]", 
    RowBox[{"oneQuantumTMoms", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "3", ",", "  ", "All", ",", " ", "1"}], "]"}], 
     "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.757290410931918*^9, 3.757290412658634*^9}, {
   3.75729053208127*^9, 3.7572905425030537`*^9}, 3.757291202498948*^9, {
   3.757314145822324*^9, 3.757314146415934*^9}, 3.7597907504162617`*^9, {
   3.759864798446265*^9, 3.759864821661209*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"a0f2bb63-e43b-4a6e-8b43-7da437a68d50"]
}, Closed]],

Cell[CellGroupData[{

Cell["Two Quanta", "Subsubsubsubsection",
 CellChangeTimes->{{3.759864788019596*^9, 
  3.75986478963336*^9}},ExpressionUUID->"368d0703-c2f5-48c3-bacc-\
a88aaa4f6f20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"twoQuantaTMoms", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"wf", "=", "#"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"wf", "@", 
          RowBox[{"\"\<TransitionMoments\>\"", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "#", "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", 
              RowBox[{"2", ";;", "26"}]}], "}"}]}], "]"}]}], "&"}], "/@", 
        "d2SAGridTMs"}]}], "\[IndentingNewLine]", "]"}], "&"}], "/@", 
    "twoQuantaProjections"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twoQuantaCombos", "=", "\[IndentingNewLine]", 
   RowBox[{"Total", "@", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"3", "+", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", "All", ",", " ", 
          "1"}], "]"}], "]"}], "&"}], ",", " ", "twoQuantaTMoms"}], "]"}]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.757290410931918*^9, 3.757290412658634*^9}, {
   3.75729053208127*^9, 3.7572905425030537`*^9}, 3.757291202498948*^9, {
   3.757314145822324*^9, 3.757314146415934*^9}, {3.757805460862006*^9, 
   3.757805501247097*^9}, {3.757805546239744*^9, 3.7578055874743757`*^9}, 
   3.7597907504260187`*^9, {3.759864826068221*^9, 3.759864848668838*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"3b8623cf-6a7a-4d21-bf97-2d7095d3e9ab"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ints", "Subsubsubsection",
 CellChangeTimes->{{3.759870646080632*^9, 
  3.75987064675135*^9}},ExpressionUUID->"5dd21969-a971-42e6-9b5a-\
128b9e9790db"],

Cell[BoxData[{
 RowBox[{"oneQuantumTransWfs", "//", "Clear"}], "\[IndentingNewLine]", 
 RowBox[{"twoQuantaTransWfs", "//", "Clear"}]}], "Input",
 CellChangeTimes->{{3.759937116988887*^9, 3.759937126751965*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"9af3d497-4536-4626-9492-4d1ea729991e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noQuantaInts", "=", 
   RowBox[{
    RowBox[{"noQuantaTMoms", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], "^", 
    "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oneQuantumInts", "=", 
   RowBox[{"oneQuantumCombos", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twoQuantaInts", "=", 
   RowBox[{"twoQuantaCombos", "^", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.759870650312489*^9, 3.759870672105134*^9}, {
   3.759912940023509*^9, 3.7599129557063713`*^9}, 3.759913848252474*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"c9ab430a-6348-41a5-a16c-968373426fe1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Frequencies", "Subsubsection",
 CellChangeTimes->{{3.759864854210003*^9, 
  3.759864858720619*^9}},ExpressionUUID->"110dfad2-fba8-449e-b5ae-\
3a4d0863d40b"],

Cell["We then turn these into intensities and plot them:", "Text",
 CellChangeTimes->{{3.7414484889676113`*^9, 
  3.741448507544737*^9}},ExpressionUUID->"9b8fcf49-925b-49ff-a6d8-\
b2f1bca335c1"],

Cell[CellGroupData[{

Cell["No Quanta", "Subsubsubsection",
 CellChangeTimes->{{3.759864861818479*^9, 
  3.759864863184408*^9}},ExpressionUUID->"b5708493-3e36-4cf9-9861-\
d7725ab7908e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noQuantaFreqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Rest", "[", 
      RowBox[{"#", "-", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], "@", 
    RowBox[{
     RowBox[{"noQuantaWfns", "[", "\"\<Energies\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", "26"}], "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"oneQuantumFreqs", "=", 
   RowBox[{
    RowBox[{"oneQuantumWfns", "[", "\"\<Energies\>\"", "]"}], "-", 
    RowBox[{"zaWfn", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twoQuantaFreqs", "=", 
   RowBox[{
    RowBox[{"twoQuantaWfns", "[", "\"\<Energies\>\"", "]"}], "-", 
    RowBox[{"zaWfn", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.756247443625925*^9, 3.756247471549491*^9}, {
   3.756773990966756*^9, 3.7567739932844877`*^9}, 3.757180516299687*^9, {
   3.757805590356824*^9, 3.757805608905981*^9}, {3.759864866449009*^9, 
   3.759864886650084*^9}, {3.759865317187899*^9, 3.75986533049946*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"993bcaf8-0e40-4a7b-bf25-876125e4f998"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectra Plots", "Subsubsection",
 CellChangeTimes->{{3.742230059783856*^9, 
  3.7422300633970213`*^9}},ExpressionUUID->"e383188f-ba31-4757-a01b-\
55ddadddd12b"],

Cell["After we build the transition moments we can plot them:", "Text",
 CellChangeTimes->{{3.742230070549181*^9, 
  3.742230079429571*^9}},ExpressionUUID->"4aa902e5-73e1-489c-bd98-\
b6d9ad24b99e"],

Cell[BoxData[
 RowBox[{"<<", "ChemTools`Spectroscopy`"}]], "Input",
 CellChangeTimes->{{3.756169076204198*^9, 3.756169081050064*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"9f0b8136-d52c-4371-a5a4-8d0e492da778"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tttt", "=", 
   InterpretationBox[
    RowBox[{
     TagBox["ChemSpectrum",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJztnXlwVdeZ4J8Ag5KeoqZSmVT3TE3NTFdlXDXVVdM1k6qe6r8y3ZXK9GRC
d5aOnQQHY8fxEseJl3iTwRaLzWZjFgMGG7PviE0gkBBIAoFA+4KEJLRLCEmA
QAI9SW+58/3Ovefp6uk9vSch6WF0//h0n+56lt/5zne+s/2XZ/74099Ncblc
r8fLn5/Ofet/v/ba3Hd+9m/ln3995fUXn3/lud/+0ytvPPf8c6/9r2emyskM
S6aJGIbhyARIWU2H689rMoxYh8MRR2IhDv+OTGZx+HdkMovDvyOTWRz+HZnM
4vDvyGQW4X+Kw78jk1VKr7XPcPh3ZLLK1fpbrjfXZhqxDocjjsRCrtTedOx/
RyatnMmrX/TKJ6eNWIfDEUdiITtPXTF+99EpI9bhcMSRWMiW4yXGbz88acQ6
HI44EgvZllLqfs7h35FJKltPlPod/h2ZrCL8Gw7/jkxWcfh3ZDKLw78jk1kc
/h2ZzOLw78hkFod/RyazfHW8xOHfkUkru9PKHf4dmbSyLaXM4d+RSSvvfX7O
eHZxihHrcDjiSCzkV/OPGc8scvh3ZHIK/KP/+z2++FiHxRFHJlqeWXjCsX8c
mbQyJ/G4Y/84MmnlN8L/3IUpxvni5rmxDosjjky0wP/TYgO9tDzVE+uwOOLI
RIvmf86C40asw+KIIxMtpv1zwnj7s8z+WIfFEUcmWjT/b63N8MY6LI44MtGi
+X9j9Vkj1mFxxJGJFod/RyazOPw7MpnF4d+RySwO/45MZnH4d2Qyi+r/WnDc
ePXTM0asw+KIIxMt8M8YuD86a6A7MgkF/pGXV6QZsQ6LI45MtDj8OzKZxeHf
kcksDv+OTGZx+HdkMovDvyOTWRz+HZnM4vDvyGQWh39HJrM4/DsymcXh35HJ
LA7/jkxmcfh3ZDKLw78jk1kc/h2ZzKL5f2lZqhHrsDjiyESL5v/5JaeMWIfF
EUcmWjT/Lzj8OzIJRfP/4lLH/nFk8onDvyOTWWLBv99vTPX5/VNjHXdHHIkF
/8L+Y16f/7FYx90RRxz/pyOTWQL+n6UT5/8R/T9d9P+0WMfdEUc0/3MXnTAm
6psXS6+fXnewcHOs4+6II5p/ZKK+uetUedcvEo5M2PcccSScaPafXjBx+v/k
xdof/nnN2Qn7niOOhJOA/bNwIu2fFtfqfXnuWMfdEUdiYf+cK2pyLd1+acK+
54gj4SQW/GcWNM34aOvFiN/z+pSfaHqs08iRR1diwX9WYZNrybacCfueI46E
k4eRf5/fH+/z+eNjnTaOPPryMPKv5dZd93dv3Lr/3VinkSOPrjzM/H+VXJIr
9+XGOo0ceXTlYeS/paP7R9eab/+Ie36/3JmX7Mj4ycPIf8rFmltfHSu5tff0
VeOzAwUTFi5HJp9MJP/Spp3u8fqmR+J/X3qF8fHOy8bxCzW9O05e6Y11Gjny
6MrDqP+Pna/2fX6o0JeUUWVsOlI8YeFyZPLJw8n/Nc/GQ0Weg8L/xsMO/46M
n0wk/3fv9f7PlvbuxyPxf/RctbEhqdBw9L8j4y0Tyf/Ji7Wt76zLynf4d+Rh
kYnkf29aRcET7x01NP/h5sEfEf7XH3T4d2T8ZSL5P1fU9O/mbzpn53+aL8Q8
yCNZDv+OTIxMBP9+v1+N5cytaHWt2HW5L5L9czKn1tiSXOLw78i4y0Tq/wul
LVMXfXUhoP9F93/T4/V9M/i+w5lVqt/L4d+R8ZYJ5n/aQhv/5XU3d0tbd3fw
fSv35KlxDw7/joy3jCP/cfp3T6/HdePW/f8m/Lvs+n9/eqXxyienh3x3yfYc
45lFKQ7/joy7jAf/0q7F3p+h/y+ubhednluk+c8sbFT8rz9YYPxy3rEh392d
Vm4s237J4d+RcZeJsH/g/aXlqUYw/9tOlLn/sOL0kHnwp6T9u/V4qcO/I+Mu
E8H/pbIW17yN54bwn3a53gg1D/7Y+Wrj80OO/9OR8Zfx4P/uvV5XUXX7fL9h
rnWYV94K933B/J8rajJW78sPfBe7yS/3m/5/x//jyPjLePBf09LpWrt/gOvL
V667Pvji/BD9fyavwVi+8/KQ7zrjHxyZKLHzL7p6TN5ZVtPhemddpqH/D8d/
OvzvGMS/mvMeiX/mxjvz4x0ZCxkP/V96rd311tqMXq/Ph+/zb4bT/yts+r/P
43W55X5H/zsyUTJe/L+59qz/1t0eV255a2m0/Nddv+Mqqmordfh3ZKLEzv/t
u+4xeSf8v70uw7jWdNv1xdESIxL/tJMZC3ehpPnn+9OvGsH8S5t4GqLfX9ty
5+dSVn4e67Rz5Osvdv7zK1rH5J2W/WMUVd1wzfv8XET+eYax0CkXa7oZ9xOC
/6l+2zjpPWkV3ftOX+2Oddo58vUXO/+sSzsW79T8U57eXJvRFwX/ao3P5PPX
jFV7cvsi2T8b5dyXUq/EOu0c+fqLnf9LwulYvFPzX1h5w/Xe51kR9b/PHB89
88SFGs9n+/OH6P9+j2+mtI1n6vfvPFXu2Z1a4Yl12jky/uLx+uIl/8fN1zeI
/7IH4x+OCetI+W+9dc9VUX8zKRz/mQWNSScv1iapdUFFHP4fOZkSq2/b+c95
QP612PlP2BCZ/4LKtv+elFFpCP/G2hD8f3m02Fi5m2UQzffvOHnF2HWqnHbz
FH8M086RBxf6/H22sZITLQ8D/+m59VfW7i8Iy/+uU1eMzw8VGfr9mn/GmMYy
7RwZfxHd+OTF0pYnx+v9Y8n/zTs9rgslLU+OlH+xbYyPd+a6w/EvR/f2lCvu
6qbOJysbbj2p+Y913jjy4CL6y+Xu84S9/sEX2ff/sOL0/fH6vp1/9uV6kHcV
XL3h+u3ik/dHyn/qpTqDOV/h+KdP4KvkUmPf6Yr7O09due/w/+hI4427ruPZ
1xbxG1so+Dr7BP159dlxy2s7/9nFzQ+01xD+TtY3GSn/aZfr+lbtjcz/5mMl
yg7S/OdV3FhUVNW2KNZ56MjoBTbeWZdhhLt+OLPKsyOlbNx8HXb+zxc3P9C7
Khtuw71nNPr/0yj0/560Co/YQR7N/4akIjVPJtZ56Eh0Emp8ZU5Zi8u2F+4Q
P+fRrGrvzpNXvOMVpkH2T9mD2T9VJv/e8eO/3Cv8ezX/6+WeLckO/18jGeKr
yxebOfHL7LB74e5Pr1D+v/EKk53/M/kN/+NB3nW1/pbrtVVnQtk/U8aC/92p
5cyZDNg/20+WuQ+kX3X2Ef76yBBfXZ7YzO9vPOfv7fe67tzrHfLMgTOS98fG
r6/fzv/Bs5VXH+Rd8P96CP4vlV2f8f6m4fnH/pd2kLFmX17U/Ivt49+XVuF/
CPLVkQiC7dPd0z/kPPzP33jOqG+948ooaPh18PWJ5H/f6atRf0evW2hfvzAc
//kVNxT3kfiXdrCx8XBR1PxvEdt/b1oF62hN89nGh5rjRY0h6yo6Ejtx9/W7
ckKMr9H80/Zctj1nSF0+kfwfO38t6u8IY1PsRyQc/7nlrdh4Ee0f+gHWHRw6
/jMS/4RBeJ8yEDanX/hhk1t3elzLd1xaEnxe8y8sqGPw9Ynk/0R2Td9o3qHm
ufv8M8Lxn3KhZqde/2TxMPzD+qufpo+Y/1jnrSORpaW92/X0gqFzrAb0f5Nr
6bacIX7OieQ/OUr9z3q27j7Pt+i7u3u/91v6fDj+D5656pkj74/E/8e7Lhtz
JI1Gyv89d/+3eno9gXD09Xu/5fH6vjVWaeTIgwv8P/VB8hC+AvwXqTUBh/g5
H0b+u+73ufalX01u77zvWrM/P1mfD8f/2byGp19ffca4UNI8rP2zS/j+QNrJ
I+X/80NFyXvSKgLhOFfUlFxyrSOZchqqT9GRiZfrHd2u5z86qex7u22q+Wfu
CX29wc89jPZ/++37rj9+ctqovX7H9ct5Rw3Rta7Ort7vheOfcRGLtlyIyP/p
y/XC+8jbv39cedpY9NVFQ9n9IpukDZ2cXUNcphhOO+ChEPj/7eIU5auzj1kM
5t9aAyom/MNdNM/cuHmPuCif1TOLThi37rpdx85dqxqu/buA9m8E/ln3f/0o
2r+socV5r9c3gzGhtKFZQ8sw/c3O+NCHQCz+h/AVQv/jt1P+PPx6kfhX5eUB
wmXnH/9jNM+wTsPchSfcjW13XS+vSHM33LjrWvjlBWMY/3+88v9H4B///+oQ
/n/8spuPhedfzruTz9cEfGefHyp0HztX7WbdafpVYp33joyIf1Vn67p8gv0/
UX0Hzrkf7l9Yesq41tTpeuXj02H5D4x/iMB/cP/voSj1P+PiDpypDISdZ3nH
1YZbrqa2rpjn/WQTsYeH1Lmaf8Y6Cy/L9flg/rt7+ly0K/X1KPh/oDrezn+o
tWhDxa22Ren/AP+1zXdcf1iR1jde/B8VW2Z3asUQ/r9KLjH2yDnmwrOXgNj8
y88XNS/X/Ev9sfxCScvy0aaNI2Mnmv8OYds+dj2Y/2vNnd8+X9z0bXev59tS
Fr4diX98kP4HWLfQzv/LK4buRRFKWm+acdH8VzXeFv7HXv8PzP8qV+Oeh4x/
kN+mbWTq/7c+yzTWSFtA80+7QNolUcXJkfETaZPFa/5pM767PiuQJ8H8ny9u
TvniaHHK8fM1KesOFqZo/qVtF494LNHPN0r9frtr9OtW2flfuPlClPzfcz1n
4z+v4oZrrrSDx4t/2havrkwP8L/T4n+P2D7sFab5552MB9X8886jDv8TJnos
gOjwvxvKjMk/tvILS1Pd+v5g/k/l1Ck7ZN2BQuP3K9KMSPpf2Pm78rqbQ743
Gv43HR5+nCl+zsYbXX+ny7Lm/3J5q+vpBePHP30Cf5D2RTD/jBkizJr/bcfL
3KI33Jr/9UmF7hMXap3xoRMkwoeaP/X66rM1wWP9tc6UsuH6/fI0PzYL9wfz
nyYswAT5uVwdQ/Ov+3bW7i+oyShorBkL/ilzw93L+NQPt16ssfP/4tJUo1K4
Z7+68eJ/uzDPunDB9s/Loh9YZ1rz/+WREv/hzGr/euX/VHtI+o9n1zjjQydY
fvTaAYO1j70+5cN0Nbd1za03fYZGjfD/R6nL9b3B/KfnNriFBfepS3Xuzcml
bs3/ldqOuaLn514obZlbXN0+17D8pB9tzTHYL2gs+F+9N3/Y93Tc6XH9av4x
I5j/OmkP/0niNF7883+o9i/2Pjab5n/joWIj6WyVSq+UizWqzAj/htYVPnNc
aMz5eNTlqQ+OK/4lrePw9+xJLfdUNpg+Q/inLg/HP32gn+zOVX2xYv8H9P+6
AwWeDUlFnjfXZHg+2Z3HOCH2V4z7eFeucTq3fkz4XxbB/8P6DozjCfDfavI/
Xv7PEPMfQ/p/NP/YQviMaCuzh5LmX4ffb9uT0pGxl52nyj+B97mLUvrhn3OM
lXlj9Vmjzqb/4R87aHvKlU/C8X9U+P/swAD/q8XWZY2c94SnNcIIbV7mE0hZ
6E/Pq+8fC/7/vCYjIv9PLzjeP1H8HzxbaXx+uCjg4wnmn/oA3r84apYRygr/
v/rpGZVWvMsa02T3ETv9weMkP3/nsHGnu1cxBf937/V9p1P+//X7yf26/av5
Zw/cXyQcMaLV/7tPlffvTavo33q8tP9IVnW/PPed6ubb3xlL/f/cRycj8j+R
+v9QZrXl2w/d/6XqBLGL8PkcPFsV4H+OtMWxC9dL+kn7V41P8rLOTK/nO/0e
X8w5eVTlp28fMtj7DZZ6+z0usSdSbwv/YjN7dftX8w/3z8r/w/G/3sa/5LdX
9J9X+PcK/17hIPVsfkPqWPL/2w/D84/dPFL+C67eiMfXG8x/RkFDPHGNxD+2
y3ZhPSz/x02biN/4+Zk7Bv+LpE2wPaVMlR32mKyov6nG3568UJtaWtMRc04e
VRGe3ffE3oGlnt5+14/fOGig/58Wu0czo/mnPfDe51nuaPnfkWLmOWMbsXVX
7s5TY7zGkn9YHubeKSPlv7i6Te17Gsw/cx2W77gUkf+tx8uMZXJfpPEPn0ga
YB9p/qkPGEu3+KuLZh9BVtXf55W3/j33ybf+fqBMD5435siDiTDk77bx/+R7
RxX/v7Exo/kvr+tgbXx/tPaP5v8LqeOxi/HVcM9Y8o8vP9x9wsn0kfJfIvzP
D8F/thzhPhL/jBnlO5H4f0HCwHc0/xyx+9E7vF/SsU6+Ucf8mlM5tXU6Tvif
fT7/A635NRlFbMnHQvnRYMjOv9QHveH4v1LbodrFo+V/3YHCXrFte8eS/2dD
jM+zy0j5zypsnEdcNf/C/WP4Kw9nVs17XeIeif+P5RrzISPx/6a025dKe0Lz
v87y//Nt+jRYO5qxfav25vUyxtWn8s//WKw5+rpKOD9aMP8ch+Ofda8i818Z
kn/8G9jHY8k/Euoe+vII/0j5RwfzTpv+j0P/Y6uo9YYi+X+ULo9i/KfVRtb8
6/5f0oh5MIwJYm79yj3K/iGOcYbjCx1z+brzPyfE/GSEuHx2oGDVSPnPLGhc
8vLytAD/ueXXXUu35xhJGZVLXvv0TET+YXebtGMj8b9L/ueZYP5JK94t7+w/
dbG23+I/4CuWd6wqrGpbFWtuvm7S2dX7V+xVOzH8h7Z/xoN/+idC3YNP9xfv
HjFG0/6db9v/Tuyh/8w8GNq/0dj/+DRhOrL+Lw6j//H/D9X/99z9f9XX7/2r
ZxalGPvSo1/zyBFTFm+5mF5ed3NY/u9HxX/GQ8V/qPUpNP//Okr+7fs/7jtd
UYmPVfl/ouCf/t+NUc9/CcG/1f8bzL/UqelFVW3phJE5Z7Hm6esmP337sPJl
6P/1uM9Y8j9aP14k+5+40achutI9Kv//ugH/v7BaSxs7o6AxKv9/tPN/vwrD
/2dh+MevxP+r9+e7Jd2d8aEjFOZ6FFe3B/7Hj+YPx3+XOyT/ZTVjyz9+vNGM
7YrEP3Gz+vT8o+j/jUtYb85/h39pD/xX+gMyCxvjRjL+R6WB8M8+SKx3Tt8W
Y6BHyz9tEGucrT+joMEZHxql+Pym3/O9z8/1VkRr/0Tgn7Ux5288P2L+yVt4
mQj/j+7THtX4B/p/Lf5p/8L9SMe/af6JN/1Z2Oz4BUbL/6d7cnvP5jX0Ms/i
bH7DqNNusgrcloXoR7fzL22sceWfPCWPvw78X7L1f+H/H6v1z0fLP/1g6ZJm
9C07/I9c3lht8s9ccOqDrcfL1nZZ3Efin3kAjP8P2D/lrTNoI46Uf/jhf82/
2NprGWPkVWGKfj5wOP5ZR4cxTFtPlK2Nlv+KUOv/2/jPLm5+bMGXo+efvgOp
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
zyO/5P55Xu/kGh9K2pOumn/S54yk00Twr/U/391wqCii/qePgnaksv9LW7T9
H/f+pvN95bVqjs6w/rtg/uEyWv4Z78P/I+X/nMV/ptj/6P1g/lnXbv0I/P+a
f/ZiXSgMh+M/kv5fouyfFsLWlyNhlv/78kcxpvbrKqyNyroO+N7QqQH+t1j8
b3pA/oWZaPk/JfnEnp+R+P9U+3+2m7br+xux0Vrj39uQ5eMbyoc3jO4K5p/n
o7V/4J6+adayps0Utf63+X9W7hngH79WqP1Po+Wf9i3Xtf2zLgL/3I9fSPOP
DiGsi7dc9F0sk+NXF325I+hL/LpJc3v3k0VVbT+Qum2qMDK1uqnzB+V1HT+A
f8YZrrH4X7HjsltsVvdo+L/THZb/qcPxz/gWWInEf7D/f+GX2WqM6dufZRrF
Ve0j9v9jR0XW/+ZavrR/f0/7NzL/U4fz/2v+sU2w+0fLP2sFsc5btPyTzlIW
A/yTZidzap9kjo7UpaovJafsenzjja4fMC7kQfZZfhhF0rXvxWWpbayHx5qG
RzKr24SxNtKVNF+zr0CtH8O+EOiqUfEf3v55bDj+mZvKOt7h+GdMBEwEj3/Q
/NNXVlIdeRxoMP/PfpgSnf0Tqf1r83+KLfGY3v/azn/6kP3f6wLsjoZ/0uZw
ZnUU7d9c9e1g/umz3p5S1kcYsSXRMdQHmw4Xt9Gn8aiMDWXtR6/X95ik5wHy
U58nbVkvUvPPfiKpl+ofiH/2Ow3FP+mJvgnHPz6dP608M2L+abtJHq/Q/J+4
UPMqYYuW/6cSkw3swOH413GOln9saOYuRuL/K7H3aM9Hy7+5/8sA/xuU/79S
jfVhHEkk/gkr79b8k5+StgcI40Ub/+9tMNcwMqx+INjxPQLrhzJeXfSsn32h
pA6YdiD9qh/fZ8D+2Zf/wPq/NWjMmOa/tKZj+hvD6H/GqaxPGqb9+2Xo8W9m
H1alofmf/X6ykTdMGy6Yf4Q5PcPxr/dyitb/KTbE9Gj0P79572j1/0jnPyp/
l+g4zT9pmG2F0c6/hN0/kj7Fr4sQ15W7cz3Zxc2b96RVbJb2l2ff6QqP5p8x
iYxD1PzrtiXz30uvdcTDf20Y/rutfrBw+l/S+zTtgXD8Mwbmi6MlI+affiP5
/x3N/6+F/8LKthHx3+8x+XeH4b8+SP/b978Lxf+x89dOP7/kVET+Gc/PGI9o
+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
gWsLLLH9b5Yj6x4rT5+y3gPX1K+zTXZUGnEvdYaVZ6odgg/CTDOJ5wdmHNfs
zfcOpKWZtuh3/KA6H/V19L9Oc52f/E+bHX8YddGZvPpvcp72JQz92uKN+px0
Rff19Xu/yfysf3kziec9T8476kHfS7n3cM+/vnvEI/rcgw4gTpwnLNiTHH+q
j/KMlU+Gvg4zzN+x0sKjys98Mz0IC/pijpXn+pxOV86z16/1Tg9x/IX+X5cP
eSdH0U3q+BMrDLOtckK81HMJRzy0tyQcHnu+8F3qKnQcv+FV1/tmPZTMbzdH
ROoSN7qOdKE+IL2J3xz1LfNIfpEG1G3YppxH/1HHzTXtCbeOo7IpTN3vZu9T
joSZ54kr/3PkHtGd3YRL7KDuuep40vPMYt41wO2zi813S1zdWgeE5B29vyBg
76hv824dBn5rH4FZl6QEyoD1W32Xc6S1vMet3y363E1dTdqIqLTjGezzpyyd
Qv2I3rHS3w0HfFfKRbfFmGKGOoc214qdlxcTNnkXaeAWRmkDqqOE0c17OKr7
l55yY1OLnnBL23wL76Uul+e7CdNvF590s442z1BniN27hTBaaeBnf1F+Sxr6
1f+LTvglnn4z3wb93xs4n3jcb6W9n9+SDoH79ZF3SdzVkfuets6p30FH7h/4
pvk+/S7ztylSntRx7sLBYeLdFse9ZphT/BJ3dV6/W4dJ8k89z29JE3VN0iMQ
FiuP1H3kC+/hWSlT7qetMEl5MI9yD2WWI/YK9yoWpdxLGXDzP3lEuIkH/3PE
luDdHK36yW/m61FV/rjHsj/UvTwnfKjfOg0QpaPkHqVXzHQLWwa4D+G9CN/g
eavc+4nTr+eb6fEr66h+SxpZ9apKJ87xPOHhN2Vd57Ol19TznNfpaNkb6kgc
Zr9v6qKfm/qNcJNm6jtPyn2MM+A+7nnSjL/SK7+y7DP7eW2rcfzxG0nqOm3g
X1j3cZ48Ut+Wc//06gF1XfjtEelFpIwEfsOU9TtwDqHv17rWYx7NZ/itzwc/
J/EMfmck6bG+Ffh/ru1ZqUsG3S/M6DD1Wvns09ck/oHvDnqHLUySHuq3pKM6
Un7Qx/yW9O8lnSQP1b2SP4H4cY2jpGkv9SHP48/5pRzl3h7eIed7JF96qSfn
WO/ge3yDeov616p3CTdx6VF1yoITPdzzM+u9jH/kPbzDqu8CcZlllrlenlPh
t+qGUEK8yQ/ei0hd0kuZtcpvL3FBVDjN+FnpeKSXeyR86jpH0kWnI2HQ+aXS
S66Lnu61GFPPWPz1Eme+qZkkbsRH0q1H0lelFc/+WNKSuHLvT948pHilTPyz
PM/31HnrOteID0fY5vr/fe1A4D6OvE/fyzVpVyaRbz99y3y3XQjXT0Kcl3B6
eIZrpv1kniftkeD7Edqe3G9/H/EJ9X67oB/s4dG/aXfa75M09eh40DcteePR
1/CL6O/Y30EdyP08h//GfG+qOv7KtHOS+I1vUNrJKp1+/u5hpav0O7jGkTbe
vM/PJeGL/HjX5STaZnwr8cvsJPpvsHs/2paTpO1CfHjU4ct2XEr6eFdukrSv
k8ROSjLbqPRBZyfNUfbdEWxV9d7FX11M0n3UPIcNoplYtTcviTThOeKKPUs6
INqOtPj30FYn7gs3X0hC9PMJG7KSsDnwD9FXTtrgM7Ono9j3Sehj/AKwK+3c
JNq/XBdbRV3jN+efVPedYZ58kk4jSYskfCEr9+QmrdqbT9okkW6kNfHh26pP
Y9ulJOxNaTvsIm24d7nEGV6lnZ306Z48dQ6RtrE6SvsjKfGL7CTyas3+/F2c
W7u/IHAfsmafeVy6PSfpo605u253uWfqevCJIFF1TIjzEk6Pvl/XY/o3PudQ
zzCW9okQ3yGvQ92v5Q3Jb/0b36r+jT/Hfp9w5dH1IHn+6ifpHn2NPUlCvYPx
Fr+eb9bBB85UqHPrkwrUEd/GpSstM/nNOMmG1rvqN3bxL23pwjWOjJk5m98w
c/OxYqOlvWsmY4nIx8Kq1pn4jRg3VtvSOfONVWfFlk5W/c/w2iT3dtzpmVl3
vXNm6qW6mbQf8ffmVrTOfFd4e3GpWv9/Jn1QFXU3Z9JfAr/N8hy2rU7P++7+
mfhx8+Q50zZKHsT/0wt0OTjuYezbJ7vz8K/OLBPh/nvyfEZBw8y1+/OMnSfL
VJ8Hacm+mDqurBWWVdg48wU1R/KK8uncutsz87MD+er69Y7umdj//OY8a/Yy
l4Dw6zRKu1yn0ubOvd6ZPb2emel59TOzS5pmXihpnolfnLFXH351UaU3cw0I
Y52kG/dev9k9E1753d3Tp45IU1uXOtZLGuZVXJ/ZeOPuoOuhhHcWX2ubiQ9o
e8qVxF2p5YkHz1YNkpV78hIPnLk65Dw+Sp6RvEj87EBh4PyGQ0WJSRmVQ+5H
iq+1y/1XE/ekVQTOHThbmXgoY+i9dhGmAr+PZ9cEfpfX3Rx0HyxInqn3YX+w
xry+1nb7fsh3FFW1JR6W+49kVSc2td213tuhjqcv1ycyzonf12/eSySd+J18
/tqgMHONY931O4mSN66qxlvq3qv1t9S3evs9Lr4veaLOn81vTJQyk3jj1r1E
4T3R3gdJf9n54mZ1nj3xzhU2JZ7KqUmkv6ay4VYiPmvhQs7VqufOFzclJlnh
4P+KulvquX3pV9Uex6QD9T3lW/sq0DfClMS9PZG+IEQ/zzyOspr2RCmniTXN
nSqewnQgru2d9xPp+zx5sTaxXuIr5Vo9V1bTEQgD5/Tv1Jw6dR/h12nEmCjS
RseZdU0Yq8B4XuJT23wnMfdKq7pe3Xg70ePxBY9TG1Z6rDH50Qj9tqypQv8u
/V7B1+k7C/XcvI3nunmG/KBfVp+nX36475ljUEcWn2jlaFZ1N2NC+f3cRye7
j5671j0G7w30D0a57szUEPcO+w7O+QfWtQn5nBE0vyPUu2x9meoouqCbdEAs
/1D3b0wfVXfQe6fano86joHv2tY78tt+B62DNOQ3123fHPJtW/xU2nCvXj+f
34Gjz2+7br5H/W+7Hkr0vT5rzkAocYsuCXW+sKpttv5tH2cXyzUaW2/eC4Qp
u7h5tuit2WPw3iFzLKK53x/+uVDvmGbN25g2zL3Tgs8Fz6/R85L0PVJPzCYd
MgsbZ2OfbztRNhv+j52rnh303mm256OO4wCnA/wIU9NCnQ8VF70Wsi0Mwd+2
x0fdy/v1c3bR1+3vCr4n1DO2uH/D6/V/o9/jGyRybcg567x6RtgfdA+/ORfq
Ga+c91gS6no48YQ57/X5Q4ZJ/0b0NZ9vaNzUu71D3+e1naM86+cZNxvqHfrd
PG/1qX/DmmuhzjPWVqWv9Q5P0HP+AXa4z6XDxHP23+bz/oH3mrpnUPz1PR5b
GiC0oSrrb6p+JNYP0Hmh584G0o/3e8246O/Y085nxdGeXuq7Opy2NNfpr8MU
SCOfGQdbuVXf9Vnx9VpckR76WT0vK9y8xsB1Pdclivlf+t7/D9aCIFw=
                 
                 "], {{0, 192}, {192, 0}}, {0, 255}, ColorFunction -> 
                 RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 Magnification -> Automatic, MetaInformation -> 
                 Association[
                  "Exif" -> Association[
                    "Software" -> 
                    "Created with the Wolfram Language : www.wolfram.com"], 
                   "Comments" -> 
                   Association[
                    "Software" -> 
                    "Created with the Wolfram Language : www.wolfram.com", 
                    "Creation Time" -> 
                    DateObject[{2018, 8, 2, 12, 38, 9.}, "Instant", 
                    "Gregorian", -8.]]]], Selectable -> False], 
               DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {192, 192}, PlotRange -> {{0, 192}, {0, 192}}, 
               ImageSize -> {32, 32}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["17688", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJztnXlwVdeZ4J8Ag5KeoqZSmVT3TE3NTFdlXDXVVdM1k6qe6r8y3ZXK9GRC
d5aOnQQHY8fxEseJl3iTwRaLzWZjFgMGG7PviE0gkBBIAoFA+4KEJLRLCEmA
QAI9SW+58/3Ovefp6uk9vSch6WF0//h0n+56lt/5zne+s/2XZ/74099Ncblc
r8fLn5/Ofet/v/ba3Hd+9m/ln3995fUXn3/lud/+0ytvPPf8c6/9r2emyskM
S6aJGIbhyARIWU2H689rMoxYh8MRR2IhDv+OTGZx+HdkMovDvyOTWRz+HZnM
4vDvyGQW4X+Kw78jk1VKr7XPcPh3ZLLK1fpbrjfXZhqxDocjjsRCrtTedOx/
RyatnMmrX/TKJ6eNWIfDEUdiITtPXTF+99EpI9bhcMSRWMiW4yXGbz88acQ6
HI44EgvZllLqfs7h35FJKltPlPod/h2ZrCL8Gw7/jkxWcfh3ZDKLw78jk1kc
/h2ZzOLw78hkFod/RyazfHW8xOHfkUkru9PKHf4dmbSyLaXM4d+RSSvvfX7O
eHZxihHrcDjiSCzkV/OPGc8scvh3ZHIK/KP/+z2++FiHxRFHJlqeWXjCsX8c
mbQyJ/G4Y/84MmnlN8L/3IUpxvni5rmxDosjjky0wP/TYgO9tDzVE+uwOOLI
RIvmf86C40asw+KIIxMtpv1zwnj7s8z+WIfFEUcmWjT/b63N8MY6LI44MtGi
+X9j9Vkj1mFxxJGJFod/RyazOPw7MpnF4d+RySwO/45MZnH4d2Qyi+r/WnDc
ePXTM0asw+KIIxMt8M8YuD86a6A7MgkF/pGXV6QZsQ6LI45MtDj8OzKZxeHf
kcksDv+OTGZx+HdkMovDvyOTWRz+HZnM4vDvyGQWh39HJrM4/DsymcXh35HJ
LA7/jkxmcfh3ZDKLw78jk1kc/h2ZzKL5f2lZqhHrsDjiyESL5v/5JaeMWIfF
EUcmWjT/Lzj8OzIJRfP/4lLH/nFk8onDvyOTWWLBv99vTPX5/VNjHXdHHIkF
/8L+Y16f/7FYx90RRxz/pyOTWQL+n6UT5/8R/T9d9P+0WMfdEUc0/3MXnTAm
6psXS6+fXnewcHOs4+6II5p/ZKK+uetUedcvEo5M2PcccSScaPafXjBx+v/k
xdof/nnN2Qn7niOOhJOA/bNwIu2fFtfqfXnuWMfdEUdiYf+cK2pyLd1+acK+
54gj4SQW/GcWNM34aOvFiN/z+pSfaHqs08iRR1diwX9WYZNrybacCfueI46E
k4eRf5/fH+/z+eNjnTaOPPryMPKv5dZd93dv3Lr/3VinkSOPrjzM/H+VXJIr
9+XGOo0ceXTlYeS/paP7R9eab/+Ie36/3JmX7Mj4ycPIf8rFmltfHSu5tff0
VeOzAwUTFi5HJp9MJP/Spp3u8fqmR+J/X3qF8fHOy8bxCzW9O05e6Y11Gjny
6MrDqP+Pna/2fX6o0JeUUWVsOlI8YeFyZPLJw8n/Nc/GQ0Weg8L/xsMO/46M
n0wk/3fv9f7PlvbuxyPxf/RctbEhqdBw9L8j4y0Tyf/Ji7Wt76zLynf4d+Rh
kYnkf29aRcET7x01NP/h5sEfEf7XH3T4d2T8ZSL5P1fU9O/mbzpn53+aL8Q8
yCNZDv+OTIxMBP9+v1+N5cytaHWt2HW5L5L9czKn1tiSXOLw78i4y0Tq/wul
LVMXfXUhoP9F93/T4/V9M/i+w5lVqt/L4d+R8ZYJ5n/aQhv/5XU3d0tbd3fw
fSv35KlxDw7/joy3jCP/cfp3T6/HdePW/f8m/Lvs+n9/eqXxyienh3x3yfYc
45lFKQ7/joy7jAf/0q7F3p+h/y+ubhednluk+c8sbFT8rz9YYPxy3rEh392d
Vm4s237J4d+RcZeJsH/g/aXlqUYw/9tOlLn/sOL0kHnwp6T9u/V4qcO/I+Mu
E8H/pbIW17yN54bwn3a53gg1D/7Y+Wrj80OO/9OR8Zfx4P/uvV5XUXX7fL9h
rnWYV94K933B/J8rajJW78sPfBe7yS/3m/5/x//jyPjLePBf09LpWrt/gOvL
V667Pvji/BD9fyavwVi+8/KQ7zrjHxyZKLHzL7p6TN5ZVtPhemddpqH/D8d/
OvzvGMS/mvMeiX/mxjvz4x0ZCxkP/V96rd311tqMXq/Ph+/zb4bT/yts+r/P
43W55X5H/zsyUTJe/L+59qz/1t0eV255a2m0/Nddv+Mqqmordfh3ZKLEzv/t
u+4xeSf8v70uw7jWdNv1xdESIxL/tJMZC3ehpPnn+9OvGsH8S5t4GqLfX9ty
5+dSVn4e67Rz5Osvdv7zK1rH5J2W/WMUVd1wzfv8XET+eYax0CkXa7oZ9xOC
/6l+2zjpPWkV3ftOX+2Oddo58vUXO/+sSzsW79T8U57eXJvRFwX/ao3P5PPX
jFV7cvsi2T8b5dyXUq/EOu0c+fqLnf9LwulYvFPzX1h5w/Xe51kR9b/PHB89
88SFGs9n+/OH6P9+j2+mtI1n6vfvPFXu2Z1a4Yl12jky/uLx+uIl/8fN1zeI
/7IH4x+OCetI+W+9dc9VUX8zKRz/mQWNSScv1iapdUFFHP4fOZkSq2/b+c95
QP612PlP2BCZ/4LKtv+elFFpCP/G2hD8f3m02Fi5m2UQzffvOHnF2HWqnHbz
FH8M086RBxf6/H22sZITLQ8D/+m59VfW7i8Iy/+uU1eMzw8VGfr9mn/GmMYy
7RwZfxHd+OTF0pYnx+v9Y8n/zTs9rgslLU+OlH+xbYyPd+a6w/EvR/f2lCvu
6qbOJysbbj2p+Y913jjy4CL6y+Xu84S9/sEX2ff/sOL0/fH6vp1/9uV6kHcV
XL3h+u3ik/dHyn/qpTqDOV/h+KdP4KvkUmPf6Yr7O09due/w/+hI4427ruPZ
1xbxG1so+Dr7BP159dlxy2s7/9nFzQ+01xD+TtY3GSn/aZfr+lbtjcz/5mMl
yg7S/OdV3FhUVNW2KNZ56MjoBTbeWZdhhLt+OLPKsyOlbNx8HXb+zxc3P9C7
Khtuw71nNPr/0yj0/560Co/YQR7N/4akIjVPJtZ56Eh0Emp8ZU5Zi8u2F+4Q
P+fRrGrvzpNXvOMVpkH2T9mD2T9VJv/e8eO/3Cv8ezX/6+WeLckO/18jGeKr
yxebOfHL7LB74e5Pr1D+v/EKk53/M/kN/+NB3nW1/pbrtVVnQtk/U8aC/92p
5cyZDNg/20+WuQ+kX3X2Ef76yBBfXZ7YzO9vPOfv7fe67tzrHfLMgTOS98fG
r6/fzv/Bs5VXH+Rd8P96CP4vlV2f8f6m4fnH/pd2kLFmX17U/Ivt49+XVuF/
CPLVkQiC7dPd0z/kPPzP33jOqG+948ooaPh18PWJ5H/f6atRf0evW2hfvzAc
//kVNxT3kfiXdrCx8XBR1PxvEdt/b1oF62hN89nGh5rjRY0h6yo6Ejtx9/W7
ckKMr9H80/Zctj1nSF0+kfwfO38t6u8IY1PsRyQc/7nlrdh4Ee0f+gHWHRw6
/jMS/4RBeJ8yEDanX/hhk1t3elzLd1xaEnxe8y8sqGPw9Ynk/0R2Td9o3qHm
ufv8M8Lxn3KhZqde/2TxMPzD+qufpo+Y/1jnrSORpaW92/X0gqFzrAb0f5Nr
6bacIX7OieQ/OUr9z3q27j7Pt+i7u3u/91v6fDj+D5656pkj74/E/8e7Lhtz
JI1Gyv89d/+3eno9gXD09Xu/5fH6vjVWaeTIgwv8P/VB8hC+AvwXqTUBh/g5
H0b+u+73ufalX01u77zvWrM/P1mfD8f/2byGp19ffca4UNI8rP2zS/j+QNrJ
I+X/80NFyXvSKgLhOFfUlFxyrSOZchqqT9GRiZfrHd2u5z86qex7u22q+Wfu
CX29wc89jPZ/++37rj9+ctqovX7H9ct5Rw3Rta7Ort7vheOfcRGLtlyIyP/p
y/XC+8jbv39cedpY9NVFQ9n9IpukDZ2cXUNcphhOO+ChEPj/7eIU5auzj1kM
5t9aAyom/MNdNM/cuHmPuCif1TOLThi37rpdx85dqxqu/buA9m8E/ln3f/0o
2r+socV5r9c3gzGhtKFZQ8sw/c3O+NCHQCz+h/AVQv/jt1P+PPx6kfhX5eUB
wmXnH/9jNM+wTsPchSfcjW13XS+vSHM33LjrWvjlBWMY/3+88v9H4B///+oQ
/n/8spuPhedfzruTz9cEfGefHyp0HztX7WbdafpVYp33joyIf1Vn67p8gv0/
UX0Hzrkf7l9Yesq41tTpeuXj02H5D4x/iMB/cP/voSj1P+PiDpypDISdZ3nH
1YZbrqa2rpjn/WQTsYeH1Lmaf8Y6Cy/L9flg/rt7+ly0K/X1KPh/oDrezn+o
tWhDxa22Ren/AP+1zXdcf1iR1jde/B8VW2Z3asUQ/r9KLjH2yDnmwrOXgNj8
y88XNS/X/Ev9sfxCScvy0aaNI2Mnmv8OYds+dj2Y/2vNnd8+X9z0bXev59tS
Fr4diX98kP4HWLfQzv/LK4buRRFKWm+acdH8VzXeFv7HXv8PzP8qV+Oeh4x/
kN+mbWTq/7c+yzTWSFtA80+7QNolUcXJkfETaZPFa/5pM767PiuQJ8H8ny9u
TvniaHHK8fM1KesOFqZo/qVtF494LNHPN0r9frtr9OtW2flfuPlClPzfcz1n
4z+v4oZrrrSDx4t/2havrkwP8L/T4n+P2D7sFab5552MB9X8886jDv8TJnos
gOjwvxvKjMk/tvILS1Pd+v5g/k/l1Ck7ZN2BQuP3K9KMSPpf2Pm78rqbQ743
Gv43HR5+nCl+zsYbXX+ny7Lm/3J5q+vpBePHP30Cf5D2RTD/jBkizJr/bcfL
3KI33Jr/9UmF7hMXap3xoRMkwoeaP/X66rM1wWP9tc6UsuH6/fI0PzYL9wfz
nyYswAT5uVwdQ/Ov+3bW7i+oyShorBkL/ilzw93L+NQPt16ssfP/4tJUo1K4
Z7+68eJ/uzDPunDB9s/Loh9YZ1rz/+WREv/hzGr/euX/VHtI+o9n1zjjQydY
fvTaAYO1j70+5cN0Nbd1za03fYZGjfD/R6nL9b3B/KfnNriFBfepS3Xuzcml
bs3/ldqOuaLn514obZlbXN0+17D8pB9tzTHYL2gs+F+9N3/Y93Tc6XH9av4x
I5j/OmkP/0niNF7883+o9i/2Pjab5n/joWIj6WyVSq+UizWqzAj/htYVPnNc
aMz5eNTlqQ+OK/4lrePw9+xJLfdUNpg+Q/inLg/HP32gn+zOVX2xYv8H9P+6
AwWeDUlFnjfXZHg+2Z3HOCH2V4z7eFeucTq3fkz4XxbB/8P6DozjCfDfavI/
Xv7PEPMfQ/p/NP/YQviMaCuzh5LmX4ffb9uT0pGxl52nyj+B97mLUvrhn3OM
lXlj9Vmjzqb/4R87aHvKlU/C8X9U+P/swAD/q8XWZY2c94SnNcIIbV7mE0hZ
6E/Pq+8fC/7/vCYjIv9PLzjeP1H8HzxbaXx+uCjg4wnmn/oA3r84apYRygr/
v/rpGZVWvMsa02T3ETv9weMkP3/nsHGnu1cxBf937/V9p1P+//X7yf26/av5
Zw/cXyQcMaLV/7tPlffvTavo33q8tP9IVnW/PPed6ubb3xlL/f/cRycj8j+R
+v9QZrXl2w/d/6XqBLGL8PkcPFsV4H+OtMWxC9dL+kn7V41P8rLOTK/nO/0e
X8w5eVTlp28fMtj7DZZ6+z0usSdSbwv/YjN7dftX8w/3z8r/w/G/3sa/5LdX
9J9X+PcK/17hIPVsfkPqWPL/2w/D84/dPFL+C67eiMfXG8x/RkFDPHGNxD+2
y3ZhPSz/x02biN/4+Zk7Bv+LpE2wPaVMlR32mKyov6nG3568UJtaWtMRc04e
VRGe3ffE3oGlnt5+14/fOGig/58Wu0czo/mnPfDe51nuaPnfkWLmOWMbsXVX
7s5TY7zGkn9YHubeKSPlv7i6Te17Gsw/cx2W77gUkf+tx8uMZXJfpPEPn0ga
YB9p/qkPGEu3+KuLZh9BVtXf55W3/j33ybf+fqBMD5435siDiTDk77bx/+R7
RxX/v7Exo/kvr+tgbXx/tPaP5v8LqeOxi/HVcM9Y8o8vP9x9wsn0kfJfIvzP
D8F/thzhPhL/jBnlO5H4f0HCwHc0/xyx+9E7vF/SsU6+Ucf8mlM5tXU6Tvif
fT7/A635NRlFbMnHQvnRYMjOv9QHveH4v1LbodrFo+V/3YHCXrFte8eS/2dD
jM+zy0j5zypsnEdcNf/C/WP4Kw9nVs17XeIeif+P5RrzISPx/6a025dKe0Lz
v87y//Nt+jRYO5qxfav25vUyxtWn8s//WKw5+rpKOD9aMP8ch+Ofda8i818Z
kn/8G9jHY8k/Euoe+vII/0j5RwfzTpv+j0P/Y6uo9YYi+X+ULo9i/KfVRtb8
6/5f0oh5MIwJYm79yj3K/iGOcYbjCx1z+brzPyfE/GSEuHx2oGDVSPnPLGhc
8vLytAD/ueXXXUu35xhJGZVLXvv0TET+YXebtGMj8b9L/ueZYP5JK94t7+w/
dbG23+I/4CuWd6wqrGpbFWtuvm7S2dX7V+xVOzH8h7Z/xoN/+idC3YNP9xfv
HjFG0/6db9v/Tuyh/8w8GNq/0dj/+DRhOrL+Lw6j//H/D9X/99z9f9XX7/2r
ZxalGPvSo1/zyBFTFm+5mF5ed3NY/u9HxX/GQ8V/qPUpNP//Okr+7fs/7jtd
UYmPVfl/ouCf/t+NUc9/CcG/1f8bzL/UqelFVW3phJE5Z7Hm6esmP337sPJl
6P/1uM9Y8j9aP14k+5+40achutI9Kv//ugH/v7BaSxs7o6AxKv9/tPN/vwrD
/2dh+MevxP+r9+e7Jd2d8aEjFOZ6FFe3B/7Hj+YPx3+XOyT/ZTVjyz9+vNGM
7YrEP3Gz+vT8o+j/jUtYb85/h39pD/xX+gMyCxvjRjL+R6WB8M8+SKx3Tt8W
Y6BHyz9tEGucrT+joMEZHxql+Pym3/O9z8/1VkRr/0Tgn7Ux5288P2L+yVt4
mQj/j+7THtX4B/p/Lf5p/8L9SMe/af6JN/1Z2Oz4BUbL/6d7cnvP5jX0Ms/i
bH7DqNNusgrcloXoR7fzL22sceWfPCWPvw78X7L1f+H/H6v1z0fLP/1g6ZJm
9C07/I9c3lht8s9ccOqDrcfL1nZZ3Efin3kAjP8P2D/lrTNoI46Uf/jhf82/
2NprGWPkVWGKfj5wOP5ZR4cxTFtPlK2Nlv+KUOv/2/jPLm5+bMGXo+efvgOp
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
zyO/5P55Xu/kGh9K2pOumn/S54yk00Twr/U/391wqCii/qePgnaksv9LW7T9
H/f+pvN95bVqjs6w/rtg/uEyWv4Z78P/I+X/nMV/ptj/6P1g/lnXbv0I/P+a
f/ZiXSgMh+M/kv5fouyfFsLWlyNhlv/78kcxpvbrKqyNyroO+N7QqQH+t1j8
b3pA/oWZaPk/JfnEnp+R+P9U+3+2m7br+xux0Vrj39uQ5eMbyoc3jO4K5p/n
o7V/4J6+adayps0Utf63+X9W7hngH79WqP1Po+Wf9i3Xtf2zLgL/3I9fSPOP
DiGsi7dc9F0sk+NXF325I+hL/LpJc3v3k0VVbT+Qum2qMDK1uqnzB+V1HT+A
f8YZrrH4X7HjsltsVvdo+L/THZb/qcPxz/gWWInEf7D/f+GX2WqM6dufZRrF
Ve0j9v9jR0XW/+ZavrR/f0/7NzL/U4fz/2v+sU2w+0fLP2sFsc5btPyTzlIW
A/yTZidzap9kjo7UpaovJafsenzjja4fMC7kQfZZfhhF0rXvxWWpbayHx5qG
RzKr24SxNtKVNF+zr0CtH8O+EOiqUfEf3v55bDj+mZvKOt7h+GdMBEwEj3/Q
/NNXVlIdeRxoMP/PfpgSnf0Tqf1r83+KLfGY3v/azn/6kP3f6wLsjoZ/0uZw
ZnUU7d9c9e1g/umz3p5S1kcYsSXRMdQHmw4Xt9Gn8aiMDWXtR6/X95ik5wHy
U58nbVkvUvPPfiKpl+ofiH/2Ow3FP+mJvgnHPz6dP608M2L+abtJHq/Q/J+4
UPMqYYuW/6cSkw3swOH413GOln9saOYuRuL/K7H3aM9Hy7+5/8sA/xuU/79S
jfVhHEkk/gkr79b8k5+StgcI40Ub/+9tMNcwMqx+INjxPQLrhzJeXfSsn32h
pA6YdiD9qh/fZ8D+2Zf/wPq/NWjMmOa/tKZj+hvD6H/GqaxPGqb9+2Xo8W9m
H1alofmf/X6ykTdMGy6Yf4Q5PcPxr/dyitb/KTbE9Gj0P79572j1/0jnPyp/
l+g4zT9pmG2F0c6/hN0/kj7Fr4sQ15W7cz3Zxc2b96RVbJb2l2ff6QqP5p8x
iYxD1PzrtiXz30uvdcTDf20Y/rutfrBw+l/S+zTtgXD8Mwbmi6MlI+affiP5
/x3N/6+F/8LKthHx3+8x+XeH4b8+SP/b978Lxf+x89dOP7/kVET+Gc/PGI9o
+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
gWsLLLH9b5Yj6x4rT5+y3gPX1K+zTXZUGnEvdYaVZ6odgg/CTDOJ5wdmHNfs
zfcOpKWZtuh3/KA6H/V19L9Oc52f/E+bHX8YddGZvPpvcp72JQz92uKN+px0
Rff19Xu/yfysf3kziec9T8476kHfS7n3cM+/vnvEI/rcgw4gTpwnLNiTHH+q
j/KMlU+Gvg4zzN+x0sKjys98Mz0IC/pijpXn+pxOV86z16/1Tg9x/IX+X5cP
eSdH0U3q+BMrDLOtckK81HMJRzy0tyQcHnu+8F3qKnQcv+FV1/tmPZTMbzdH
ROoSN7qOdKE+IL2J3xz1LfNIfpEG1G3YppxH/1HHzTXtCbeOo7IpTN3vZu9T
joSZ54kr/3PkHtGd3YRL7KDuuep40vPMYt41wO2zi813S1zdWgeE5B29vyBg
76hv824dBn5rH4FZl6QEyoD1W32Xc6S1vMet3y363E1dTdqIqLTjGezzpyyd
Qv2I3rHS3w0HfFfKRbfFmGKGOoc214qdlxcTNnkXaeAWRmkDqqOE0c17OKr7
l55yY1OLnnBL23wL76Uul+e7CdNvF590s442z1BniN27hTBaaeBnf1F+Sxr6
1f+LTvglnn4z3wb93xs4n3jcb6W9n9+SDoH79ZF3SdzVkfuets6p30FH7h/4
pvk+/S7ztylSntRx7sLBYeLdFse9ZphT/BJ3dV6/W4dJ8k89z29JE3VN0iMQ
FiuP1H3kC+/hWSlT7qetMEl5MI9yD2WWI/YK9yoWpdxLGXDzP3lEuIkH/3PE
luDdHK36yW/m61FV/rjHsj/UvTwnfKjfOg0QpaPkHqVXzHQLWwa4D+G9CN/g
eavc+4nTr+eb6fEr66h+SxpZ9apKJ87xPOHhN2Vd57Ol19TznNfpaNkb6kgc
Zr9v6qKfm/qNcJNm6jtPyn2MM+A+7nnSjL/SK7+y7DP7eW2rcfzxG0nqOm3g
X1j3cZ48Ut+Wc//06gF1XfjtEelFpIwEfsOU9TtwDqHv17rWYx7NZ/itzwc/
J/EMfmck6bG+Ffh/ru1ZqUsG3S/M6DD1Wvns09ck/oHvDnqHLUySHuq3pKM6
Un7Qx/yW9O8lnSQP1b2SP4H4cY2jpGkv9SHP48/5pRzl3h7eIed7JF96qSfn
WO/ge3yDeov616p3CTdx6VF1yoITPdzzM+u9jH/kPbzDqu8CcZlllrlenlPh
t+qGUEK8yQ/ei0hd0kuZtcpvL3FBVDjN+FnpeKSXeyR86jpH0kWnI2HQ+aXS
S66Lnu61GFPPWPz1Eme+qZkkbsRH0q1H0lelFc/+WNKSuHLvT948pHilTPyz
PM/31HnrOteID0fY5vr/fe1A4D6OvE/fyzVpVyaRbz99y3y3XQjXT0Kcl3B6
eIZrpv1kniftkeD7Edqe3G9/H/EJ9X67oB/s4dG/aXfa75M09eh40DcteePR
1/CL6O/Y30EdyP08h//GfG+qOv7KtHOS+I1vUNrJKp1+/u5hpav0O7jGkTbe
vM/PJeGL/HjX5STaZnwr8cvsJPpvsHs/2paTpO1CfHjU4ct2XEr6eFdukrSv
k8ROSjLbqPRBZyfNUfbdEWxV9d7FX11M0n3UPIcNoplYtTcviTThOeKKPUs6
INqOtPj30FYn7gs3X0hC9PMJG7KSsDnwD9FXTtrgM7Ono9j3Sehj/AKwK+3c
JNq/XBdbRV3jN+efVPedYZ58kk4jSYskfCEr9+QmrdqbT9okkW6kNfHh26pP
Y9ulJOxNaTvsIm24d7nEGV6lnZ306Z48dQ6RtrE6SvsjKfGL7CTyas3+/F2c
W7u/IHAfsmafeVy6PSfpo605u253uWfqevCJIFF1TIjzEk6Pvl/XY/o3PudQ
zzCW9okQ3yGvQ92v5Q3Jb/0b36r+jT/Hfp9w5dH1IHn+6ifpHn2NPUlCvYPx
Fr+eb9bBB85UqHPrkwrUEd/GpSstM/nNOMmG1rvqN3bxL23pwjWOjJk5m98w
c/OxYqOlvWsmY4nIx8Kq1pn4jRg3VtvSOfONVWfFlk5W/c/w2iT3dtzpmVl3
vXNm6qW6mbQf8ffmVrTOfFd4e3GpWv9/Jn1QFXU3Z9JfAr/N8hy2rU7P++7+
mfhx8+Q50zZKHsT/0wt0OTjuYezbJ7vz8K/OLBPh/nvyfEZBw8y1+/OMnSfL
VJ8Hacm+mDqurBWWVdg48wU1R/KK8uncutsz87MD+er69Y7umdj//OY8a/Yy
l4Dw6zRKu1yn0ubOvd6ZPb2emel59TOzS5pmXihpnolfnLFXH351UaU3cw0I
Y52kG/dev9k9E1753d3Tp45IU1uXOtZLGuZVXJ/ZeOPuoOuhhHcWX2ubiQ9o
e8qVxF2p5YkHz1YNkpV78hIPnLk65Dw+Sp6RvEj87EBh4PyGQ0WJSRmVQ+5H
iq+1y/1XE/ekVQTOHThbmXgoY+i9dhGmAr+PZ9cEfpfX3Rx0HyxInqn3YX+w
xry+1nb7fsh3FFW1JR6W+49kVSc2td213tuhjqcv1ycyzonf12/eSySd+J18
/tqgMHONY931O4mSN66qxlvq3qv1t9S3evs9Lr4veaLOn81vTJQyk3jj1r1E
4T3R3gdJf9n54mZ1nj3xzhU2JZ7KqUmkv6ay4VYiPmvhQs7VqufOFzclJlnh
4P+KulvquX3pV9Uex6QD9T3lW/sq0DfClMS9PZG+IEQ/zzyOspr2RCmniTXN
nSqewnQgru2d9xPp+zx5sTaxXuIr5Vo9V1bTEQgD5/Tv1Jw6dR/h12nEmCjS
RseZdU0Yq8B4XuJT23wnMfdKq7pe3Xg70ePxBY9TG1Z6rDH50Qj9tqypQv8u
/V7B1+k7C/XcvI3nunmG/KBfVp+nX36475ljUEcWn2jlaFZ1N2NC+f3cRye7
j5671j0G7w30D0a57szUEPcO+w7O+QfWtQn5nBE0vyPUu2x9meoouqCbdEAs
/1D3b0wfVXfQe6fano86joHv2tY78tt+B62DNOQ3123fHPJtW/xU2nCvXj+f
34Gjz2+7br5H/W+7Hkr0vT5rzkAocYsuCXW+sKpttv5tH2cXyzUaW2/eC4Qp
u7h5tuit2WPw3iFzLKK53x/+uVDvmGbN25g2zL3Tgs8Fz6/R85L0PVJPzCYd
MgsbZ2OfbztRNhv+j52rnh303mm256OO4wCnA/wIU9NCnQ8VF70Wsi0Mwd+2
x0fdy/v1c3bR1+3vCr4n1DO2uH/D6/V/o9/jGyRybcg567x6RtgfdA+/ORfq
Ga+c91gS6no48YQ57/X5Q4ZJ/0b0NZ9vaNzUu71D3+e1naM86+cZNxvqHfrd
PG/1qX/DmmuhzjPWVqWv9Q5P0HP+AXa4z6XDxHP23+bz/oH3mrpnUPz1PR5b
GiC0oSrrb6p+JNYP0Hmh584G0o/3e8246O/Y085nxdGeXuq7Opy2NNfpr8MU
SCOfGQdbuVXf9Vnx9VpckR76WT0vK9y8xsB1Pdclivlf+t7/D9aCIFw=
                 
                 "], {{0, 192}, {192, 0}}, {0, 255}, ColorFunction -> 
                 RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 Magnification -> Automatic, MetaInformation -> 
                 Association[
                  "Exif" -> Association[
                    "Software" -> 
                    "Created with the Wolfram Language : www.wolfram.com"], 
                   "Comments" -> 
                   Association[
                    "Software" -> 
                    "Created with the Wolfram Language : www.wolfram.com", 
                    "Creation Time" -> 
                    DateObject[{2018, 8, 2, 12, 38, 9.}, "Instant", 
                    "Gregorian", -8.]]]], Selectable -> False], 
               DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {192, 192}, PlotRange -> {{0, 192}, {0, 192}}, 
               ImageSize -> {32, 32}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["17688", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Frequency Range: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"4762.45`", ",", "7538.214`"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Intensity Range: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.01`"}], "}"}], "SummaryItem"]}]}, {
                
                 RowBox[{
                   TagBox["\"Units: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["None", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChemTools`Spectroscopy`ChemSpectrum[
     Association["Version" -> 1, "Frequencies" -> CompressedData["
1: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
4f2WaP29OFl5Mto+Neqnd0CV3wfiTs07db0+iM00/6DacvbV9XgTa6rvD5do
PkLrD67H86F5CWeoPxOtHxALKf7EsZqn0PqHMbvmKxyoPkG0fmJUOLkZFT4d
QusvRusfxD6EtZHqBwPvNv765BscGb/qjhT1PX+u73VD3J7ic4SSuORQ3OqV
cZESH9yg+ATV7tMe1c7bTf+9Erf6XgfH9rlmXJqAbfN2qToTq6nPrr7va9T3
upF+f6anI6hl/zL+WaFv28dofTkN/PnA+WpEwJda2ND2GXGKvli8o/wc8yru
RduXxfPK0zGz4t8G/tyg7bc38LokttfGTAPP2xsyb6g+iY20744h5e8NvU6J
VRUXN/Q8vqHXK7FkMh40/FP5WEOvW+LPmX/utAtHqkDW0OuXmEUbJ9hnEoFZ
I8atElZMoYGLHVVnx+1KFDCu4mbsEa3J+474KsbiZQNwqBpzGnlehvf1hTfy
fcNGnuc38rp7I9+naeTrcyPP0/CY8v7GzKt5iJwwpDpoY1+vUe3Avzb2eii+
UR2gscfdaH3yeE/1gMYef+NI1UfxouoCmEVxOPbVg4RHVB9oEgyk1MYWdlTB
CHcoYMB4t193rYxNlVDhGsXnGFUTEtZQ/RT/Vt0A3yluwzJaH5r4/hA+VMCI
BRXHNSUOVB0Bryiew59Up8IBiuvwuOpUTb1ej11UV2jq9fqmvn/U1Ov1uF71
+qZer8faygOber2+qe8nNeP7aPEqekK80ibf5vSo6TA3nulCZoVV1PiCR7Qv
iGUHjs7TFffysQ3GoiMTzJiEW9UPiOn0XGE3BcbNPE/AJOWZKbEN0+r7Zp4v
NGf9UkKJ9TVBNfe8Aa3/GitpHxtVfuuCL9TfhZpupjb3PKK512cxjwLT5l7H
aO51WsykBuMWzIfqh8CRfyfakg6tz7iFx6FofdtY+rvK/+uFkZOv3zIB/z5c
+4elmEfPD2oav4yZ9Nyg2qXitvT8Eqcov8Q4ek5aen7Z0vPLlp5ftvT8Eu28
B2YcfHL7B7zBNB+vlY/7Vp5ntPJ9Y1ygvgtco0IKKq0Y18r3m1BltA3698o3
cUgyAgsMpHl/5VMrr8O29v2A1r4fgC00rvGq4h20PtLWvh/Q2uMc3Kv9ACys
8dvG9wPQ+tFwuQr8mF7jFa0PBhNrnOJEfaFo/VBo/VBo/VC/BQPdtc+J1heD
1g+F1g+F1g+F1g+F1g+F1g+F1g+F1g/VNhjeD4XWD4XWD4ULNK4wufJSnKrx
hN8ob8Eu95bkv4w7SvDJtfX5uB2/fyQSRVxWP8L5cvh+06TtrbB04kxLhrTz
OhjeOlG1+xbMlf1+g3P4pxYcjKtCZXuPT9p7nwn2VVzS3uul7T0eae/zKFr/
E9q5ALS+QzxKWBm/QzD8XAeuUGELP/06oHgzzFWtSsyBHTwe7uD1eqynBRKL
aFxgGs17HYkT1I+I97Tf3dHjX3yq/h2Mp7gXy2nfEacT9j3HCB2JIzqxLqhP
Fi9mapCmKGYkXWqAjVVfxyF6gDt5XR1H/vN3ozPYtn7bhW8wv/oUO/O86/vH
yUoIMbfWdzyj772z93tgUs0vnb3+2YW4SfMJJtxe/E1FvEG60An3nohRfwJu
VX9CF19/8dkj/sH4Ksx29TwHa0dLcrUE9tW8gCPVp4CD1D+F1u+NOVRvwvuK
P38PBkbpe8VsWqDQ+paxs75PTKANNVynvkasqe8R3yug6Ub8pecdC6mvBq8q
n8GBeqAxrfJR3KM8BisTrnzbPRjYN6zRmNyYsdCEWHWxi+JC/EfrER5swBeA
p/ljv8f//os3K20Pf16xkb4fjKR+Zhyh76WH16d7Ml60PqD12eOT3F8l/hPz
/VXu8T4coIMZPT2P6EW8o+cMZ+k8IGYcXuDSOtxfeGyuW9hHdZ7erNvaN8O4
ygPwovJIHN+v5KttmC0PvwFumJZxSLI+xN/6XPt4PRhP8cdZhl8d2530MmZQ
wbyv72dhau1f9fV8HpN3eJDvKubP+M+huP2Iu3ReELVt+zueqvLTg8VofcxY
oAMBeH9+nuqxqGMd7fDMXxs7zsFXWij7++c0gOdE4xZvaL4a4P0YA7wPA5XG
xxxIvN582NAAXtP4RLWpzsd6yqdws+LAQcTZ2vDEjRs63W2EtbRRirHV4ILn
FMfhfK1Dg3mOFK9hXgVMg33dwUPKp3Gq4q3BXsccwuepzwlfK44a4nXLIR4v
YTVtZAzxuGgoebzWC1T61hWVDs0Z6vtxQ31/BK8pnvnD94exm+IWtH5IjKH5
H0+R1n1C65cfFgy01nyPOfW8o53fGubxBGq7JvJwjxuG+/7GcI8Phnv/0XCP
A7Cl+t5G8Llq3sZWjUc/rj3C+45wqwqoGGPwyMVH8TfCodd4Q43EI4Ph/fOY
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
eRPae9bR7pXCFKozoL0/F7er3wu/VX3ypK9zJ30fCO29bWjvGTzpfbAnvQ/2
pOfFuFL1S8ycsNL9v3GLzn+g3RNz0ucrfKG+CbRzjHiWsO0lntLBq1OeH+Am
7auj3RdyyuMxtPdyYX81xKGWk9qnfN/2lPdZnPJxfMrXz1N+DuqU9xWe8n14
tPPwp7xOivbertPEw5nJwFDXdmTB5bpf87TXTXG0FkjU8YxB+F3Feaf/wk06
gISltZ6i3beJdkztjOd/aO/HPOPnTtDej3nG80C092Oe8fMnaPeh4mDtY5zx
vOUsf07Vq856XnjW94HP+rjGegok8LQKeqhtti1o59nR3tuDdu/sOd/PwD/V
h4Nq56t3zuusOFD9bnhU4xhTqL8K2z4cELyLdm/ief686lvFWixnBXCL9ovP
+zkGtPstzvs5O5yvi5rOex0M7Z6L8143v8D41r3JqGudfrngdbELXj+/4H38
eFf1GdTXvfuC18mwqgL3C16nuci8qfGESzWgUOlrM9T1RQMver0Gm+ggG9bR
eWUspPuw0d7LdSkU/p5A1NfcBKNr3wPtXuVLvq98yftz0M6XXw6F34d+2fc9
Lvu+B9r9gZd9vcN6+gtjAh2gv0L8pXged+keTLT7q654fHTF62qYnrRsK3bR
+7mveF8O2r0zV4mbG43JnQV3tmr4qfRVn6/Q7iVAHeNZiIfU2IzTdS8qVlH/
3DX+/v8MfpsJz3w1NOmvuEGFx2veP4d2by5eU16Geu3STVR7XMTr3m+Mdv/F
dT83ed3rN2jnbdHuF7ju/Y5o9wugvbcU7T0rN7zv8YbXc9DuH0R7/8MNry+g
3aeLaVs0ObUN7T4BtPer4Cj149wMBfT6pnzYQgV91OtCeuIj/UFwoc7dYufY
dTZeweo7+EJueV/qLa83Yz/dp4vrbp6o2h2j8jhMwtban7zlfR23/HvG0+rD
wor6i932+ultr0ff9n1KTKn1CtupzwMXFy6RdONtf65ve/8A6vUECe7wvcR+
9DgX2v2nd7z/Cu09oXf8vAXaOWq093TfDQV0LWF6LKqLGTBd86SRW97181d3
fZ3B8urXuev5E9o9t7he+yf3iIMUv6C9txGvMb13R7Wf/Inj9xzrtQHtPZ9o
76NFew/tfd+PxuOKY7GLvs/7vg+N6xW/Ym2dw8GPOofzgPVV3yN+nhjjv3rY
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
V4Guh68f10MNUiHegl8qHxMraF5Fg/ieR+dlN4jrIpyhc0x0/PfRVOhLgO5L
gO5LgM6nwjf0IkbPEUDXUz/Gz6/nF3peO47TAwfv0zrzsbjPeCx+D6jjvfMe
j/sv9Pkjur8YOn8b9ZjP4BEdLD8e10/oPmNPpEIeN3rOLep27IW6Paej603w
y36rph3BEupX2jAV5t+h+46h+0Ogxi1m9Gvl/aHzlJ9MhTxldN9f3Kb9Lnr+
IrpfKS4t9sHEk1iBbUuRRqlQ346uL0HXl6DrS9D1JY3i/dEo3h+N4/2Bi1Un
hHfsTgZ0xmEqqEHX66H7yKAeN5c9xb7m6oHLqqC2uy+gtrVD0fXOT8V1BS7U
BuLpVOgTiz5HQdeRoPOacFWl7KKfn47vlSapkA+OnnePnnPfJO6H0f0HmsR1
WZO4H0T3KXqG+4tlfQVcrLw2HK+5QOj8I3TeJX695uP7fsCzfmyX9y+sq75W
TeN7GssrboVT9b5Gz8NsGt/beJG+l6bx/Y3Oy2wa3+N4Wg/gZuwXtFBDzwtG
zyFEz4fFalrf4SDla+JqzRttFr8vdJ5+81RytOOrj5XDH8vdObIWTtI8TXxN
6yBMHqp41lwsroJtvFLfG5bRef+zPCeVl4g9r0mNeRA3qr8V3qX5LjhP8WK8
XgtynKQDKLxaAWZ854wX7j67Beuap1hYYJ6WbMjRc4HR89vxJu3nsbD2tXhc
9xVuGpW76in8VOf3LVnva440vqO8RWymGxSrqU4d3ZcK82mfh3/cfV2z0+h5
pq1SIT8IL1JeKGZ1LoYNta7A08oPxTE6D0Mnej3H567nHb6rFxSW0PeKK5T3
g8/pfYT59H3ikhItrzyrNfvjd1tVLoGvKF6ArfU9YlOdm2BD9Z3FOpqngQ8+
q4Fw7IO1Xn+ez0f9APHKstN63It732Ohjq5nfj7GFdHnXui6PHQezwupcN71
Qlxf4P90joKO82MdrSvQ/f3R5ygvxvX9i3E9gT5Hwat0H+IiLczxGdVzYW7F
AXGiAmZt2EfrQYl7Ff/DdqoXwAOrJ/aZis4PxBG6D9FzdNpy/ao/Dp5W3z08
pDhV27guxlH6XrClEkhfSoVzLNylwCF2n7f3rzFYXBs9XKLn3kvx/fNyKvTD
xo9q9Jz1NjqPBrdnr396M3ZRvvMrqZBPgM4nR9f/o/MHXonrOXQ/5lfj/gH1
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
DtcgRlTawhasoDndT6ZDX2p8WQOucbXuM/3vKnRrxPtYearovhw4UHnl6Hpo
dH+SxnxeTww/91l0/im6fxk6/+4prhfV36D7tOO3WvhhobdqXpzvafY3qrPB
X7RxQ+cBoOM66L7sTeI6ArtrX43OF8fOGkD5DJ+X+gZgUcXp0fW36L622Fsb
vqbpZKLWn+jzelyuviz4zfS7h5Zrxs+j+Qv4g567uEUJbuj4evN08k9uNhbN
4/oc26kPBzqO/mw6zI/Co7yeu+PkFidGfIoKvx1+Nq4zW6TDOSY+oPwZbPFJ
/tuXoOu+cbzW4S3TySLV7eG2wfm690XXs6LnOeOdX1RPirdKh/k26DrkVvHn
R8+ZxWt5rZV+jvtb/SxxlBb46HMI9Plva/bDLE8q4/vq+4UbtO5uHb93dLzx
+XSIW+NjSjDGnjw2duDqu2p/fPUL6ZBfiT3mFOg8CH9Voh06z/HFdDLy13lL
78Njo1mwYd0nXh+TxVmaS456PJdrkw590dBzIdrEdWObuM9rmw59jtH5O+j+
f+ht2kusBzQgHN0fAl1HgVpO5nk57ddZdXT/WHTeF36hffPLcT34SnzuYukr
yjSdjzpOOYjuf/VqOuRbocavjcNe6l+Gq9V/57V0ODdElY31Q6WvrULnQ77O
+kM3/uvxvYKltLHD+/WgQNf1t2OdpgcJTtd+Ag993PfQPnxY5/zt0+EcAz2P
AX9T3AAHq69uBz4/Faqg84vwBr0/0X1x0fUib6RD31u8QOd/6L622ESF5ThN
ccWOrPeUUIWOB3eM+1B0XlDH+DzDrTpv6MTnV3ngBY07xc8BPZe5U3y/ovM/
30yHvirYSPma6LoafIzb6iS+/uVzl13/Fu85zTNEz5FE54/gUm08UY/rKzvz
Hr1ozJaHUGNLO6LrstH5D53j87xLOsxPRtejdonvKVyj/Bx0H3P89vCyq0p1
5TqYdmm7+lhMCwc8oDgUZrXPwhc0F/7tdJK38oN/3YSDtF5Fx1/xTb3I8c+V
97x0AJ/VC+Ud3ts7No5+CJ03gkvUrwdv11xA9HzObqw/1YcePY8ID+u9jRUU
d8U2moOFzn96l32J3guYR3lP78bnBLrvGLpvYHfev/q8sOa3f972Bu5XP1Ts
W3HIrvV48dgSRc7skQ7zB/B37a/wZhUYoPPU0PWCuFqfV890cqYaPqDnauIg
FUij+yFjCR57V/bi7614E3rOKZ6RZeOAt2qgMNbt0uZgwffSYa4iPqzP6b24
XkOfU6Hj073TIW8YjyqvBj9XP358SfOAe8d9U5/4PMFz1DcDmz4wc/J3OE11
bH3Tob4SfZ6Lp37tV2gZ/v7XmM2530+Hflbvx+cJes4JOl+0Xzqc06D7RqPn
m+BU3U8fxJ8bfZ6H7ruD/5Z672i+/uwHdF30j+scdF8EdB7WANZ13Vser4ub
NYduQIyPDYjPyw/TId8Kc6kPPHqeIzqfcSDvQeUToOcWofMUB6WTYUqkRvfX
HhTXbdhMcfXBcb88OMZh0X1x8EktVIakk9cajGnbFV0/hj5nGBrjCVjl3zP6
f4w3Fvp9zYGh8boelg59z/Gk+lDh6YUP/1lgOPtAzdMaHvdb6H6L+Ivqm0bw
HFA8Bd1vHNsojoI+Xx/Jc7E1Ny56Tja+WOGzUsfR5yqj4vMenS+JVTTYD5dX
YWM4Oh36JI+O8Tbc9d2yDeePSYe6GPScCXxV51R4ra7DsXxPWl/jUhVm4HwF
1lHHv4U/SodzEXT+DF6jejdspXPMcTFehO5HjTrmnYsN1c8G3Xd6fDr000LX
a42P8Ud0Pyh0nseEdOgfgTcWHP/PIDyh6xEX6zzw47ivwNqqA8RLNRcK3S8C
J6/ngTIxruPQ58cT432INXTggS11TjyJ61/9V/A3HSSh66Exrc8Bk+yin8+a
nA79ZCfH+3FyXNeg83Nxq+ZZ4kDFzaekwzwiPM12rCV6Dh22VD4RXjn89RsP
4Frli09lHTl3XLFqeJfeg+j8CnQeJjrPGzuM3H5t0WnxvAE7nNf871dwmPIE
0XPRp8V9ClZUYtD0dMinQPcBQs8/nB6fY5hPG+vpcf8yg+9ZgTj03JIZ8bk/
I8ZpcW3jnNpf4c26P3DKVVvbFpyZDvND0eec6Dn3eIX24/iZ6qbwaa2b8Azl
w85KJxP0PsCqelHjureL/fMSPqB9HU5VP2XMq35K6HP02bz3VEeA5dW/FD/g
MdkODyluiXXUCAi/Ul/Z2fH5MYd1nuK6c+JzZE5cf6DnQKDzM9HzmNH97z6J
5xZYXomC2ELnFthDfbhwwKppR5ZiTzW2/iTuO+ZyPSs+jqe1v8LlWpfgAN2v
6D7JWFLx8Xncb4qP40LFx9HnzfiszsHQ8+awhfrkzefPV6ND/NRjmlkHaR+G
dSf8MHIhjs1d9dQv+LviRKl0yCtC1/Vj3+4sjNFzFfXrw7fsXav/v/Yr+vcV
SEnzfSlQgAobdU7HdQs6zwud55VJhz5wmXj+gGN0HoRq+zoTFT75Hl23hZ4b
l+V9/G/bJ2tlY/wc71ccCV2HgN31ueIHd5T7+pIcfq25lOh6TXQ+ODrfBF2v
ia5fWhD35ej+MXjjJDZE+rXibthI58jofiULua9L95p5FzpvE9Maw7owPifQ
fRPQfRNQ4eMCn6ZDvTDqmPNJvE3nyuhzelT7nLU4VAEn9Lymz9KhX8xn8XmK
ufTYQteloOtO8DX1Af88nbRuku5QB10/go9qniK6PwxW0foQ3Q9rEetrXbdY
TJ/vorhPXhSfs+j6THQ+4uJ0mFeDrtvA6U1YgKDSPzbiIvWp+ILnqvrvoevU
v4jradypPtOox+c+PPkaC+Ul3Hd67qLrK/ESPR/Qc/bwBa0TUelsJb9MhzkK
6Lm0WFABd7z/5PDX9mBTzf1Ymg59aPEpBQLRfXbQ/apQ6SxFl3EfPMMnsCy+
j7Bj2e4blyyLnxeqrKrccp5Diicsj89XfMgN+Hlv9mr2Q54V8fpD52ui6xDw
CtWvoI5lS37FfTl4SetnUMvh0ahjjU1fxXjQSvaTiqevjPsLdP0I1tN57aoY
x8Nbb+10dl903TmqvUWer7lvNN8LPS8A/dfEgdpnfcP3eN4Vv1RH9xFCz0P+
Jp7PfMt6WvOzUNvtgfiR6nUxZ0ffbkVX89zWwOPV8edD56Gifvzqa3heqa84
eu4fOt90bTppr+c/uq8PNm91LO+l63gOll63ovm6eA6F7gOHCrc98F069EnC
pwbvvmI7aptVdn064S75oT0qnedLPK1+vxvSoa4J3Y8VXQ+PzhPamA51k/iV
Dl7R/SK/j+e/38dzx+9j3PEH1hdKBEO1106j+wD8yH5F6yEsp4MhbDvpxPWH
0PmVP6XDHDW8WecR+Jrmh29iXaWBjOj6LbxT9+PP8f2NzoP6OZ4Pbma/ebzu
78/goAsa556HzvfYkk6+UL0+fl//pv1TcP/FHXacQh3v19yaDvMq8MbG7JSw
mvombeO6Ur9nfHlC0fSubXF9vR11w6Lzw9H99X7h89E5J97mHyTGWX5lXaB9
Jd6hfEBs3r9LruK/pZOJamyJruPAqVqH7UiH/Fl0ncGOGEfDbXqu7kwnv354
ywXvoOf+4nVaiO9ifaP7Hd2vH92nH+/Ue2g3z2fF5fGMLVtLzMEemteDzm/b
w+ep8wocrDghNtx58pwTWOThbv3u3MtzSOtp3KNBGOg8bPQczN/ToX8xuq4W
R7Bc+xPdJ3Ef+wvVmeMBzW3DB7SuRM+T2Z8OeTe4RXEyVPrvl6gw3El0394D
fN/KT0f3szoQ81TQ8/zQeTh/pBOF9Vui2iSMQLUR/QbdN+yP+L49yP2s/huo
sdd9sHbnklctwKV64aDrof9MJ0O078Ptqt/Bwmok9mfMV8FO2/hiDqWTWQcK
76l8KMaF0XNY8BvFTfHRNz4/41/0/NXDvB9U74t9VLCPnv+MfZ+p/uxGdN0t
/qa8uCPcR930xfF+VkI8eh7HkXgui64zwSHnf/vUGX+lQ18E7KZ+UnhK5zj4
sgaC4J5kQOcsun85ft+Av+DRGI86GvfL6PmHeHPnLWd+gLl0HeGvik+h86DR
+bXH4vMHyz01aGwNrFNgQtWW6DnGOIzH9nhU+tcXqGPU7dhV68bjfF+qP0fX
mx+P+1OsoX03bvzy/lYzj8f3C6r85DgeV53PCf5crR+xlvY9qLYhQ7C2XoQn
Yt4Q/q28oZMxfwrdX/lkzBtCPU6WnYxxTdQYpWtO8VzRwQzWrHjW3LdOxbwh
dD/PU3Hd+Dc/r/ot4796fqPnuGEBJTTgyNpd2hzECxTgP819rPcxpjVnEn/v
ycIIz1O+HBbUB/ZPOvTXwV9efOeDrjhV++B/Yj4Zut/pv/E5j+4/jjX1eeEg
bYD/S4d6KPxaHyAuVGMbHKzCzVyZsP7Dog8d2dsDd8598+UV6PjVGZnkJf74
B/B2Jayh13foOqczM+E9jI7voesy0X3xc2eSJS/e9XoDdD8y7KN8MsxRPfBZ
mWSd4vnoODa6XhIdhzk7kzTS+xfzqmEfjlc9zTmZ0AcO3fcN3eft3Ezod4wX
PVZv2Rx0HjR2137gvEzSWOsJfFADGrDWxfmeuTZPJmmhvD8cpAREdD4DnqP+
ankzSZGSVZ7vjtdooAZ6vny+TJhzhjoenIGP67mK7rt1fibppX6dWKRU73u2
ol6nZf6XSfrqnAw9vwnraM72BZmkvuIT+KL65eMonf+h+3FcmEmKK96OzmvB
/Spcwpd0HebPJEc1Dx47qm81+rmJapt2X4FMojTMHui+paiwwvkFM2G+Nbp/
LLq/BKq9bdFCmUTtYJsju8iHJ6P7xKDPyQrz5ynxD+uff3eZ6ej7D32ueRHX
jc6rcZHipKixAHtRr4frLs6E9QXqmH4KKi1pD3o+7CWZZI365KHKOyei81Bx
vNJ1Ls24vfAzqHSKj9Dvb2x2esHZRS7j76W6LnS/DbxV73G8Vn0iL88k101f
XegxdJwFnd+PjhdckUmqsN2uhY77oZbzq9Dz0a/MhLxTfE/PeVyjehgsw7L+
BI5SvdZV/Hn6/nCx8uzxFQ2sRNcZFckkl6pQCYuqvzZW0g+G7n+CC1TfdnUm
9KHCfnrv4yV6D2Ja/brwUZbBR/EYy6ZiRTNJV32/qLFOXdD5qejnMq7TPOJr
4nWLjq+h81TRfc7QfWqKZcI6Er+ZOv3wm+h5EFhEcw3QfTKuzYS+mOj9JS49
Pbj+WGyqfTvq9XUS3f+3eCbkE6LXyehzJfR5IjqPEMcpPlIikzTQAQUevemJ
69/FLspTRvffQ/f7L5kJ9am4Q/mt6Lm+2G73d8s2oOdJlcqEfCR0P2W8/NU3
t32IKidcjCr/2I8KR1xaOhPeX+j+Aaj/eSR6f46Os6L7j1+XCXXbOEHrQxyu
el90P2V0vhv6vVUmk2hbUxE9Vxyv1nMaXdeGXqfjQa0jUWliBctmwnxxfFR5
weh+Xuj9FHbV8wM9nxLP0f2Gnnd7fSbk1+Oreq5gbl57j+CHytfEYjrHxU+0
HsVE/XpwreqzsXGtxoN34wE1gruB54PqefAvrd+wjd6DuEcbMHRdD/6s/hTY
QAtCXKN9Pj6g/Sp+oe+pXCbMV8b5Og/Cctrw42Q1HEHPU8YRWodgYdX74Ptq
TItXqn8TLlYApnwm6aTnHD6kCx9vVFwAne+Ep3Q/4DYFgnGZ8vVwmuLP2FGB
cyxShisbh97EQupG3qeac4A+h0PXb+GFih/gIeW34CL1e0DXYaDjjjdlQp0y
PqnnC+7RcxSf1gMIF6uPG56v/TO6z+XNfJ6ap4Ld1Jccx6s/A36p587N8T2O
7iuLLbQPvYX7VfUUWEkHqbhK8QV0nAbVbvVrdDkJ1tH9dSv3m75XVNrXY+h4
DSosMhorKC8NPacPvY68LRPi/ej581hD+yz9WnW3t8X3EO7V+cztmVBvj173
oNeLWFh1Fei6CnRdxR2ZUB+DlVRXga6DQffXwEavXlB4L+7aOPqhS+6M6yF0
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
0fsB6+i9gBX1/aZZH+n9iQO0v0e99vJnsuEcIxPjDpkYv8pyX6ixDPqcF90X
IScb8j7QDVcXZEM/X3SeIzpfemE2zANaGNedC2M85NNsyFtEPY7P+Cwb8pvR
fe3Q830+572kfRy6nhhVdlp5EX++4kvo/hlYRn1IF7Pf1HsA3Yfmi2yoY/wi
PsdRZdl3LsmGfiFL4nMW3ef6y/geRfdVWBqfd9hXBQpYQweay+L6D79UvG9Z
3O8uz4a+z+j5MyuyoS5wRXwvofMyvsqGfty4ZF6n647iNJ3jrsyGfj4r4/5y
VTbki6+KcUvsoHqHr/nelVeEeh2sRvf/+ibGaXB78VbNv9evdc73LftZ3Wfo
vuio8WR3rM6GfDMcpfp6PFv5OWt47ivAtyb+/TCX6nnX8jlrQ4SVziz207nr
+Hm5nZ/FR9Qga11cN3+XTdorboN99Lmh6zDXZ8NcPDxXz22sqv3Uhmyoa8bc
/LbHUWHBRzZmQ5+ejfE6+57Pqed7axti4XGpJfNwiuomf+A9r0ZDWEl1xej8
7h/Zr6s/MjrPHt13/qds6F+FKlecjO4XiZtqF5hQdVM29JFALYu2Y7s9/EY/
Z0MfCVzD17UM31K9x2b+XMUJ0fUd6Pwn7KW49hauY8U10X0RUWmz126N+zJU
2+lPUcvxvNvY5y1tte6JbXG9j0OVn4fut7ed9acacaHPJTG31ru/8L+r8Rfu
VwAYH9V+8VeegzqYQZWP5f0tG/pe4KdnF8n5HHdenavG5Tt4f2ogKLqeDK9m
O1p+J/se1Tmg82lxk/KQd2XDHB30XNzdXA88Nlrhhe/Mv2kFbtd1uScb8mPQ
faWxoeIxe1lXPc1OHvepDu531sX77r6uGeZX3A6d77ovrs/2xbgHllnb5cPH
92dDfR/eob/wAZ5TimfikupJ8b+xZQv++YP3jvLtcK7qIQ5mQ59rPL2dBemf
2TBHAZ0Hh2dog3Aom+xS/zU8psYWh7OhPhWHK+ESyyoudIT9muJCuE4DwP6K
9y1eq/sW3VfiKM8jneuhz5WPxvfGsXhuhK+onzyOUsLU8Ww4j0fPYULP0zvB
96o5vyfi+cnJbMh/QufBYmnF0U5lQ3/YU/F9h56//XeMW2Ft3bdYUgWjp/k8
1GgNPacOndf7D/tibYCwjuamoPts/ctzckLVls/iv4rz4V7tl/6L5z1SCy3c
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
035kb07Szxr3qYwIF2m9RvelxJpaH7Cofm6/s+/VdxTdjxLb634Wqyj/7ffY
Z+D6V/IuOHtfTlKngi1Vt40VFIDYF3GmfRGHRefN7s9J8rTR/YXRfRT3x3qP
rymuj7dznL/oj5ykrhtdN4bFOM5OQI0PXoOej4dH2BZecyDuoVBlCX3Qc4UP
xH4PPef0YE7SLwddZ4YL1B8CXf99MPZ1WETnvz9zkj4cOE358viS1ht0nSCe
oUQKdJ+uv+J+G6epEb7+WestLlbdPq5Qngaq7dDZh3JSP/xUes6tuFPvJf75
3nPT+qHaYM/FQ2fzYB6KfffheD/R89fR9QiHI957ONYn1DHjzCM5SX4kKpzS
DJUu+BYqXLYE9Xj9ie6b9Df7Vs1rQvczwJ16DtF1i+j66n9ykj772E/fWdyh
vxA2UF0nrtE8maN8j3QwwEXKoz0a55ajsV4fjX3vMX4vw8++oDy21Jy/Y/Fz
w+NK3MX66ht+LOIZx3nO1VgC/x43vHx3dL0UPq2+cvifGvSeyEnqWk7E/ghd
b3ci7pNwyxlVahzCfzRX899Yz/Ev7ff+jfsA1LXU36h24NeezEn9q74kWE7n
jJNx33ky8gfQ9fj/8fdT/gB6HinuUXwYO6ivmP5Zcak86aSvGA5TXzFcrnUe
t+u+GZ3/h4d29/2mwinpJE8LHT9Hz7nGfdpvYRPdZ+blP1ep7S11sIPyrfE/
PVfouZSoX3+hfOnk/cQpundDf9/xiPqLYR4VouVPp3QdfAc6zxHFZMzV+Red
53pqOjVbecGo9LUO2EP7Y7wvxQcYlXZY9LR0kpeDNy9r0f91dJ4avqD8TfS9
/Onp5P1DjcN7F4905sSLuq4884x06h0F9nCQ+uJhL93zouva0PfsBdJJvwz0
HGz0fg6f1PwK9Bzsgukk7oHO70f3bUL3Qcdh571S88Iz00k+P7pPLvr+Fl33
gb5XOCud5IOhygp6o8aEf4x8JTbsQoXzip+dTu7F0f1dcUPnba1moPs4oI6/
pxZKJ32ZUMvIk+i6PtSP/SN0nivqx3HWOemkTyfWnjj4yyZYXQl3+udz+DDi
U1oYsJUGvJ6bTnVUIhz20sBUHKC5Vvi28nJwkvqM4OglrRqfxE76ixbm96OL
PjxLhUD4neIA6LkO+JzOVeelk/soPEXvG27l1/gablQcCbcpIR7z5uFf56dT
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
WtuuAXrdja4bhSO1vkLXaUHHV9dK0vwqVHvpLviz7nPRfbNxnA7K8YWWKxqX
r52k9euwifpEoPOmcLfmN/Q9H3odfXmS1ntF18tB1wFH1yVGn7Og6xLXSdJz
VvS9HY7Vuhi9H0Kfr2KJLpKvYL7WzxfbKMEYve/B4aq/gPXVFwZXKM/tSn6e
qseBvjfHqYoXw5aqu4COW7gqSe9d0fFf2FXndVfF+gKdr4aJ7sevTtI+tei4
LXTeNXqfgo4jRIUDVqmbpHmL6PxT1Oc2CrWsWIjuM4zuI1ovSfeZqB97P+z4
ZanPxuJ2xWejlt3HsFB1iK5J0rp56HqVOEIXAnix6nzgh5pH/i9JzwFQv/3D
6HgifFZ9OrGq7rtQp2QX108yut5uid7no+N/UOEkP2El9Zu6lvFB8T34vep3
ofv8ous34zbV/WiQpOfP2Ez3j1isOgM4WfdP2EXvW8Mkja9E56k3jHU2+rz5
T8wDir9Bx0diJ/188BltpPA/uu9pxPupRnPoPHXcr/sarHD+wHrLUWGUpa5L
0v0VVt43seffUeVC3sUes1gJofMd0Ocg1/O+q14Nls+8tWQoup4QXqw+XOj4
pxuStA4sarn5JGq7MgEPv7e5zHp03nnjJLNJddZR4a4D0OfyjeM9Qu9zb4zv
EJsqUfTGWKfgSsUz38TfS/WD0fGhuFn3YKjjw8tuTtL7LHQdBvR+E11X+c8x
buF+fVfoeDKso3iUW5i3lC+K1XKv6ToSHf91S8wrf0nSuqWo8KpcHHrkzG6b
UNuSGk2SNA4XHc+Iakeyv0msyzJJWo8U3X8GdVxX9lb2aRqYUcv3t9DxVOh8
lr8mmUGqG42l9e9CHYvmo/uL3hbvO07RuSi6/jG6b3rTJI0vRZ/3o64FDmNz
xbffnqR9A7CO5kWcovqrzWIdikcUr4lztX7BUePe7FSuOfsZfqzNcFxfVt5Y
sKb9wPl42/Dr84vR9553JOn9FLpuDQ5VvxVsq/vwO/mOdI6AZyleHNeeNTFn
Br6sul5YywFxSRp/i1VbL+32Jr6mcRFP6Jy3ZZLWoUXf+2E7/XvR9cOx8cLm
mdqteN9X7V3epVWsx3GY6s1g/scsRO7i/Tq34QfN0HXt0edtd8V+CcfoBWjN
+3w+G9PWsV/GR5V/groOv+5u5nk1hERtGz69O9ZbWH3kWec1uCfJXH5864m+
6D4Z6D4Z6D4ZbZKMym11Rk3nI9rE99om/r1t+fXPl+5zMw7U+TW6PjGeznJt
C7qPz73st9SQF90PAR0fha67iDmqr9MuSetq4lbNm+h8RCyjdU272B+2j3Ee
nV+MvgfHiToA6cDzL5mTtMRCpqPB6D4h2Fl1vtF9du9L0roO98W+Dt/vM+mV
VagwjzM7JmldMHR8KLr+JL696JHuJ/Bl5Xl3StL7RNRyL0Gfx6LvczsnaX0t
/G/TGiO+7hzrhfuTNP7r/thfYeubnjxrGZ7zQcnICn/jfVXdIBzLdu91fFAf
NPp+vwvzrdZj2KAK/wGOUx1bPKb8iK78ORqPcLDiG7vGeQS67sEDSVrvAAdp
fsKRX/91Q/lu/PsUX4XON0PHe3eLfWX3JK1XgM6jQse19eC/0/yDQ1TPAx33
hOM0cDyYpHXq0Hlk6L4VPZmvVRcV3a8C56huLV6purU5/L7a12FZxQuj7ytx
x4anFtXslWTu/fXgkhz8WOMPltN9JD6tgo8PMT4psQRf0AeBZT4be0oJ+lz1
77wPej44XPnz6DqvD7PPXrAx2wrL8+MZju5fhFn1I32E8VqNMHA62/n38U71
83okzh9683M5dV1+DuYuvOzfE9BxVniX6jT1ifMkdD0RHKNxFW9Q/dNHkzRO
Cp1gha6XiS2UX9Q3yezUOIOjND9iZ9WZwEbfFF1z42N831pgo/PEsZkCldFx
S/0YNxT/idOGHK37ER7Ze/4zO7DNxKId1fsnadw6+t4R81X3AXMLqm09qf9f
69HHk8z/AItl9Bk=
       "], "Intensities" -> CompressedData["
1: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
N8TeKleZrFlJ7DH3vXsaiD3R8kFPaWkREzs1d06Wv8VElMIsiwVZTEx+ZKTA
u8xE58IRh7xUYvfpbZhnlMxE1TSpzcKJTAQ/6asyJvs2XZsfEbNIelzVpJAd
JL9aWTtv80UmsqwC1J5eYYKf05TPIPUNqDrbdOcw4fJIdOblmyQ/+En7rtsE
3+5ylX3eGPzve9vkGz3yBC9EyP2rWTYTe+w63kpcJe0L6s8U7BvFj7wSYRA7
dMfoe8BMdLxxbd8cyYTHC/YajXBiJ120fHr0IFPwPg4TKXPSZCOJvfrw7tca
lWPEDvuZ1Fcfy4RSQslk0XNk/3rDQjblAhPjV3139yb02ywIF3Ej9tfQ3gWf
TxB66vUeSHXmMyHq4xC6rZDYo5NE9JbcZ2KR5GV96WIm5gWZH1n8kPQn7Ocx
yUdMYF688WMyzll31ojsf8qEPKf+3qoKMm/rXnKpL8m8+ck8y39N8nuvzg2r
J+NUHGt6lcybxoLJEXZfmWBPn/by/A8yjqcuL/AYYsLt8ovgB0IscOlhnakT
WFge8tR++hTCJ7/oIrlTiT1/W/L1Aekx+N93rn2G8W+C9+KxXksrsRfVl4vX
biN2/rZzUxQuTGIhcZJR4XYCc3bdzm4j8Eq77e9hkn/YWjfhNuE3s5fMWGlJ
Fob+PTtN6s05L7wlToYFn9D7WRNnjfm3ZG6LSro4jwW1wAtmLxewsEG3uqJF
mey/byjM/qjCwooP4dplS1kQeySxIF6DhV122fVmK1jYe93XtUuT0K3yQyxK
Z4z/K+18XyevZyHBqSGkVY8F0cwHN/4QOGXdLPfP5HvO1LaUCwTP9+O+g4Wr
WaDkNkzTWkXs0gMTTMRIvRvNB5foqrHgNjv3VsUiFiYmFvPb57OgXLdwXdRc
Fu7/C+9H6N+X4jfrvSwL9qz21voZxD7+5/Y4nYW5ykFP+0l/LbI9qs+RcTxb
nnliCRnHiSzVb5FknFKMmtoKx7P+b14sdw3knfrDRMWxiqdNA0yUfjG9ndjL
hEF0wL5qMp8G+7nzAj6T+aRKZUxuHpt3+b0qe1veknTTwftqtSR/4aNvNq+Y
0Df8NN6/Zgz+933J6XcteQQvOnVh58E6JuINLww/biJ4/9Xva+Na8I3w/ay8
6jCyT1AK4LvUDTNRdMptzl3CN6/+PXssRej+6fpr7mwyr0FSv2cosXB0csGf
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
Oei+b12wFYRnyNstsbDC6WX9cjPUrBDwusbuyxIr7F5z4fuLmVYokT0zfGXM
EirXcl0ODliiu6dKxa/bEq/KPnpv6bTENNllfHMI/VQCZ779YIkZLbX0vH6S
TkbVIHjUEjW+mVIb+ayQeUnw6685Voj4928VSStYof3oXnkrcg4229a+1gof
314cad5khRnRw6UMLSt45suzKrStMOq6w+A84aOsXctUyfOmKb+Fix8s6t9M
8h0v6Gi/vtIKllP++yIaVgoumPOffdvbW83cEn5a4sPYh5Tqz0S/K8wbo+8s
cbmk4nZuoyXaRvPOPbpviX2JW13db1jilnPiSFChJUIjmX5fMi1R3CFe1r3f
Ev1H6fvYXNIOp1M/l4aT+JHgpn0hlqg8I2TAR7FEnMWNwAsBlqgTidwSQcK0
qXjazPT1XQxL1OsN2EbHWCKxJHybc7IlJLYs22F1hIT7Pjl5nrLE8xsNKck5
lhguaGl8VEQ45aem4dv2vEPXLVEkv1eKp8oSZlN+FKvyZXY/uUfSjYQYyd//
j//73HQqXeFUvvqpcqpCLlrVlljit4bq3lJSz5qTS5eX5/3n36ZTYRv3L+EW
qzC9bRcssVRiHu0k0cfh2vLXxy5bYlAll73p6n/+cxZd4me6VVhitTQj6CWh
SP2Axisip6aG0u5N0umOfHOIu/ifP5ybcmJtvhlETlv+jKwUS/Cna29s5Vhi
lXGj+3y6JYyn/NxQb/2uiHe2xNEp/zUVyisXjOpaor27QkdV8z8/NYp552V3
rLCEzbRyzyppMg6dp423SljCvTK25/h8S0By86pfIkROlOKdv0KWKOkwK8kW
tMT2ncUj/XxEn4vbUpunW2KxuMger2mWcFI13/b9jwU4v2fVxY1aIOfBfdsF
3y3wKJX7PnvAAoPOWkEbey0wb9XPn7XvLaA25fdmY+c+uYlXFhD9uudtdb0F
Hiw9dTHjgQXsp/y/PviomJZ69T976+vVNjb1nyKc8tMkInwzNC/OAvdWFXcr
0C0QqXfWtsDHAu6y+4ZOOVjg1UrNnEOmFmg1v0iL1bUAJfuDfaiWBVKkOxw8
N1hA6/YZuoWyBZh7ZQt05C2wkxU4qrzcAlmp4W6LpS2w74Xee35JC7yM7LKO
XmgB6Sm/XP9j78ICl6b8lo0utZBz47NAVezWW548Fnhouv700V/mWJwk/2B0
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
1A0/KF1cG/Cr1g8yFr1P39zzg8j3TK26Zj9MZNLOFbT5oV9z+pz9L/3w7G3V
zsA3fqjbR39v9s4PzwvaHm794AdxvV5VzU9+YLrmSeuP+OHnD5EYh69+OMe9
32HXqaE7FwiGX3Y78548z8RevrVf/PDG0KJ792dCr3IqePbRD2X3v7yzHfDD
Btk5p2b0+2Hu+pvP3/X5wfrP18RhQv+OvVqxgvDx109xO/i3vNqn+5YQedoc
tWXdPwjdt0S7ZYo/qssFGWMC/uCPGzklI+oPmtXLVr35/siQr50aKOuP7q+F
ymkr/LGq7pDbdSV/MCfjc/jj5n/3dCgbjihR/Ll+jj8WS95ZNWrrj2AWn9h0
V3/oSI+07PfyR/aM/f77AvzB0XzUNRrij+fXapResv1RtcvZYX0kyZdY6MoT
TeS9ytmqs8cfbO79I72ivWWl8f7ceB7+uK2nuErugD/WdTW+e5lC5HLvLxGc
J+ZAOeqP0wuHrjzO8Mc9h6kC6Vmkvo9NLY+c8Me5mMfZD076w8crpXPzaX9c
2hsr1XfWH9EvLtOaLvjjpadkzMdL/ri+ouy87lV/LJdPevS80h/DAy5mbdX+
uHZpQ+vD20TuNi2+p/dJ+yK+KCQ+8sdVO6rax2f+SHtjofrztT9EJv0rfyx9
YzVFYcQfT20tH+CnP+TCf+7l5w+A0Fbj1TvFApBSrFOXuygAs1eVaPxZEQCl
14usR1UCMFqfPG8PAmD/7lfYWcMAuKsHxXhaEL66rlXXHALgtMcy8oxnAGic
hiDFwAD0nNLi12MFQHpaxbYfOwOw9Wt1wsbYAFiyLDumJQXgmZJ91PnUADQo
PApZmx2AVZZXyg6eDsDEdX6jxosB0HBqWNt7LYD4cT89Xt4NgKDJ8YHzjwOQ
mVl0y7YrAOdSjrdbfw7A5rUBGmemBOJR0+asr7MD4T7pdwViVLDD7pBSIOIL
z197vTUQUgYRUmvMA1H0jhIe6RYIxEq9bAgJxGO5gU3z9wTCs7bymFdqIMZc
En5czQtE8uS50kD8WByhrneH8N/5lB3xLBBOH8ui8wcCYX30Ue+t34FQvL25
8ZF4ELw3JXV/Xx4EkR/VK1U1gyAz9Un+fosgZG3/63AEIfrzuRWRu4Lw3Vzy
ilxqEH5HzBsaOhOEVL/Tz15VBuGa7J3gzw+CQD/BrFR4FYQVk+dug/Am/Skl
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
       "], "Units" -> None, 
      "MetaInfomation" -> Association[]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.7598785999648867`*^9, 3.759878601171114*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"ac79e144-040c-4282-865e-e2c001bf5181"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"specs", "=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"freqs1", "=", 
        RowBox[{"noQuantaFreqs", "[", 
         RowBox[{"[", 
          RowBox[{";;", "25"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"stuff1", "=", 
        RowBox[{
         RowBox[{"noQuantaFreqs", "[", 
          RowBox[{"[", 
           RowBox[{";;", "25"}], "]"}], "]"}], "*", 
         RowBox[{"noQuantaInts", "[", 
          RowBox[{"[", 
           RowBox[{";;", "25"}], "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"freqs2", "=", 
        RowBox[{"oneQuantumFreqs", "[", 
         RowBox[{"[", 
          RowBox[{";;", "25"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"stuff2", "=", 
        RowBox[{
         RowBox[{"oneQuantumFreqs", "[", 
          RowBox[{"[", 
           RowBox[{";;", "25"}], "]"}], "]"}], "*", 
         RowBox[{"oneQuantumInts", "[", 
          RowBox[{"[", 
           RowBox[{";;", "25"}], "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"freqs3", "=", 
        RowBox[{"twoQuantaFreqs", "[", 
         RowBox[{"[", 
          RowBox[{";;", "25"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"stuff3", "=", 
        RowBox[{
         RowBox[{"twoQuantaFreqs", "[", 
          RowBox[{"[", 
           RowBox[{";;", "25"}], "]"}], "]"}], "*", 
         RowBox[{"twoQuantaInts", "[", 
          RowBox[{"[", 
           RowBox[{";;", "25"}], "]"}], "]"}]}]}]}], 
      RowBox[{"(*", 
       RowBox[{",", "\[IndentingNewLine]", 
        RowBox[{"freqs4", "=", 
         RowBox[{"oneAndTwoQuantaFreqs", "[", 
          RowBox[{"[", 
           RowBox[{";;", "90"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"stuff4", "=", 
         RowBox[{
          RowBox[{"oneAndTwoQuantaFreqs", "[", 
           RowBox[{"[", 
            RowBox[{";;", "90"}], "]"}], "]"}], "*", 
          RowBox[{"oneAndTwoQuantaInts", "[", 
           RowBox[{"[", 
            RowBox[{";;", "90"}], "]"}], "]"}]}]}]}], "*)"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ChemSpectrum", "@*", "Transpose"}], "/@", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"freqs1", ",", "\[IndentingNewLine]", 
          RowBox[{"stuff1", "/", 
           RowBox[{"Max", "[", 
            RowBox[{"Join", "[", 
             RowBox[{"stuff1", ",", " ", "stuff2", ",", " ", "stuff3"}], 
             "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"freqs2", ",", "\[IndentingNewLine]", 
          RowBox[{"stuff2", "/", 
           RowBox[{"Max", "[", 
            RowBox[{"Join", "[", 
             RowBox[{"stuff1", ",", " ", "stuff2", ",", " ", "stuff3"}], 
             "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"freqs3", ",", "\[IndentingNewLine]", 
          RowBox[{"stuff3", "/", 
           RowBox[{"Max", "[", 
            RowBox[{"Join", "[", 
             RowBox[{"stuff1", ",", " ", "stuff2", ",", " ", "stuff3"}], 
             "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"freqs4", ",", "\[IndentingNewLine]", 
           RowBox[{"stuff4", "/", 
            RowBox[{"Max", "[", 
             RowBox[{"Join", "[", 
              RowBox[{"stuff1", ",", " ", "stuff2", ",", " ", "stuff3"}], 
              "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "*)"}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"ChemSpectrum", "@", 
    RowBox[{"(", 
     RowBox[{"Join", "@@", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "@", "\"\<Points\>\""}], "&"}], ",", " ", 
        RowBox[{"specs", "[", 
         RowBox[{"[", 
          RowBox[{";;", "3"}], "]"}], "]"}]}], "]"}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7567739765255823`*^9, 3.756774019084448*^9}, {
   3.7571804375788116`*^9, 3.757180466479905*^9}, {3.7571805879092197`*^9, 
   3.75718063750918*^9}, {3.7572697000574493`*^9, 3.7572697222422447`*^9}, {
   3.757269795922861*^9, 3.757269944000833*^9}, {3.7572708163725233`*^9, 
   3.757270818524991*^9}, 3.757290366667061*^9, 3.757291859945497*^9, {
   3.757534464645267*^9, 3.7575344656088257`*^9}, {3.757805613873693*^9, 
   3.7578056400500927`*^9}, {3.759865341935062*^9, 3.759865393872827*^9}, {
   3.759865550394931*^9, 3.759865608790259*^9}, {3.759870675255396*^9, 
   3.759870691392745*^9}, 3.759910676139492*^9, {3.759910763477028*^9, 
   3.759910785169384*^9}, {3.759911285465448*^9, 3.759911287997594*^9}, 
   3.75991252280932*^9, {3.759913010943143*^9, 3.759913083922379*^9}, 
   3.759913541191367*^9, {3.759913590598276*^9, 3.75991362190088*^9}, {
   3.759913680924652*^9, 3.75991371302218*^9}, 3.75991374644666*^9, {
   3.75991385954161*^9, 3.759913888080482*^9}, {3.759936554364305*^9, 
   3.759936556641745*^9}},ExpressionUUID->"321bd732-3aa0-4c57-bb2e-\
3c07a15ef419"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Work Up", "Section",
 CellChangeTimes->{{3.759936615134904*^9, 
  3.7599366170545263`*^9}},ExpressionUUID->"d812534c-0903-476d-a534-\
8688e09947a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spec", "@", "\"\<Frequencies\>\""}]], "Input",
 CellChangeTimes->{{3.7599365761761827`*^9, 3.75993658220732*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"c93e9706-63a7-43c2-9cb5-1bb73cb9f1a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "259.26490023423685`", ",", "497.38609129417455`", ",", 
   "732.6779356814222`", ",", "931.6423412151635`", ",", 
   "1145.0212319397833`", ",", "1193.5317683389876`", ",", 
   "1351.607825758576`", ",", "1500.6903657205403`", ",", 
   "1662.9801977840252`", ",", "1747.5963154935162`", ",", 
   "1840.4797260285704`", ",", "1908.6106068197987`", ",", 
   "2029.3310287454515`", ",", "2090.40264737542`", ",", "2223.141170417599`",
    ",", "2304.4794461598503`", ",", "2376.8411414737348`", ",", 
   "2404.1148028533207`", ",", "2460.5188738162396`", ",", 
   "2530.1539379468886`", ",", "2613.1604818755877`", ",", 
   "2680.5204345415113`", ",", "2739.897962681309`", ",", 
   "2773.419648439507`", ",", "2812.0946713811136`", ",", 
   "2187.7299372385605`", ",", "2233.740798091516`", ",", 
   "2447.580119309656`", ",", "2487.1557693734067`", ",", 
   "2685.339001909422`", ",", "2721.4424267372815`", ",", 
   "2919.973543997563`", ",", "2951.806260895508`", ",", "3121.110490341496`",
    ",", "3150.8860566457734`", ",", "3330.0474557502894`", ",", 
   "3347.8878773833276`", ",", "3391.6602241184446`", ",", 
   "3427.683013114729`", ",", "3537.342448530195`", ",", "3561.113735940424`",
    ",", "3692.889414290141`", ",", "3710.5181972158607`", ",", 
   "3853.7968932539807`", ",", "3867.5051047597663`", ",", 
   "3936.313184483035`", ",", "3967.201403821993`", ",", 
   "4023.7643987966585`", ",", "4038.658247586107`", ",", 
   "4114.1115270326845`", ",", "4372.815175368683`", ",", 
   "4401.415605427348`", ",", "4468.655525991286`", ",", "4633.610199812101`",
    ",", "4661.760799830954`", ",", "4714.862627414754`", ",", 
   "4870.445651723188`", ",", "4896.434937882179`", ",", "4944.780967250932`",
    ",", "5103.725375888578`", ",", "5125.325925698504`", ",", 
   "5170.052868634579`", ",", "5307.526826848509`", ",", "5330.001324170444`",
    ",", "5367.873104180908`", ",", "5507.702346549253`", ",", 
   "5515.009286521759`", ",", "5562.603570880427`", ",", "5581.698571786517`",
    ",", "5619.373714998423`", ",", "5658.1871331827715`", ",", 
   "5716.213833646325`", ",", "5728.852471852966`", ",", "5771.652258097485`",
    ",", "5880.399120590417`"}], "}"}]], "Output",
 CellChangeTimes->{3.7599365825305223`*^9, 3.7599366187241*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"f59fed27-ed91-476b-8ec8-2be729cfc025"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spec", "@", 
  RowBox[{"\"\<Plot\>\"", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.759865406257257*^9, 3.759865407727695*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"8cd5b313-5319-425d-a9f0-45cc3d7c3920"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[{{259.26490023423685`, 0.}, {259.26490023423685`, 
      0.9999999999999999}, {259.26490023423685`, 0.}}], 
     LineBox[{{497.38609129417455`, 0.}, {497.38609129417455`, 
      1.1720997823281854`*^-14}, {497.38609129417455`, 0.}}], 
     LineBox[{{732.6779356814222, 0.}, {732.6779356814222, 
      0.046665380734393594`}, {732.6779356814222, 0.}}], 
     LineBox[{{931.6423412151635, 0.}, {931.6423412151635, 
      1.1160256568180888`*^-11}, {931.6423412151635, 0.}}], 
     LineBox[{{1145.0212319397833`, 0.}, {1145.0212319397833`, 
      0.014451092459708248`}, {1145.0212319397833`, 0.}}], 
     LineBox[{{1193.5317683389876`, 0.}, {1193.5317683389876`, 
      4.51102143454665*^-11}, {1193.5317683389876`, 0.}}], 
     LineBox[{{1351.607825758576, 0.}, {1351.607825758576, 
      4.376987789577993*^-12}, {1351.607825758576, 0.}}], 
     LineBox[{{1500.6903657205403`, 0.}, {1500.6903657205403`, 
      0.010862626590823685`}, {1500.6903657205403`, 0.}}], 
     LineBox[{{1662.9801977840252`, 0.}, {1662.9801977840252`, 
      2.980632680171542*^-11}, {1662.9801977840252`, 0.}}], 
     LineBox[{{1747.5963154935162`, 0.}, {1747.5963154935162`, 
      0.052614308685506796`}, {1747.5963154935162`, 0.}}], 
     LineBox[{{1840.4797260285704`, 0.}, {1840.4797260285704`, 
      0.0056974714486411815`}, {1840.4797260285704`, 0.}}], 
     LineBox[{{1908.6106068197987`, 0.}, {1908.6106068197987`, 
      1.7904901093998688`*^-11}, {1908.6106068197987`, 0.}}], 
     LineBox[{{2029.3310287454515`, 0.}, {2029.3310287454515`, 
      5.013738229603636*^-12}, {2029.3310287454515`, 0.}}], 
     LineBox[{{2090.40264737542, 0.}, {2090.40264737542, 
      0.00009833995589885698}, {2090.40264737542, 0.}}], 
     LineBox[{{2223.141170417599, 0.}, {2223.141170417599, 
      9.436798061043884*^-12}, {2223.141170417599, 0.}}], 
     LineBox[{{2304.4794461598503`, 0.}, {2304.4794461598503`, 
      0.0006430331048595235}, {2304.4794461598503`, 0.}}], 
     LineBox[{{2376.8411414737348`, 0.}, {2376.8411414737348`, 
      3.4999328603827134`*^-11}, {2376.8411414737348`, 0.}}], 
     LineBox[{{2404.1148028533207`, 0.}, {2404.1148028533207`, 
      0.0008031584525132986}, {2404.1148028533207`, 0.}}], 
     LineBox[{{2460.5188738162396`, 0.}, {2460.5188738162396`, 
      7.594992953396712*^-11}, {2460.5188738162396`, 0.}}], 
     LineBox[{{2530.1539379468886`, 0.}, {2530.1539379468886`, 
      1.6612921982925557`*^-7}, {2530.1539379468886`, 0.}}], 
     LineBox[{{2613.1604818755877`, 0.}, {2613.1604818755877`, 
      2.943665932841813*^-11}, {2613.1604818755877`, 0.}}], 
     LineBox[{{2680.5204345415113`, 0.}, {2680.5204345415113`, 
      0.000035979687189124054`}, {2680.5204345415113`, 0.}}], 
     LineBox[{{2739.897962681309, 0.}, {2739.897962681309, 
      2.4418038401144104`*^-11}, {2739.897962681309, 0.}}], 
     LineBox[{{2773.419648439507, 0.}, {2773.419648439507, 
      2.2513547553173317`*^-13}, {2773.419648439507, 0.}}], 
     LineBox[{{2812.0946713811136`, 0.}, {2812.0946713811136`, 
      0.00011121298653621141`}, {2812.0946713811136`, 0.}}], 
     LineBox[{{2187.7299372385605`, 0.}, {2187.7299372385605`, 
      0.0787654327933824}, {2187.7299372385605`, 0.}}], 
     LineBox[{{2233.740798091516, 0.}, {2233.740798091516, 
      1.0497392200468723`*^-12}, {2233.740798091516, 0.}}], 
     LineBox[{{2447.580119309656, 0.}, {2447.580119309656, 
      4.6150694916957155`*^-12}, {2447.580119309656, 0.}}], 
     LineBox[{{2487.1557693734067`, 0.}, {2487.1557693734067`, 
      0.03085295235210506}, {2487.1557693734067`, 0.}}], 
     LineBox[{{2685.339001909422, 0.}, {2685.339001909422, 
      0.009381379818759432}, {2685.339001909422, 0.}}], 
     LineBox[{{2721.4424267372815`, 0.}, {2721.4424267372815`, 
      1.8645285223619016`*^-12}, {2721.4424267372815`, 0.}}], 
     LineBox[{{2919.973543997563, 0.}, {2919.973543997563, 
      8.240284095555746*^-13}, {2919.973543997563, 0.}}], 
     LineBox[{{2951.806260895508, 0.}, {2951.806260895508, 
      0.0035097732109451115`}, {2951.806260895508, 0.}}], 
     LineBox[{{3121.110490341496, 0.}, {3121.110490341496, 
      0.0008398560846680864}, {3121.110490341496, 0.}}], 
     LineBox[{{3150.8860566457734`, 0.}, {3150.8860566457734`, 
      1.6721997526333904`*^-13}, {3150.8860566457734`, 0.}}], 
     LineBox[{{3330.0474557502894`, 0.}, {3330.0474557502894`, 
      8.406315472194206*^-13}, {3330.0474557502894`, 0.}}], 
     LineBox[{{3347.8878773833276`, 0.}, {3347.8878773833276`, 
      0.005626341405893603}, {3347.8878773833276`, 0.}}], 
     LineBox[{{3391.6602241184446`, 0.}, {3391.6602241184446`, 
      0.005717402800893772}, {3391.6602241184446`, 0.}}], 
     LineBox[{{3427.683013114729, 0.}, {3427.683013114729, 
      4.03883367256356*^-14}, {3427.683013114729, 0.}}], 
     LineBox[{{3537.342448530195, 0.}, {3537.342448530195, 
      0.004962960323898015}, {3537.342448530195, 0.}}], 
     LineBox[{{3561.113735940424, 0.}, {3561.113735940424, 
      9.589117090157571*^-13}, {3561.113735940424, 0.}}], 
     LineBox[{{3692.889414290141, 0.}, {3692.889414290141, 
      2.4387462497061524`*^-13}, {3692.889414290141, 0.}}], 
     LineBox[{{3710.5181972158607`, 0.}, {3710.5181972158607`, 
      2.130068978644156*^-6}, {3710.5181972158607`, 0.}}], 
     LineBox[{{3853.7968932539807`, 0.}, {3853.7968932539807`, 
      0.0008100969626896508}, {3853.7968932539807`, 0.}}], 
     LineBox[{{3867.5051047597663`, 0.}, {3867.5051047597663`, 
      6.023405061489747*^-13}, {3867.5051047597663`, 0.}}], 
     LineBox[{{3936.313184483035, 0.}, {3936.313184483035, 
      3.9451206258351366`*^-12}, {3936.313184483035, 0.}}], 
     LineBox[{{3967.201403821993, 0.}, {3967.201403821993, 
      0.0003998189478153102}, {3967.201403821993, 0.}}], 
     LineBox[{{4023.7643987966585`, 0.}, {4023.7643987966585`, 
      2.3306661613610894`*^-12}, {4023.7643987966585`, 0.}}], 
     LineBox[{{4038.658247586107, 0.}, {4038.658247586107, 
      0.000329174351007333}, {4038.658247586107, 0.}}], 
     LineBox[{{4114.1115270326845`, 0.}, {4114.1115270326845`, 
      0.00003162739963730732}, {4114.1115270326845`, 0.}}], 
     LineBox[{{4372.815175368683, 0.}, {4372.815175368683, 
      0.0003386034996477672}, {4372.815175368683, 0.}}], 
     LineBox[{{4401.415605427348, 0.}, {4401.415605427348, 
      0.00002599644975024132}, {4401.415605427348, 0.}}], 
     LineBox[{{4468.655525991286, 0.}, {4468.655525991286, 
      0.0001829869453133905}, {4468.655525991286, 0.}}], 
     LineBox[{{4633.610199812101, 0.}, {4633.610199812101, 
      0.000020405751982578337`}, {4633.610199812101, 0.}}], 
     LineBox[{{4661.760799830954, 0.}, {4661.760799830954, 
      7.95230897873636*^-7}, {4661.760799830954, 0.}}], 
     LineBox[{{4714.862627414754, 0.}, {4714.862627414754, 
      1.5809279732778693`*^-6}, {4714.862627414754, 0.}}], 
     LineBox[{{4870.445651723188, 0.}, {4870.445651723188, 
      2.122897593800136*^-7}, {4870.445651723188, 0.}}], 
     LineBox[{{4896.434937882179, 0.}, {4896.434937882179, 
      4.077469125144495*^-6}, {4896.434937882179, 0.}}], 
     LineBox[{{4944.780967250932, 0.}, {4944.780967250932, 
      0.00004356017687837831}, {4944.780967250932, 0.}}], 
     LineBox[{{5103.725375888578, 0.}, {5103.725375888578, 
      8.014354318154438*^-6}, {5103.725375888578, 0.}}], 
     LineBox[{{5125.325925698504, 0.}, {5125.325925698504, 
      9.398881847905746*^-10}, {5125.325925698504, 0.}}], 
     LineBox[{{5170.052868634579, 0.}, {5170.052868634579, 
      3.6126688240557387`*^-6}, {5170.052868634579, 0.}}], 
     LineBox[{{5307.526826848509, 0.}, {5307.526826848509, 
      1.5936410240765318`*^-6}, {5307.526826848509, 0.}}], 
     LineBox[{{5330.001324170444, 0.}, {5330.001324170444, 
      1.4867748473405371`*^-6}, {5330.001324170444, 0.}}], 
     LineBox[{{5367.873104180908, 0.}, {5367.873104180908, 
      5.542956957126128*^-6}, {5367.873104180908, 0.}}], 
     LineBox[{{5507.702346549253, 0.}, {5507.702346549253, 
      2.414037583654518*^-6}, {5507.702346549253, 0.}}], 
     LineBox[{{5515.009286521759, 0.}, {5515.009286521759, 
      4.0008020969022085`*^-6}, {5515.009286521759, 0.}}], 
     LineBox[{{5562.603570880427, 0.}, {5562.603570880427, 
      6.568207783605713*^-8}, {5562.603570880427, 0.}}], 
     LineBox[{{5581.698571786517, 0.}, {5581.698571786517, 
      0.00001710209618152613}, {5581.698571786517, 0.}}], 
     LineBox[{{5619.373714998423, 0.}, {5619.373714998423, 
      9.868239663081867*^-8}, {5619.373714998423, 0.}}], 
     LineBox[{{5658.1871331827715`, 0.}, {5658.1871331827715`, 
      3.587388258606638*^-6}, {5658.1871331827715`, 0.}}], 
     LineBox[{{5716.213833646325, 0.}, {5716.213833646325, 
      1.2614286930833452`*^-7}, {5716.213833646325, 0.}}], 
     LineBox[{{5728.852471852966, 0.}, {5728.852471852966, 
      1.6831897991214*^-7}, {5728.852471852966, 0.}}], 
     LineBox[{{5771.652258097485, 0.}, {5771.652258097485, 
      3.6551278681013634`*^-6}, {5771.652258097485, 0.}}], 
     LineBox[{{5880.399120590417, 0.}, {5880.399120590417, 
      1.563148537409067*^-8}}]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{171.43467804117154`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{259.26490023423685`, 5880.399120590417}, {0., 
   0.9999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.759865408052332*^9, 3.7598656097451677`*^9, {3.7599365594855547`*^9, 
   3.7599365722115*^9}, 3.7599366193864202`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"a8cae200-8d0f-482b-a64e-0d5d50f47699"]
}, Open  ]]
}, Open  ]],

Cell["Write Up", "Section",
 CellChangeTimes->{{3.7475823418510637`*^9, 
  3.747582343753379*^9}},ExpressionUUID->"c28eec6f-3bf2-4dc7-b2c4-\
0ab7fc2f9c0f"]
}, Open  ]]
},
Evaluator->"ResearchSecond",
WindowSize->{974, 843},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"UWTools"}, "ExplorationStyle.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 567, 14, 66, "Chapter",ExpressionUUID->"108dd256-757c-4065-a0c6-9649daa7ea2f"],
Cell[1150, 38, 271, 4, 34, "Text",ExpressionUUID->"ef26530d-7ef4-4cd4-b0ff-34c81b953df6"],
Cell[1424, 44, 430, 13, 36, "Text",ExpressionUUID->"6f57ca09-0e55-4c6d-b00b-d59ff317d095"],
Cell[CellGroupData[{
Cell[1879, 61, 279, 4, 66, "Section",ExpressionUUID->"aed6ec0c-3e49-41b3-86f5-840099dff719"],
Cell[CellGroupData[{
Cell[2183, 69, 162, 3, 53, "Subsection",ExpressionUUID->"67ad0683-cd26-409e-abc1-b8098a7710ba"],
Cell[2348, 74, 348, 6, 30, "Input",ExpressionUUID->"a5302110-dac0-4374-af3e-1656594b8df1"],
Cell[2699, 82, 559, 8, 94, "Input",ExpressionUUID->"f8a76d40-9000-4bd1-9d70-e38da48e787d"],
Cell[3261, 92, 326, 8, 52, "Input",ExpressionUUID->"71873df0-99a3-4596-ac33-8dfc30c5ebb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3624, 105, 199, 3, 53, "Subsection",ExpressionUUID->"69d278cb-1584-45e5-97b1-eee3a9e3d718"],
Cell[3826, 110, 1096, 19, 52, "Input",ExpressionUUID->"d6d00be0-65a1-4234-b054-36f3dce8e0d1"],
Cell[4925, 131, 2645, 55, 199, "Input",ExpressionUUID->"4f834f25-016b-4f2e-9763-43094930c116"],
Cell[CellGroupData[{
Cell[7595, 190, 161, 3, 43, "Subsubsection",ExpressionUUID->"2450d262-7951-41ca-b086-6afd0f7d3027"],
Cell[7759, 195, 453, 12, 35, "Text",ExpressionUUID->"6d68ca11-dd36-4e05-8b2b-39068c2ea902"],
Cell[8215, 209, 768, 14, 52, "Input",ExpressionUUID->"100d1152-2f32-4958-900c-8dd4f608cea7"],
Cell[8986, 225, 2751, 71, 283, "Input",ExpressionUUID->"b52c25aa-e118-471d-bc18-acc41f1dad70"],
Cell[11740, 298, 2355, 55, 346, "Input",ExpressionUUID->"9698bb2c-3e66-49c6-a023-4c0a045e6690"],
Cell[14098, 355, 2377, 56, 325, "Input",ExpressionUUID->"81b7a5ac-4f9e-4b5a-8ef6-effa0938af98"],
Cell[16478, 413, 2626, 56, 199, "Input",ExpressionUUID->"f9e000b0-fb02-4fbf-8998-1393550a23c0"],
Cell[19107, 471, 2736, 57, 199, "Input",ExpressionUUID->"9543db35-fb9c-4a8a-87dd-63b9c21bba21"],
Cell[21846, 530, 971, 23, 115, "Input",ExpressionUUID->"ec028264-2904-4460-85cb-26d2ec647705"],
Cell[22820, 555, 7044, 146, 800, "Input",ExpressionUUID->"1e827eb8-67d8-42d0-9aec-20c3d382ebc5"],
Cell[29867, 703, 348, 9, 30, "Input",ExpressionUUID->"6087dcb0-59ad-4d05-999e-8faf65f4903f"],
Cell[CellGroupData[{
Cell[30240, 716, 576, 11, 30, "Input",ExpressionUUID->"9a7c17ee-7941-4438-b942-c9efc1d9abb6"],
Cell[30819, 729, 325, 7, 34, "Output",ExpressionUUID->"a894b05d-200f-4e8d-b718-bec76eee0472"]
}, Open  ]],
Cell[31159, 739, 366, 10, 30, "Input",ExpressionUUID->"f60d938c-bcbe-481e-b4e3-84f7ec0bcf09"],
Cell[CellGroupData[{
Cell[31550, 753, 694, 16, 136, "Input",ExpressionUUID->"b9fd9aa1-8853-4614-8f77-8db2004c4865"],
Cell[32247, 771, 891, 14, 34, "Output",ExpressionUUID->"5860d3e6-a796-4790-aa94-e7126b7edf9b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[33187, 791, 156, 2, 35, "Subsubsection",ExpressionUUID->"9beb3b28-2e12-4e4e-a30b-6e895b43ef84"],
Cell[33346, 795, 1916, 35, 220, "Input",ExpressionUUID->"dbef40fb-6929-4d3c-86bc-cd24139bb623"],
Cell[35265, 832, 737, 15, 157, "Input",ExpressionUUID->"f1937eb7-703c-45bb-acb9-9dfd912b55c4"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[36051, 853, 256, 4, 37, "Subsection",ExpressionUUID->"4049f78b-630d-4c13-a620-908d50d4583b"],
Cell[36310, 859, 560, 12, 94, "Input",ExpressionUUID->"eb2bacb4-a3f7-4fe7-b527-f7a3f847b9e0"],
Cell[36873, 873, 332, 8, 30, "Input",ExpressionUUID->"f78658bc-f9e5-4ec6-9e1f-a9f883603794"],
Cell[37208, 883, 1037, 20, 115, "Input",ExpressionUUID->"7f924a51-42ce-473d-9e19-7718f6be5cf2"],
Cell[CellGroupData[{
Cell[38270, 907, 264, 4, 43, "Subsubsection",ExpressionUUID->"49fc77f4-f308-4304-a6a3-35e2e2ee8be6"],
Cell[38537, 913, 555, 17, 35, "Text",ExpressionUUID->"af94012f-1095-42e7-a58d-2d67f57624cc"],
Cell[39095, 932, 2742, 49, 325, "Input",ExpressionUUID->"cc65627c-46a7-447a-a8b9-1cefd8b24760"],
Cell[CellGroupData[{
Cell[41862, 985, 597, 11, 30, "Input",ExpressionUUID->"9ea0cd47-f72e-4fad-8e3a-bc869606560c"],
Cell[42462, 998, 314, 6, 34, "Output",ExpressionUUID->"bf41cab9-bf98-422f-8bf4-4962f50fb3ab"]
}, Open  ]],
Cell[42791, 1007, 611, 13, 30, "Input",ExpressionUUID->"356a1306-344b-4c0a-9d70-76fca1ed834a"],
Cell[43405, 1022, 740, 17, 115, "Input",ExpressionUUID->"f7119e18-b58f-4495-be1c-b22e35608e4f"],
Cell[44148, 1041, 508, 11, 52, "Input",ExpressionUUID->"64728d00-ffbb-41f5-b0b0-1c81359d04fe"]
}, Closed]],
Cell[CellGroupData[{
Cell[44693, 1057, 168, 3, 35, "Subsubsection",ExpressionUUID->"13033fe1-49a8-4f1e-befe-73f60d02c8b3"],
Cell[44864, 1062, 22963, 529, 4147, "Input",ExpressionUUID->"8a18ec59-c0e2-4675-91b7-77851638cd64"],
Cell[67830, 1593, 166, 2, 52, "Input",ExpressionUUID->"8ff8e313-567c-4085-9396-486a486b973a"]
}, Closed]],
Cell[CellGroupData[{
Cell[68033, 1600, 186, 3, 35, "Subsubsection",ExpressionUUID->"72b21857-0919-4b3c-8ae5-854f08906cb5"],
Cell[CellGroupData[{
Cell[68244, 1607, 165, 3, 31, "Subsubsubsection",ExpressionUUID->"6af55a9b-6774-44ab-8f89-50b5f96ad8d5"],
Cell[68412, 1612, 1007, 17, 52, "Input",ExpressionUUID->"c4e27e0d-993a-45f8-aa89-d63050158aca"],
Cell[69422, 1631, 521, 10, 115, "Input",ExpressionUUID->"d393d3f4-11d3-4014-b64b-e6990151d370"],
Cell[69946, 1643, 428, 9, 52, "Input",ExpressionUUID->"6ef24751-fbd1-4323-a60b-76e36c13048b"],
Cell[70377, 1654, 499, 12, 52, "Input",ExpressionUUID->"d9b6d711-41e9-4789-aad4-eb9f637cba41"],
Cell[70879, 1668, 1516, 29, 199, "Input",ExpressionUUID->"f2dd44cd-2404-48f7-9c85-ca04ad7bb343"],
Cell[72398, 1699, 1483, 29, 199, "Input",ExpressionUUID->"e08c9e6a-d9cf-4ce8-a312-2884aa16ca45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73918, 1733, 181, 3, 31, "Subsubsubsection",ExpressionUUID->"0722dbba-df47-4032-869a-2b124ad3f2d5"],
Cell[74102, 1738, 814, 15, 115, "Input",ExpressionUUID->"19bf32bd-0bfe-46c7-80ca-079ee1450613"],
Cell[74919, 1755, 1709, 39, 241, "Input",ExpressionUUID->"5fec128f-bf14-47df-862c-52dc7cf5b90d"],
Cell[76631, 1796, 6901, 130, 976, "Input",ExpressionUUID->"f5085857-8d3c-44bb-beda-f2e415c9f820"],
Cell[83535, 1928, 6191, 135, 1060, "Input",ExpressionUUID->"f38efd3c-53e4-4975-87af-837b8b6a8d2d"],
Cell[89729, 2065, 424, 9, 30, "Input",ExpressionUUID->"4f7960d8-284f-49c4-835d-eba452442938"],
Cell[CellGroupData[{
Cell[90178, 2078, 465, 9, 30, "Input",ExpressionUUID->"fbea5194-f8c9-4bd4-9046-45454cea46d8"],
Cell[90646, 2089, 237, 3, 34, "Output",ExpressionUUID->"d30708e3-1a8f-4f70-8640-c4e17305cd93"]
}, Open  ]],
Cell[90898, 2095, 486, 13, 30, "Input",ExpressionUUID->"4815b4e1-4d63-4cad-9377-514aa0e54b9b"]
}, Closed]],
Cell[CellGroupData[{
Cell[91421, 2113, 247, 4, 25, "Subsubsubsection",ExpressionUUID->"b668bae0-1215-42c6-85d8-5680c382ac73"],
Cell[91671, 2119, 7723, 168, 1018, "Input",ExpressionUUID->"f74f7076-37d6-4613-af57-cee4451b9798"]
}, Closed]],
Cell[CellGroupData[{
Cell[99431, 2292, 318, 5, 25, "Subsubsubsection",ExpressionUUID->"3b2368df-88ec-4d02-a455-8391fcc782d9"],
Cell[99752, 2299, 10025, 214, 1228, "Input",ExpressionUUID->"82d75b28-af05-4765-a4bb-beae6a52c652"]
}, Closed]],
Cell[CellGroupData[{
Cell[109814, 2518, 161, 3, 25, "Subsubsubsection",ExpressionUUID->"50c9ca96-ea69-46ea-bc6b-c699700d0c3f"],
Cell[109978, 2523, 287, 5, 52, "Input",ExpressionUUID->"debd71e1-0b8a-4539-8eeb-fe23c3388d1c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110326, 2535, 212, 4, 53, "Subsection",ExpressionUUID->"d83284f2-0e91-4fe6-b769-f5e59621de11"],
Cell[CellGroupData[{
Cell[110563, 2543, 169, 3, 31, "Subsubsubsection",ExpressionUUID->"661a11e8-829b-492d-8bd6-b2d3875f6534"],
Cell[CellGroupData[{
Cell[110757, 2550, 167, 3, 30, "Subsubsubsubsection",ExpressionUUID->"045dad9c-2e1c-47d9-b488-27eef7094444"],
Cell[110927, 2555, 3495, 66, 367, "Input",ExpressionUUID->"0d54f982-3783-41d6-b4f1-e9639e482ef9"]
}, Closed]],
Cell[CellGroupData[{
Cell[114459, 2626, 165, 3, 24, "Subsubsubsubsection",ExpressionUUID->"f6e129c6-eae7-453b-9a9d-69708761f21d"],
Cell[114627, 2631, 1936, 44, 241, "Input",ExpressionUUID->"429ffc1c-997e-4dc9-a060-97d44ee846fe"]
}, Closed]],
Cell[CellGroupData[{
Cell[116600, 2680, 161, 3, 24, "Subsubsubsubsection",ExpressionUUID->"3f1b69b5-52cd-4a3a-a41c-d05a599410d7"],
Cell[116764, 2685, 1787, 43, 220, "Input",ExpressionUUID->"bdc533db-b89e-4e1c-ab76-a1d8de6c9234"]
}, Closed]],
Cell[CellGroupData[{
Cell[118588, 2733, 163, 3, 24, "Subsubsubsubsection",ExpressionUUID->"f62ac295-0082-4507-b0fd-f45262eed41d"],
Cell[118754, 2738, 895, 17, 52, "Input",ExpressionUUID->"e2bdacf9-591b-44e6-97a8-19fad3b4b246"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119698, 2761, 161, 3, 31, "Subsubsubsection",ExpressionUUID->"11a8bd2f-a085-4196-8440-fd68a2063226"],
Cell[CellGroupData[{
Cell[119884, 2768, 165, 3, 30, "Subsubsubsubsection",ExpressionUUID->"02a1cb09-61ba-4ba8-86c3-aa95c900bae2"],
Cell[120052, 2773, 1052, 19, 220, "Input",ExpressionUUID->"53a6a50d-0b1b-4222-be2c-c759f01b9491"],
Cell[CellGroupData[{
Cell[121129, 2796, 403, 9, 30, "Input",ExpressionUUID->"ab3cbf45-572e-4f9f-ba3c-2179694862f8"],
Cell[121535, 2807, 262, 3, 34, "Output",ExpressionUUID->"e3c987c9-8ed2-4111-99fd-e18155e4ecf2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121846, 2816, 193, 3, 30, "Subsubsubsubsection",ExpressionUUID->"d35a8afc-62a0-40c1-9534-72d0a7199cc4"],
Cell[CellGroupData[{
Cell[122064, 2823, 2814, 44, 220, "Input",ExpressionUUID->"4b258cc3-ce37-4c9e-adff-9a6ea91c8fad"],
Cell[124881, 2869, 388, 5, 34, "Output",ExpressionUUID->"041a54ba-13fd-4f8f-b988-9ee23d0bb218"]
}, Open  ]],
Cell[125284, 2877, 301, 5, 52, "Input",ExpressionUUID->"41c9ad1a-4478-446a-8b86-49c3a33eb64a"],
Cell[125588, 2884, 244, 4, 34, "Text",ExpressionUUID->"d86c28f4-20d7-49c0-b739-7be97d970e14"],
Cell[CellGroupData[{
Cell[125857, 2892, 549, 11, 30, "Input",ExpressionUUID->"b4a10f0a-4dc8-4342-9579-b1755acb334e"],
Cell[126409, 2905, 263, 3, 34, "Output",ExpressionUUID->"e57cbc98-d331-43d0-9a5d-476e1983a9fd"]
}, Open  ]],
Cell[126687, 2911, 302, 5, 34, "Text",ExpressionUUID->"93931958-2f00-4a97-811c-7583ea54a2dd"],
Cell[CellGroupData[{
Cell[127014, 2920, 607, 12, 30, "Input",ExpressionUUID->"260e188e-4edf-4cd2-b8da-372d1fa638bd"],
Cell[127624, 2934, 189, 2, 34, "Output",ExpressionUUID->"477a866b-f627-4ff3-a9a5-d9fd3821b26e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127862, 2942, 264, 4, 30, "Subsubsubsubsection",ExpressionUUID->"2a8d6ad2-2a8a-48dc-9f6d-e6c981ab6ebb"],
Cell[CellGroupData[{
Cell[128151, 2950, 3161, 51, 220, "Input",ExpressionUUID->"6ffd7bf9-f5b7-4875-a4f5-2eddac169bd7"],
Cell[131315, 3003, 254, 3, 34, "Output",ExpressionUUID->"b67fad2b-71c5-423b-a64b-e8a5d24ad00b"]
}, Open  ]],
Cell[131584, 3009, 299, 5, 52, "Input",ExpressionUUID->"3f298956-beb1-4136-b02d-78fe38d36db8"],
Cell[131886, 3016, 244, 4, 34, "Text",ExpressionUUID->"c5780ee4-242a-4115-9f21-75caddb23721"],
Cell[CellGroupData[{
Cell[132155, 3024, 598, 11, 30, "Input",ExpressionUUID->"18d770a3-d861-4d35-8a7a-4ab9c2f4660d"],
Cell[132756, 3037, 587, 8, 34, "Output",ExpressionUUID->"1d2e1b72-48d0-4ef3-a6b4-94b12d43bd1d"]
}, Open  ]],
Cell[133358, 3048, 302, 5, 34, "Text",ExpressionUUID->"f3a93a30-2222-4766-a8f6-13e3e726512d"],
Cell[CellGroupData[{
Cell[133685, 3057, 627, 12, 30, "Input",ExpressionUUID->"3cfcdf75-d2e8-458d-a081-c69407a09e8d"],
Cell[134315, 3071, 550, 8, 34, "Output",ExpressionUUID->"7d28fa62-d491-4233-8ae1-274d3501ee42"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134926, 3086, 190, 3, 31, "Subsubsubsection",ExpressionUUID->"978daa61-b3c3-40d5-9f10-9f30736c1f28"],
Cell[CellGroupData[{
Cell[135141, 3093, 144, 3, 30, "Subsubsubsubsection",ExpressionUUID->"cd55872d-01bb-4936-afb0-e64ae99eb9ac"],
Cell[135288, 3098, 2769, 60, 451, "Input",ExpressionUUID->"c2c2266d-1e78-4fcb-a9f6-cc9a45cde704"]
}, Closed]],
Cell[CellGroupData[{
Cell[138094, 3163, 169, 3, 24, "Subsubsubsubsection",ExpressionUUID->"a332bdd4-17f2-4c04-9f34-3b14ae630daf"],
Cell[138266, 3168, 3210, 66, 451, "Input",ExpressionUUID->"72b162b1-1ba7-409b-a4ee-e590fd16db8b"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141537, 3241, 156, 3, 53, "Subsection",ExpressionUUID->"55f5d3d2-d649-4ff5-b7f3-1717d85914ca"],
Cell[CellGroupData[{
Cell[141718, 3248, 168, 3, 43, "Subsubsection",ExpressionUUID->"6f475f16-b865-468c-9ff6-eef8e8d26710"],
Cell[141889, 3253, 911, 17, 52, "Input",ExpressionUUID->"1d613332-05ae-477e-aa8e-f70d5c897780"],
Cell[142803, 3272, 970, 18, 115, "Input",ExpressionUUID->"5208a761-e36b-4f12-8a1e-d9d48e93a13b"],
Cell[CellGroupData[{
Cell[143798, 3294, 178, 3, 31, "Subsubsubsection",ExpressionUUID->"3b4bac79-c5d9-4424-9817-13019c17897c"],
Cell[143979, 3299, 3002, 70, 409, "Input",ExpressionUUID->"d08f9ee4-97ac-442c-b466-a586aa107ac2"],
Cell[146984, 3371, 391, 10, 30, "Input",ExpressionUUID->"456c2d95-5ec9-4a86-89e9-a3b03cef561b"],
Cell[147378, 3383, 4143, 73, 241, "Input",ExpressionUUID->"3d17bae7-97dd-469b-8448-dc814cf4b286"],
Cell[CellGroupData[{
Cell[151546, 3460, 497, 10, 30, "Input",ExpressionUUID->"96675c04-5803-4620-bfc4-a3ecea10da07"],
Cell[152046, 3472, 220, 4, 34, "Output",ExpressionUUID->"6c1c0997-b1a8-4ae4-8325-7455dbd6bc4e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[152315, 3482, 179, 3, 25, "Subsubsubsection",ExpressionUUID->"9481ae8b-e6c9-431e-9cfe-96c2aa27ff98"],
Cell[CellGroupData[{
Cell[152519, 3489, 169, 3, 30, "Subsubsubsubsection",ExpressionUUID->"cc7b27e8-f0d7-4b90-a986-6ab102e3fca4"],
Cell[152691, 3494, 3214, 57, 430, "Input",ExpressionUUID->"13a0dc06-4a9d-429d-9937-31c360fbd9f5"],
Cell[CellGroupData[{
Cell[155930, 3555, 493, 10, 30, "Input",ExpressionUUID->"5f94045e-56d7-45fb-8cc7-e03db00566c9"],
Cell[156426, 3567, 313, 7, 70, "Output",ExpressionUUID->"ea21245e-aa57-4d7d-82a0-a330b515d34f"],
Cell[156742, 3576, 263, 6, 34, "Output",ExpressionUUID->"4601be6e-91e1-4098-9a34-f6e33d6b9727"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[157054, 3588, 165, 3, 24, "Subsubsubsubsection",ExpressionUUID->"670160a0-1b2f-48a7-92f7-4a9f66d5b7c8"],
Cell[157222, 3593, 485, 11, 52, "Input",ExpressionUUID->"fb62bca2-78d2-4726-a82c-24ebea993613"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157744, 3609, 218, 4, 30, "Subsubsubsubsection",ExpressionUUID->"f1f97c7d-ad0a-489d-ac73-bf3bd7c47d83"],
Cell[157965, 3615, 1264, 25, 136, "Input",ExpressionUUID->"7dcd8ec0-8bb2-4b7c-b82b-9d8ca5a11258"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159290, 3647, 215, 4, 43, "Subsubsection",ExpressionUUID->"46a36b61-316d-446d-bb0c-a11817a30587"],
Cell[159508, 3653, 159, 3, 34, "Text",ExpressionUUID->"35bf10d1-aa70-4b3b-a69f-d6ddfba72c47"],
Cell[159670, 3658, 409, 8, 30, "Input",ExpressionUUID->"7afc7bd6-bf35-446f-b7c4-03ead787275d"],
Cell[CellGroupData[{
Cell[160104, 3670, 163, 3, 31, "Subsubsubsection",ExpressionUUID->"db6986a8-4965-438e-9be6-61bf92060d3f"],
Cell[CellGroupData[{
Cell[160292, 3677, 170, 3, 30, "Subsubsubsubsection",ExpressionUUID->"ac956bde-e616-44e0-83e1-d58700c26944"],
Cell[160465, 3682, 193, 3, 34, "Text",ExpressionUUID->"daad715a-cd68-48d5-b759-79026c1a6de8"],
Cell[160661, 3687, 1400, 31, 241, "Input",ExpressionUUID->"d7cb1800-224b-4e6f-9d3a-8989027ded46"]
}, Closed]],
Cell[CellGroupData[{
Cell[162098, 3723, 167, 3, 24, "Subsubsubsubsection",ExpressionUUID->"7b032839-d85e-47f5-a750-e3de8b804565"],
Cell[162268, 3728, 1325, 30, 241, "Input",ExpressionUUID->"2c7abccb-c67b-4c48-8462-53423c34dcf0"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163642, 3764, 176, 3, 31, "Subsubsubsection",ExpressionUUID->"0b142713-5da1-41bb-a106-eba4266b69c8"],
Cell[163821, 3769, 181, 3, 34, "Text",ExpressionUUID->"7ff99bfa-1afb-454f-9931-3235581a9b82"],
Cell[CellGroupData[{
Cell[164027, 3776, 168, 3, 30, "Subsubsubsubsection",ExpressionUUID->"6759ced7-b34b-49d7-b9b4-840a7b5bfc96"],
Cell[164198, 3781, 1483, 27, 157, "Input",ExpressionUUID->"94240183-ea83-464c-8489-42100744814f"]
}, Closed]],
Cell[CellGroupData[{
Cell[165718, 3813, 168, 3, 24, "Subsubsubsubsection",ExpressionUUID->"cdc85496-3f88-4123-8c71-49fb0b8e0532"],
Cell[165889, 3818, 1459, 35, 157, "Input",ExpressionUUID->"a0f2bb63-e43b-4a6e-8b43-7da437a68d50"]
}, Closed]],
Cell[CellGroupData[{
Cell[167385, 3858, 166, 3, 24, "Subsubsubsubsection",ExpressionUUID->"368d0703-c2f5-48c3-bacc-a88aaa4f6f20"],
Cell[167554, 3863, 1602, 39, 136, "Input",ExpressionUUID->"3b8623cf-6a7a-4d21-bf97-2d7095d3e9ab"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169205, 3908, 157, 3, 31, "Subsubsubsection",ExpressionUUID->"5dd21969-a971-42e6-9b5a-128b9e9790db"],
Cell[169365, 3913, 293, 5, 52, "Input",ExpressionUUID->"9af3d497-4536-4626-9492-4d1ea729991e"],
Cell[169661, 3920, 683, 16, 73, "Input",ExpressionUUID->"c9ab430a-6348-41a5-a16c-968373426fe1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170393, 3942, 162, 3, 43, "Subsubsection",ExpressionUUID->"110dfad2-fba8-449e-b5ae-3a4d0863d40b"],
Cell[170558, 3947, 194, 3, 34, "Text",ExpressionUUID->"9b8fcf49-925b-49ff-a6d8-b2f1bca335c1"],
Cell[CellGroupData[{
Cell[170777, 3954, 163, 3, 31, "Subsubsubsection",ExpressionUUID->"b5708493-3e36-4cf9-9861-d7725ab7908e"],
Cell[170943, 3959, 1178, 29, 73, "Input",ExpressionUUID->"993bcaf8-0e40-4a7b-bf25-876125e4f998"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172170, 3994, 166, 3, 43, "Subsubsection",ExpressionUUID->"e383188f-ba31-4757-a01b-55ddadddd12b"],
Cell[172339, 3999, 197, 3, 34, "Text",ExpressionUUID->"4aa902e5-73e1-489c-bd98-b6d9ad24b99e"],
Cell[172539, 4004, 216, 4, 30, "Input",ExpressionUUID->"9f0b8136-d52c-4371-a5a4-8d0e492da778"],
Cell[172758, 4010, 319841, 5278, 65, "Input",ExpressionUUID->"ac79e144-040c-4282-865e-e2c001bf5181"],
Cell[492602, 9290, 5489, 125, 703, "Input",ExpressionUUID->"321bd732-3aa0-4c57-bb2e-3c07a15ef419"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[498152, 9422, 154, 3, 66, "Section",ExpressionUUID->"d812534c-0903-476d-a534-8688e09947a6"],
Cell[CellGroupData[{
Cell[498331, 9429, 216, 3, 30, "Input",ExpressionUUID->"c93e9706-63a7-43c2-9cb5-1bb73cb9f1a8"],
Cell[498550, 9434, 2386, 38, 161, "Output",ExpressionUUID->"f59fed27-ed91-476b-8ec8-2be729cfc025"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500973, 9477, 231, 4, 30, "Input",ExpressionUUID->"8cd5b313-5319-425d-a9f0-45cc3d7c3920"],
Cell[501207, 9483, 10433, 186, 247, "Output",ExpressionUUID->"a8cae200-8d0f-482b-a64e-0d5d50f47699"]
}, Open  ]]
}, Open  ]],
Cell[511667, 9673, 155, 3, 66, "Section",ExpressionUUID->"c28eec6f-3bf2-4dc7-b2c4-0ab7fc2f9c0f"]
}, Open  ]]
}
]
*)

