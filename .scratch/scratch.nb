(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    188713,       4062]
NotebookOptionsPosition[    172715,       3821]
NotebookOutlinePosition[    173052,       3836]
CellTagsIndexPosition[    173009,       3833]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Setup", "Section",
 CellChangeTimes->{{3.7642953548852453`*^9, 3.764295356227355*^9}},
 ChemTools`DVR`Package`Private`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{"<<", "EasyIDE`"}]], "Input",
 CellChangeTimes->{{3.7642952498634663`*^9, 3.7642952517892323`*^9}},
 CellLabel->"In[647]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"$ide", "=", 
   RowBox[{"IDENotebookObject", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764295371044653*^9, 3.7642953756372128`*^9}, {
  3.7644653250516977`*^9, 3.764465325234439*^9}},
 CellLabel->"In[648]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"path", "=", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"$ide", "@", 
      RowBox[{"\"\<Path\>\"", "[", "\"\<Common\>\"", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Except", "[", "_String", "]"}], "\[RuleDelayed]", 
      RowBox[{"FileNameJoin", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Nest", "[", 
          RowBox[{"DirectoryName", ",", " ", 
           RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "1"}], "]"}], 
         ",", " ", "\"\<Common\>\""}], "}"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764465353843773*^9, 3.764465393177257*^9}},
 CellLabel->"In[662]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{
    RowBox[{"Select", "[", "StringQ", "]"}], "@", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Append", "[", 
      RowBox[{"$Path", ",", "path"}], " ", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764295227620809*^9, 3.764295285166864*^9}, {
  3.764295334758314*^9, 3.764295341014266*^9}, {3.764295373940357*^9, 
  3.764295377864204*^9}, {3.764465336764082*^9, 3.764465375137295*^9}},
 CellLabel->"In[663]:="],

Cell[BoxData[
 RowBox[{"<<", "ChemTools`All`"}]], "Input",
 CellLabel->"In[655]:="],

Cell[BoxData[{
 RowBox[{"WavefunctionsObject", ";"}], "\[IndentingNewLine]", 
 RowBox[{"CoordinateGridObject", ";"}], "\[IndentingNewLine]", 
 RowBox[{"GridFunctionObject", ";"}]}], "Input",
 CellChangeTimes->{{3.764295325957622*^9, 3.7642953513154173`*^9}, {
  3.764441432085835*^9, 3.7644414322921667`*^9}},
 CellLabel->"In[656]:="],

Cell[BoxData[
 RowBox[{"<<", "SpectrumScriptPackage`"}]], "Input",
 CellChangeTimes->{{3.76429528687892*^9, 3.764295325147764*^9}, {
  3.764441556183457*^9, 3.76444155647542*^9}},
 CellLabel->"In[665]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rephasing Test", "Section",
 CellChangeTimes->{{3.76404214333047*^9, 3.764042146929401*^9}}],

Cell[BoxData[
 RowBox[{"ContextRemove", "[", "\"\<ChemTools`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.764042323393875*^9, 3.764042331530724*^9}},
 CellLabel->"In[28]:="],

Cell[BoxData[
 RowBox[{"<<", "ChemTools`All`"}]], "Input",
 CellChangeTimes->{{3.76404221206851*^9, 3.764042216224091*^9}, {
  3.7640423367964773`*^9, 3.764042337136545*^9}},
 CellLabel->"In[30]:="],

Cell[BoxData[{
 RowBox[{"WavefunctionsObject", ";"}], "\[IndentingNewLine]", 
 RowBox[{"GridFunctionObject", ";"}], "\[IndentingNewLine]", 
 RowBox[{"CoordinateGridObject", ";"}]}], "Input",
 CellChangeTimes->{{3.764042237656479*^9, 3.7640422509837313`*^9}, {
  3.764042334250399*^9, 3.764042417468834*^9}},
 CellLabel->"In[44]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"asd", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5Old/coeffChunk2.mx\>\
\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764042192976515*^9, 3.7640421986007223`*^9}, {
  3.764042475660859*^9, 3.7640424762861958`*^9}},
 CellLabel->"In[57]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shiftWfGrid", "[", 
    RowBox[{"nearest_", ",", "baseGrid_", ",", " ", "vals_"}], "]"}], ":=", 
   "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mean", "=", 
       RowBox[{
        RowBox[{"nearest", "[", 
         RowBox[{"Mean", "[", 
          RowBox[{"WeightedData", "[", 
           RowBox[{"baseGrid", ",", " ", 
            RowBox[{"Abs", "@", "vals"}]}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", "baseGrid", "]"}], "-", "mean"}], "//", 
      "Transpose"}]}], "\n", "    ", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7640421518636913`*^9, {3.7640422557805233`*^9, 3.7640422559544287`*^9}, {
   3.76404256470865*^9, 3.76404260791713*^9}, {3.764042638818562*^9, 
   3.7640426654879847`*^9}, {3.764043076195983*^9, 3.7640431389113283`*^9}, {
   3.764043264288879*^9, 3.7640432718095493`*^9}, {3.764043785752358*^9, 
   3.764043803814289*^9}, {3.764043906047181*^9, 3.764043909801882*^9}, {
   3.7640439597305317`*^9, 3.764043972832972*^9}, 3.764044020404274*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meanShiftedWavefunctions", "[", "wfns_WavefunctionsObject", "]"}],
    ":=", "\n", "  ", 
   RowBox[{"Module", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{
      "baseGrid", ",", "\n", "      ", "nfunc", ",", "\n", "      ", "shifts",
        ",", "\n", "      ", "newGrids", ",", "\n", "      ", "gridBits", ",",
        "\n", "      ", "zeroGrid", ",", "\n", "      ", "fullGrid", ",", 
       "\n", "      ", "newWfns", ",", "\n", "      ", "newWfnsGrid"}], "\n", 
      "      ", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"baseGrid", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"wfns", "@", "\"\<Grid\>\""}], "]"}], ",", " ", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"holyFuckkkkkk", "=", "baseGrid"}], ";", "\n", "    ", 
      RowBox[{"nfunc", "=", 
       RowBox[{"Nearest", "[", "baseGrid", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nearestShit", "=", "nfunc"}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"shift", " ", "the", " ", "original", " ", "grids"}], " ", 
       "*)"}], "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Shifting core grids\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"newGrids", " ", "=", " ", "\n", "      ", 
       RowBox[{"Map", "[", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", "\n", "  ", "        ", 
           RowBox[{
            RowBox[{"shiftWfGrid", "[", 
             RowBox[{"nfunc", ",", " ", "baseGrid", ",", " ", 
              RowBox[{"Flatten", "@", 
               RowBox[{"#", "[", "\"\<Values\>\"", "]"}]}]}], "]"}], ",", 
            "\n", "          ", 
            RowBox[{"List", "/@", 
             RowBox[{"Flatten", "[", 
              RowBox[{"#", "[", "\"\<Values\>\"", "]"}], "]"}]}], ",", "\n", 
            "  ", "        ", "2"}], "\n", "  ", "        ", "]"}], "&"}], 
         ",", "\n", "  ", "      ", 
         RowBox[{"wfns", "[", "\"\<Wavefunctions\>\"", "]"}]}], "\n", 
        "        ", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fuckThis", "=", "newGrids"}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "determine", " ", "what", " ", "the", " ", "tensor", " ", "product", 
        " ", "grid", " ", "parts", " ", "would", " ", "be"}], " ", "*)"}], 
      "\n", "    ", 
      RowBox[{"gridBits", "=", "\n", "      ", 
       RowBox[{
        RowBox[{"Sort", "@*", 
         RowBox[{"DeleteDuplicatesBy", "[", 
          RowBox[{
           RowBox[{"Round", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"10.", "^", 
              RowBox[{"-", "3"}]}]}], "]"}], "&"}], "]"}], "@*", "Flatten"}], 
        "/@", 
        RowBox[{"{", "\n", "        ", 
         RowBox[{
          RowBox[{"newGrids", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], 
          ",", "\n", "        ", 
          RowBox[{"newGrids", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "All", ",", " ", "2"}], "]"}], "]"}]}], 
         "\n", "        ", "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"wtf444", "=", "gridBits"}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "make", " ", "the", " ", "full", " ", "grid", " ", "that", " ", 
        "every", " ", "wavefunction", " ", "will", " ", "live", " ", "on"}], 
       " ", "*)"}], "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Constructing full grid\>\"", "]"}], ";",
       "\n", "    ", 
      RowBox[{"fullGrid", "=", 
       RowBox[{"Tuples", "[", "gridBits", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeroGrid", "=", 
       RowBox[{"Global`wtf5", "=", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", 
         RowBox[{"fullGrid", ",", " ", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "@", "fullGrid"}], ",", " ", "1"}], "}"}]}], 
           "]"}], ",", " ", "2"}], "]"}]}]}], ";", "\n", "    ", 
      RowBox[{
      "debugPrint", "[", "\"\<Reconstructing wavefunctions\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"newWfns", "=", 
       RowBox[{"(*", " ", 
        RowBox[{"fill", " ", "out", " ", "the", " ", "entire", " ", "grid"}], 
        " ", "*)"}], "\n", "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteDuplicatesBy", "[", "\n", "        ", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"#", ",", " ", "zeroGrid"}], "]"}], ",", " ", "\n", 
           "        ", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", 
              RowBox[{"10.", "^", 
               RowBox[{"-", "3"}]}]}], "]"}], "&"}]}], "\n", "        ", 
          "]"}], "&"}], "/@", "newGrids"}]}], ";", "\[IndentingNewLine]", 
      "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "set", " ", "up", " ", "the", " ", "new", " ", "wavefunctions"}], " ", 
       "*)"}], "\n", 
      RowBox[{"newFuckWhat", "=", "newWfns"}], ";", "\n", "    ", 
      RowBox[{"newWfns", "=", 
       RowBox[{"Global`wtf2", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{";;", "2"}], "]"}], "]"}], "&"}]}], "]"}], "&"}], "/@",
          "newWfns"}]}]}], ";", "\n", "    ", 
      RowBox[{"newWfnsGrid", "=", 
       RowBox[{"(*", " ", 
        RowBox[{
        "by", " ", "making", " ", "a", " ", "new", " ", "full", " ", 
         "coordinate", " ", "grid"}], " ", "*)"}], "\n", "     ", 
       RowBox[{"Global`wtf", "=", " ", 
        RowBox[{"CoordinateGridObject", "@", "\n", "        ", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"newWfns", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "All", ",", " ", 
              RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", 
           RowBox[{"Length", "@", 
            RowBox[{"gridBits", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}]}]}], ";", "\n", 
      "    ", 
      RowBox[{"Print", "@", "\n", "      ", 
       RowBox[{"TemplateApply", "[", "\n", "        ", 
        RowBox[{
        "\"\<`` wavefunctions with length `` and grid of dimension ``\>\"", 
         ",", "\n", "        ", 
         RowBox[{"{", "\n", "          ", 
          RowBox[{
           RowBox[{"Length", "@", "newWfns"}], ",", "\n", "  ", "        ", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Length", "/@", "newWfns"}], "]"}], ",", "\n", "  ", 
           "        ", 
           RowBox[{"Dimensions", "[", "newWfnsGrid", "]"}]}], "\n", 
          "          ", "}"}]}], "\n", "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"newWfns", " ", "=", " ", "\n", "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"GridFunctionObject", "[", 
          RowBox[{"newWfnsGrid", ",", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "]"}], "&"}], "/@",
         "newWfns"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "and", " ", "then", " ", "finally", " ", "constructing", " ", "a", " ",
         "new", " ", "WavefunctionsObject"}], " ", "*)"}], "\n", "    ", 
      RowBox[{"Print", "[", "\"\<Making wavefunction object\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"WavefunctionsObject", "[", "\n", "      ", 
       RowBox[{
        RowBox[{"{", "\n", "        ", 
         RowBox[{
          RowBox[{"wfns", "[", "\"\<Energies\>\"", "]"}], ",", "\n", 
          "        ", "newWfns"}], "\n", "        ", "}"}], ",", "\n", 
        "      ", "None"}], "\n", "      ", "]"}]}]}], "\n", "    ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meanShiftedWavefunctions", "[", "wfList_", "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"Module", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{
       RowBox[{"nonFailedPos", "=", 
        RowBox[{"Pick", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "@", "wfList"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "=!=", "$Failed"}], "&"}], "/@", "wfList"}]}], 
         "]"}]}], ",", "\n", "      ", "nonFailedWfns", ",", "\n", "      ", 
       "shifted", ",", "\n", "      ", "newWfnsList"}], "\n", "      ", "}"}],
      ",", "\n", "    ", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Mean shifting wavefunctions\>\"", "]"}],
       ";", "\n", "    ", 
      RowBox[{"nonFailedWfns", " ", "=", " ", "\n", "      ", 
       RowBox[{"WavefunctionsObject", "[", "\n", "        ", 
        RowBox[{
         RowBox[{"{", "\n", "          ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"Length", "@", "nonFailedPos"}]}], "]"}], ",", "\n", 
           "          ", 
           RowBox[{"wfList", "[", 
            RowBox[{"[", "nonFailedPos", "]"}], "]"}]}], "\n", "          ", 
          "}"}], ",", "\n", "        ", 
         RowBox[{
          RowBox[{"wfList", "[", 
           RowBox[{"[", 
            RowBox[{"nonFailedPos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "@", 
          "\"\<Grid\>\""}]}], "\n", "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"shifted", " ", "=", " ", 
       RowBox[{"meanShiftedWavefunctions", "[", "nonFailedWfns", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<Making wavefunction object\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"newWfnsList", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"$Failed", ",", " ", 
         RowBox[{"Length", "@", "wfList"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{"newWfnsList", "[", 
        RowBox[{"[", "nonFailedPos", "]"}], "]"}], " ", "=", " ", "\n", 
       "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"WavefunctionsObject", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "0", "}"}], ",", " ", 
             RowBox[{"{", "#", "}"}]}], "}"}], ",", " ", 
           RowBox[{"#", "[", "\"\<Grid\>\"", "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"shifted", "[", "\"\<Wavefunctions\>\"", "]"}]}]}], ";", "\n",
       "    ", "newWfnsList"}]}], "\n", "    ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7640421518636913`*^9, {3.7640422557805233`*^9, 3.7640422559544287`*^9}, {
   3.76404256470865*^9, 3.76404260791713*^9}, {3.764042638818562*^9, 
   3.7640426654879847`*^9}, {3.764043076195983*^9, 3.7640431389113283`*^9}, {
   3.764043264288879*^9, 3.7640432718095493`*^9}, {3.764043785752358*^9, 
   3.764043803814289*^9}, {3.764043906047181*^9, 3.764043909801882*^9}, {
   3.7640439597305317`*^9, 3.764043972832972*^9}, {3.764044020404274*^9, 
   3.76404405125298*^9}, 3.764044199203332*^9, {3.764044324295141*^9, 
   3.764044334117638*^9}, {3.764044759815023*^9, 3.764044779718389*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"asd2", "=", "\[IndentingNewLine]", 
   RowBox[{"Apply", "[", 
    RowBox[{"Join", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"{", "2", "}"}], "]"}], "]"}], "&"}], "/@", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Values", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"asd", ",", " ", "$Failed"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "\"\<DVRWavefunctions\>\""}], "]"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76404249169258*^9, 3.764042532265584*^9}, {
   3.764043770971467*^9, 3.764043771966675*^9}, 3.764043825340536*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"shiftWfGrid", "[", 
   RowBox[{"nearest_", ",", "baseGrid_", ",", " ", "vals_"}], "]"}], ":=", 
  "\n", "  ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mean", "=", 
      RowBox[{
       RowBox[{"nearest", "[", 
        RowBox[{"Mean", "[", 
         RowBox[{"WeightedData", "[", 
          RowBox[{"baseGrid", ",", " ", 
           RowBox[{"Abs", "@", "vals"}]}], "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "baseGrid", "]"}], "-", "mean"}], "//", 
     "Transpose"}]}], "\n", "    ", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"shiftWfGrid", "[", 
       RowBox[{"nearestShit", ",", " ", "holyFuckkkkkk", ",", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"#", "[", "\"\<Values\>\"", "]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"List", "/@", 
       RowBox[{"Flatten", "@", 
        RowBox[{"#", "[", "\"\<Values\>\"", "]"}]}]}], ",", 
      "\[IndentingNewLine]", "2"}], "\[IndentingNewLine]", "]"}], "&"}], "@", 
   
   RowBox[{
    RowBox[{"asd2", "[", "\"\<Wavefunctions\>\"", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764044112005827*^9, 3.764044173223023*^9}, {
  3.764044214251967*^9, 3.7640442144496737`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"asd2", "[", "\"\<Grid\>\"", "]"}], "[", "\"\<Points\>\"", 
      "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "//", 
    "DeleteDuplicates"}], "//", "Differences"}], "//", 
  "DeleteDuplicates"}]], "Input",
 CellChangeTimes->{3.764044297790901*^9},
 CellLabel->"In[252]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.012711864406779683`", ",", "0.012711864406779627`", ",", 
   "0.012711864406779738`"}], "}"}]], "Output",
 CellChangeTimes->{3.764044298409439*^9},
 CellLabel->"Out[252]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"asd2", "[", "\"\<Grid\>\"", "]"}], "[", "\"\<Points\>\"", 
      "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "//", 
    "DeleteDuplicates"}], "//", "Differences"}], "//", 
  "DeleteDuplicates"}]], "Input",
 CellChangeTimes->{{3.764044249991325*^9, 3.764044282667255*^9}},
 CellLabel->"In[251]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "0.012711864406779683`", ",", "0.012711864406779627`", ",", 
    "0.012711864406779738`"}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.764044284662846*^9, 3.7640442846777363`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"asd2", "[", "\"\<Wavefunctions\>\"", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellLabel->"In[237]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["GridFunctionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Keys: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Grid\"", ",", "\"Values\""}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Keys: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Grid\"", ",", "\"Values\""}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Apply[$CellContext`GridFunctionObject, {
    Association["Grid" -> $CellContext`CoordinateGridObject[
       Association["Grid" -> CompressedData["
1:eJx93S2sZttdgPEGKjAVCBAIEkAgKkAgEE1IBSQgEBUYBARCgiABBAKSIhAl
AYFAgEAgQCAgAVGBwCAQIMpHYe7M3M4+5333OXyWNyAgAcHMgd9a+T9vQpNm
52nvnVlrnfNk7b3W/+NbfuynP/cTX/uJT3ziM//336/5hP986Xv6/PLnf/6n
vvdLm3/vv/7t1a/89l8u/sUP//fP/NXiz/3H+Yff8Nm/XvztP/cj3/zDX/83
i//7w7/+sPlLP/Ph3/jy4t/96p//+Kd/6W8X/8KHP/5zf7f4B//xTz7zxW99
tfjbfvK7Pwxp8X9++Ov/9KPFf/H+T/vCr79e/NsPv/P+b3iz+GV43/V28Q98
/Bt/9kOf/Hjxh//3t/5m879/GP7vfGXx+3/4U9/+c+8yvmPxy+h+5ch4N3/q
ZYEeMv7Njx+G++nHzGfzF7/1wx/4mPldFv/qy/9wyXyvi3/0ZYLXzP9c/H7y
738DzqzH5q/7pg8zfsr6bH754z71nPXa/EfvZ/v9H29++eu+9+8X//Kv//F3
/Nrvb/7Zl1+wf1j8MpzPb/6+l1+ozd/5a7//YYiLX4b7xc2ffPkB/NPif/3w
6/eFzR99mM5XN78f7PsZ/fPiP3hZgM2/+TLBf1n8/of1fgKbX36d/2Pzy3L8
yFcXf/blL9j86Zc/4F8Xf+PLP7D5f5+3O09xn/zF/MX8xfzF/MX8xfzF/MX8
xfzF/MX8xfzF/MX8xfzF/MX8neM7FvN3jnczf+f4N/N3zmczf+f8Lov5O+d7
XczfOf9zMX/nemzm71yfzfyd67WZv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Y
v5i/mL+Yv5i/mL+Yv5i/09fb3b5aT3Gf/MX8xfzF/MX8xfzF/MX8xfzF/MX8
xfzF/MX8xfzF/MX8neM7FvN3jnczf+f4N/N3zmczf+f8Lov5O+d7XczfOf9z
MX/nemzm71yfzfyd67WZv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Y
v5i/mL+Yv5i/09fb3Xtw99V6ivvkL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/m
L+Yv5i/m7xzfsZi/c7yb+TvHv5m/cz6b+Tvnd1nM3znf62L+zvmfi/k712Mz
f+f6bObvXK/N/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF
/MX8nb7e7r5b+x7cfbWe4j75i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL
+TvHdyzm7xzvZv7O8W/m75zPZv7O+V0W83fO97qYv3P+52L+zvXYzN+5Ppv5
O9drM38xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xf6ev
t7tzpn639j24+2o9xX3yF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/N3ju9Y
zN853s38nePfzN85n838nfO7LObvnO91MX/n/M/F/J3rsZm/c30283eu12b+
Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5OX29358I9
Z+p3a9+Du6/WU9wnfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xf+f4jsX8nePd
zN85/s38nfPZzN85v8ti/s75Xhfzd87/XMzfuR6b+TvXZzN/53pt5i/mL+Yv
5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/m7/T1dneP03PhnjP1
u7Xvwd1X6ynuk7+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/c3zHYv7O8W7m7xz/
Zv7O+Wzm75zfZTF/53yvi/k7538u5u9cj838neuzmb9zvTbzF/MX8xfzF/MX
8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/N3+nq7u3ftPU7PhXvO1O/W
vgd3X62nuE/+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv7O8R2L+TvHu5m/c/yb+Tvn
s5m/c36Xxfyd870u5u+c/7mYv3M9NvN3rs9m/s712sxfzF/MX8xfzF/MX8xf
zF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzN/p6+0uTqL3rr3H6blwz5n63dr3
4O6r9RT3yV/MX8xfzF/MX8xfzF/MX8xfzN85vmMxf+d4N/N3jn8zf+d8NvN3
zu+ymL9zvtfF/J3zPxfzd67HZv7O9dnM37lem/mL+Yv5i/mL+Yv5i/mL+Yv5
i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Tt9vd3FNTVOoveuvcfpuXDPmfrd2vfg
7qv1FPfJX8xfzF/MX8xfzF/MX8xfzN85rmMxf+d4N/N3jn8zf+d8NvN3zu+y
mL9zvtfF/J3zPxfzd67HZv7O9dnM37lem/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL
+Yv5i/mL+Yv5i/mL+Yv5i/mL+Tt9vd3FITauqXESvXftPU7PhXvO1O/Wvgd3
X62nuE/+Yv5i/mL+Yv5i/mL+Yv7O8R2L+TvHuZm/c/yb+Tvns5m/c36Xxfyd
870u5u+c/7mYv3M9NvN3rs9m/s712sxfzF/MX8xfzF/MX8xfzF/MX8xfzF/M
X8xfzF/MX8xfzF/MX8xfzN/p6+0ubrhxiI1rapxE7117j9Nz4Z4z9bu178Hd
V+sp7pO/mL+Yv5i/mL+Yv5i/c3zHYv7O8W7m7xz3Zv7O+Wzm75zfZTF/53yv
i/k7538u5u9cj838neuzmb9zvTbzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfz
F/MX8xfzF/MX8xfzF/N3+nq7i/Nv3HDjEBvX1DiJ3rv2Hqfnwj1n6ndr34O7
r9ZT3Cd/MX8xfzF/MX8xf+f4jsX8nePdzN85/s38nfPYzN85v8ti/s75Xhfz
d87/XMzfuR6b+TvXZzN/53pt5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/m
L+Yv5i/mL+Yv5i/m7/T1dpeX0zj/xg03DrFxTY2T6L1r73F6Ltxzpn639j24
+2o9xX3yF/MX8xfzF/N3ju9YzN853s38nePfzN85n838nfO6LObvnO91MX/n
/M/F/J3rsZm/c30283eu12b+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i
/mL+Yv5i/mL+Yv5OX293eXS4eTr8bdxw4xAb19Q4id679h6n58I9Z+p3a9+D
u6/WU9wnfzF/MX8xf+f4jsX8nePdzN85/s38nfPZzN85v8ti/s55Xhfzd87/
XMzfuR6b+TvXZzN/53pt5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv
5i/mL+Yv5i/m7/T1dpf32jy65uU0zr9xw41DbFxT4yR679p7nJ4L95yp3619
D+6+Wk9xn/zF/MX8neM7FvN3jnczf+f4N/N3zmczf+f8Lov5O+d7XczfOe9z
MX/nemzm71yfzfyd67WZv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Y
v5i/mL+Yv5i/09fb+j3lL24eLH9x83T4i/mLG5c443ru4yZ6D9t7nZ4T99yp
37F9L+4+W2/75C/m7xzfsZi/c7yb+TvHv5m/cz6b+Tvnd1nM3znf62L+zvmf
i/k712Ezf+f6bObvXK/N/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF
/MX8xfzF/MX8nb7e7upKNE+9ea/No2teTuP8GzfcOMTGNTVOoveuvcfpuXDP
mfrd2vfg7qv1FPfJ3zm+YzF/53g383eOfzN/53w283fO77KYv3O+18X8nfM/
F/N3rsdm/s512czfuV6b+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL
+Yv5i/mL+Yv5O3293dWBwa0zwV/cPFj+Yv7ixv3PuNh3ibPbcU2Nk+i9a+9x
ei7cc6Z+t/Y9uPtqPcV98hfzd453M3/n+Dfzd85nM3/n/C6L+Tvne13M3zn/
czF/53ps5u9cn838neu0mb+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/
mL+Yv5i/mL+Yv9PX2/q9m/FXR+KvjsRfHYm/OhJ/dST+6kj81ZH4qyPxV0fi
r3bcUuMkeu/ae5yeC/ecqd+tfQ/uvlpP5/j2c8ZfHctfPOOvjuUvnvFXx/IX
z/irY/mLZ/zVsfzFM/7qWP7iGX91LH/xjL86lr94xl8dy18846+OxF8dib86
En91JP7qSPzVkfirI/FXR+KvjsRfHYm/OhJ/dST+6kj81ZH4qyPxV0fir47E
Xx2JvzoSf3Usf/2e8Re3jhN/cetM8Ld5r82ja15O4/wbN9w4xMY1NU6i9669
x+m5cM+Z+t3a9+Duq/UU98lfzN85/s38nfPZzN85v8ti/s75Xhfzd87/XMzf
uR6b+TvXZzN/53pt5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/m
L+Yv5i/m7/T1tn6vZvzkfd01/rYOTOtKNE+9ea/No2teTuP8GzfcOMTGNTVO
oveuvcfpuXDPmfrd2vfg7qv1dI53P2f85PYXz/jJ7S+e8ZPbXzzjJ7e/eMZP
bn/xjJ/c/uIZP7n9xTN+cvuLZ/zkkfjJI/GTR+Inj8RPHomfPBI/eSR+8kj8
5JH4ySPxk0fiJ4/ETx6JnzwSP3kkfvJI/OSR+Mkj8ZNH4ie3v36P+ItbJ5G/
uHWc+Iv5i5u3zl/cvLrm6fB3/t6/uotDbFxT4yR679p7nJ4L95yp3619D+6+
Wk9xn/zF/J3z2czfOb/LYv7O+V4X83fO/1zM37kem/k712czf+d6beYv5i/m
L+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5u/09bZ+b2b8831d
U/62zlrrNrUOTOtKNE+9ea/No2teTuP8GzfcOMTGNTVOoveuvcfpuXDPmfrd
2vfg7qv1dI5/P2f88/YXz/jn7S+e8c/bXzzjn7e/eMY/b3/xjH/e/uIZ/7z9
xTP++SHxzw+Jf35I/PND4p8fEv/8kPjnh8Q/PyT++SHxzw+Jf35I/PND4p8f
Ev/8kPjnh8Q/PyT++SHxzw+Jf35I/PP2t3XCW3e4dUxbF7F11lq3qXVgWlei
eerNe20eXfNyGuffuOHGITauqXESvXftPU7PhXvO1O/Wvgd3X62nuE/+Yv7O
+V0W83fO97qYv3P+52L+zvXYzN+5Ppv5O9drM38xfzF/MX8xfzF/MX8xfzF/
MX8xfzF/MX8xfzF/MX8xfzF/MX8xf6evt/V7MfMX7uuG87d1TFsXsXXWWrep
dWBaV6J56s17bR5d83Ia59+44cYhNq6pcRK9d+09Ts+Fe87U79a+B3dfradz
Pvs58xe2v3jmL2x/8cxf2P7imb+w/cUzf2H7i2f+wvYXz/yFx+QvPCZ/4TH5
C4/JX3hM/sJj8hcek7/wmPyFx+QvPCZ/4TH5C4/JX3hM/sJj8hcek7/wmPyF
x+QvPCZ/4TH5C9vf9uFoXf/WCW/d4dYxbV3E1llr3abWgWldieapN++1eXTN
y2mcf+OGG4fYuKbGSfTetfc4PRfuOVO/W/se3H21nuI++Yv5O+d7XczfOf9z
MX/nemzm71yfzfyd67WZv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Y
v5i/mL+Yv5i/09fb+rnP/KNL8o8uyT+6JP/okvyjS/KPLsk/uiT/6JL8o0vy
j3YdiXnO+irffR9lH9p5dfzF/MWNI25cYuOcGjfRe1j+9ly450z9bu17cPfV
ejrnt58z/+iy/MUz/+iy/MUz/+iy/MUz/+iy/MX8neu1eeYfXZJ/dEn+0SX5
R5fkH12Sf3RJ/tEl+UeX5B9dkn90Sf7RJflHl+QfXZJ/dEn+0SX5R5fkH12S
f3RJ/tEl+UeX5W/7XLVvTvtwtK5/64S37nDrmLYuYuustW5T68C0rkTz1Jv3
2jy65uU0zr9xw41DbFxT4yR679p7nJ4L95yp3619D+6+Wk9xn/zF/J3zPxfz
d67HZv7O9dnM37lem/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL
+Yv5i/mL+Tt9va2f68wfvCZ/8Jr8wWvyB6/JH7wmf/Ca/MFr8gevyR+8Jn9w
12ma95ivcq76Ub7zXmff2Xmw/MXN02ncf+OIG5fYOCf+9t619zg9F+45U79b
+x7cfbWezvnu58wfvC5/8cwftB6bZ/7gdfmL+TvXa/PMH7wmf/Ca/MFr8gev
yR+8Jn/wmvzBa/IHr8kfvCZ/8Jr8wWvyB6/JH7wmf/Ca/MFr8gevyR+8Jn/w
mvzBa/IHr8vf9pFsX7r2uWrfnPbhaF3/1glv3eHWMW1dxNZZa92m1oFpXYnm
qTfvtXl0zctpnH/jhhuH2Limxkn03rX3OD0X7jlTv1v7Htx9tZ7iPvmL+TvX
YzN/5/ps5u9cr838xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF
/MX8xfydvt7Wz23m/57J/z2T/3sm//dM/u+Z/N8z+b9n8n/P5P+eyf/ddQ9b
Z611m1oHpnUlmqfevNfm0TUvp3H+jRtuHGLjmhon0XvX3uP0XLjnTP1u7Xtw
99V6Oue/nzP/91z+4pn/ey5/MX/nem2e+b9n8n/P5P+eyf89k/97Jv/3TP7v
mfzfM/m/Z/J/z+T/nsn/PZP/eyb/90z+75n83zP5v2fyf8/k/57J/z2Xv35O
/MXtA8tf3D51/MX8xe3LwV/cuuGtQ8zfGdf3KnEGH+Xe43XOYd7kvfBtfk/v
816bR9e8nMb5N264cYiNa2qcRO9de4/Tc+GeM/W7te/B3VfrKe6Tv5i/c302
83eu12b+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5O
X2/r58Jf3L7N/MXtKznz9+/7XrWPzszfv6/z37rh/MUzf/++TmLrrvF3fse9
zb5yn6eOmwfL3zm++zj/Od7NjUtsnFPjJnoP23udnhP33KnfsX0v7j5bb/uc
+fvbX8zfuV6bZ/7+mfz9M/n7Z/L3z+Tvn8nfP5O/fyZ//0z+/pn8/TP5+2fy
98/k75/J3z+Tv38mf/9M/v6Z/P0z+ftn8ve3v34O/G1f9fZpbt/X9pFsX7r2
uWrfnPbhaF3/1glv3eHWMW1dxNZZa92m1oFpXYnmqTfvtXl0zctpnH/jhhuH
2Limxkn03rX3OD0X7jlTv1v7Htx9tZ7iPvmL+TvXazN/MX8xfzF/MX8xfzF/
MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX+nr7e17vzFs/7GfZ/19m2e9Tfu
+0q2T92sv3HfR6d9OfjbOuGtO9w6pq2L2DprrdvUOjCtK9E89ea9No+ueTmN
82/ccOMQG9fUOIneu/Yep+fCPWfqd2vfg7uv1tO5PvvJ37lem2f9jafU33hK
/Y2n1N94Sv2Np9TfeEr9jafU33hK/Y2n1N94Sv2Np9TfeEr9jafU33hK/Y2n
1N94Sv2Np9TfeEr9jafU39j+Wmf+Yv5i/uL2Wecv5i9uX0n+4va9ah8d/mL+
Yv7OuL3XiSN4k3uNtzlnua/bNH8Pd10Y/s7x3ee9zvFubp5O4/4bR9y4xMY5
8bf3rr3H6blwz5n63dr34O6r9RT3yV/MX8xfzF/MX8xfzF/MX8xfzF/MX8xf
zF/MX8xfzF/MX8xfzF/MX8zf6ettrSt/8ayf85z6Oc+pn3PfZ52/uH1gZ/2c
+z517XvFXzzr59zX+Z/1c+7rEPMXt04if+e+ses48XeO7z5PfY53c/PqmqfT
uP/GETcukb+4cRO9h+29Ts+Je+7U79i+F3efrbd9zvo5z6mf85z6Oc+pn/Oc
+jnPqZ/znPo5z6mf85z6Oc+pn/Oc+jnPqZ/znPo5z6mf85z6Oc+pn/Oc+jnP
qZ/znPo5z6mfs/21jvzF/MX8xfzF/G1f9fZpbt/X9pFsX7r2uWrfnPbhaF3/
1glv3eHWMW1dxNZZa92m1oFpXYnmqTfvtXl0zctpnH/jhhuH2Limxkn03rX3
OD0X7jlTv1v7Htx9tZ7iPvmL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5
i/mL+Yv5i/k7fb2tdeMv5i/mL+Yv5i/mL26fdf7i9oFtX0n+zjoNr5I3+lHy
WF4nrvZN4nze5t7xvo7p/C77SvaJdxnffR2YOd7N/J3j39y8uubpNO6fv41D
bFxT4yR679p7nJ4L95yp3619D+6+Wk9xn/zF/MX8xfzF/MX8xfzF/MX8xfzF
/MX8xfzF/MX8xfzF/MX8nb7e1jrxF/MX8xfzF/MX8xfzt33V26e5fV/bR7J9
6drnqn1z2oejdf1bJ7x1h1vHtHURW2etdZtaB6Z1JZqn3rzX5tE1L6dx/o0b
bhxi45oaJ9F7197j9Fy450z9bu17cPfVeor75C/mL+Yv5i/mL+Yv5i/mL+Yv
5i/mL+Yv5i/mL+Yv5i/m7/T1ttaFv5i/mL+Yv5i/mL+Yv5i/7avePs3t+9o+
ku1L1z5X7ZvTPhyt69864a073DqmrYvYOmut29Q6MK0r0Tz15r02j655OY3z
b9xw4xAb19Q4id679h6n58I9Z+p3a9+Du6/WU9wnfzF/MX8xfzF/MX8xfzF/
MX8xfzF/MX8xfzF/MX8xf6evt7UO/MX8xfzF/MX8xfzF/MX8xfzF7bPOX8xf
zF/MX8xfzF/M3xkX8HHuKb6Sc5N3Gd99XcQ53s38nePf3DoTzVtvHix/cfN0
GvffOOLGJfK3cRK9d+09Ts+Fe87U79a+B3dfrae4T/5i/mL+Yv5i/mL+Yv5i
/mL+Yv5i/mL+Yv5i/mL+Tl9va978xfzF/MX8xfzF/MX8xfzF/MX8bV/19mlu
39f2kWxfuva5at+c9uFoXf/WCW/d4dYxbV3E1llr3abWgWldieapN++1eXTN
y2mcf+OGG4fYuKbGSfTetfc4PRfuOVO/W/se3H21nuI++Yv5i/mL+Yv5i/mL
+Yv5i/mL+Yv5i/mL+Yv5O329rXnyF/MX8xfzF/MX8xfzF/MX8xfzd9bhvu+r
3j7N7fvaPpLtS9c+V+2b0z4crevfOuGtO9w6pq2L2DprrdvUOjCtK9E89ea9
No+ueTmN82/ccOMQG9fUOIneu/Yep+fCPWfqd2vfg7uv1lPcJ38xfzF/MX8x
fzF/MX8xfzF/MX8xfzF/MX+nr7c1L/5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+
Yv5i/mL+Yv5i/mL+zridr+Qe8V3Gd18nfI53M3/n+De37lrrOLUuDH9x89ab
B9u8uubp8Heux+bGJTbOqXETvYftvU7PiXvu1O/Yvhd3n623ffIX8xfzF/MX
8xfzF/MX8xfzF/MX8xfzd/p6W/PgL+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/m
L+Yv5i/mL+Yv5i/m77z3f5fx3df1n+PdzN85/s2tk9i6a63jxF/cOhP8xc2D
bV4df+d6bG4cceMSG+fUuInew/Zep+fEPXfqd2zfi7vP1ts++Yv5i/mL+Yv5
i/mL+Yv5i/mL+Yv5O329rXHzF/MX8xfzF/MX8xfzF/MX8xfzd/aleZU6+Zv5
O+sIvr7rq94+ze372j6S7UvXPlftm9M+HK3r3zrhrTvcOqati9g6a63b1Dow
rSvRPPXmvTaPrnk5jfNv3HDjEBvX1DiJ3rv2Hqfnwj1n6ndr34O7r9ZT3Cd/
MX8xfzF/MX8xfzF/MX8xfzF/p6+3NU7+Yv5i/mL+Yv5i/mL+Yv5i/mL+zj5S
r9LXYjN/Z93P16lD9uaur3r7NLfva/tIti9d+1y1b077cLSuf+uEt+5w65i2
LmLrrLVuU+vAtK5E89Sb99o8uublNM6/ccONQ2xcU+Mkeu/ae5yeC/ecqd+t
fQ/uvlpPcZ/8xfzF/MX8xfzF/MX8xfzF/J2+3ta4+Iv5i/mL+Yv5i/mL+Yv5
i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+TvjYN9lfPd9ruZ4N/N3jn9z64a3DnHr
mvIXt+4af3HrwrTOBH/nemxuXl3zdBr33zjixiU2zqlxE72H7b1Oz4l77tTv
2L4Xd5+tt33yF/MX8xfzF/MX8xfzF/N3+npb4+Av5i/mL+Yv5i/mL+Yv5i/m
L+bv7NP4Kn2jNvN31tV+nTqfb1J37G3qoNz3VW+f5vZ9bR/J9qVrn6v2zWkf
jtb1b53w1h1uHdPWRWydtdZtah2Y1pVonnrzXptH17ycxvk3brhxiI1rapxE
7117j9Nz4Z4z9bu178HdV+sp7pO/mL+Yv5i/mL+Yv5i/09fb+nv5i/mL+Yv5
i/mL+Yv5i/mL+Yv5O/uqvkqft838nXXwX6cu75vUCXybukUfp47CZv62T3P7
vraPZPvStc9V++a0D0fr+rdOeOsOt45p6yK2zlrrNrUOTOtKNE+9ea/No2te
TuP8GzfcOMTGNTVOoveuvcfpuXDPmfrd2vfg7qv1FPfJX8xfzF/MX8xfzN/p
6239PfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfydfStep472m9T1fJs6Yx+n
7slm/s68sHcZ333f1znezfyd49/cPjrty9E6//xt3eHWMW1dxNZZa92m1oFp
XYnmqTfvtXl0zctpnH/jhhuH2Limxkn03rX3OD0X7jlTv1v7Htx9tZ7iPvmL
+Yv5i/mL+Tt9va0/l7+Yv5i/mL+Yv5i/mL+Yv5i/mL+Yv5i/mL+zz8zr1L1/
kzq8b1MX8OPUKdrM35nH+e6urzrm7xzvZv7O8W9u36v20WlfDv7i1g3nb+uY
ti5i66y1blPrwLSuRPPUm/faPLrm5TTOv3HDjUNsXFPjJHrv2nucngv3nKnf
rX0P7r5aT3Gf/MX8xfzF/J2+3tafw1/MX8xfzF/MX8xfzF/MX8xfzF/MX8xf
zF/MX8xfzF/MX8xfzF/M3zm++77qc7yb+TvHv7l96tr3qn10+Itb55+/uHWI
W9eUv3M9NvN3rs9m/s71us97xc2ra55O4/4bR9y4xMY5NW6Cv7j3Oj0n7rlT
v2P7Xtx9tt72yV/MX8zf6ett/Xv8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/MX8
xfzF/MX8xfzF/MX8xfyd49t91Pk7x7uZv3P8m9tXsn3q2veKv7h9OfiLWze8
dYj5O9djM3/n+mzm71yv+zz15r02j655OY3zb9xw4xAb19Q4id679h6n58I9
Z+p3a9+Du6/WU9wnfzF/p6+39c/xF/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfz
F/MX8xfzF/MX8xfzF/N3ju9YzN853s38nePf3D6w7SvZPnX8xe2jw1/cOv+t
G87fuR6b+TvXZzN/53rd15XAzVtvHmzz6pqn07j/xhE3LpG/jZPovWvvcXou
3HOmfrf2Pbj7aj3FffJ3+npb/zt/MX8xfzF/MX8xfzF/MX8xfzF/MX8xf2df
8o/SJ/V1+ra9SR+Zt6lr/3Hq7G7m76xD9C7jOxbzd453M3/bV719mtv3tX0k
25eufa7aN6d9OFrXv3XCW3e4dUxbF7F11lq3qXVgWleieerNe20eXfNyGuff
uOHGITauqXESvXftPU7PhXvO1O/Wvgd3X62nuE/+zueXFvMX8xfzF/MX8xfz
F/MX8xfzF/MX8xfzF/MX8xfzF/MX8xfzF/N3ju9YzN853s38nePf/P/3WW/f
5vaBbV/J9qlr36v20Wlfjtb5b93w1iFuXdPWSWzdtdZxal2Y1plo3nrzYJtX
1zydxv03jrhxiY1zatxE72F7r9Nz4p479Tu278XdZ7e3/wMqAAV1
         "], "Version" -> 
        1]], "Values" -> CompressedData["
1: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
DBkWc7JEUGzjPqoHsC+Qv4rqBQh8281P9QS6HdifUL0BT+bURqpHwJhhs7zr
cxhaCi6WUz2DVLclfap3cHxbrhvVQ9iVo89F9RLeplinUj0F/q+PmqneQmhO
ezHVY3hytrWE6jXYKNjsoXoOGU8POFC9hz7ffdupHsQq1vsDVC+i8bqIBtWT
0Hh17k9ZqTecmplUqR6FTqEgoXoV/WGfP16uMcdmxvkiqnfB4bRVlephgo0t
/lQvE2GanhzV08TZMHc31dvkZqtgFtXjRPjd/Qmq1wmPjVgS1fNk07lr/lTv
k7M5DfIUB5CjcU0pFBeQiquM0hQnEPWCgUyKG8gOpVkTiiPIz5/bFCmuIDtz
D1RSnEGYni3+jztI4iWVbIpDyMwh8yCKS4io0LppilPIy0DZMIpbiHHx5P84
howEc4DiGlKuam1CcQ6J134QSXEPybj9vY3iIFIsI91CcRF58/JkBMVJpPhE
7TuKm8iBmvlUiqNI66EcHYqriFBi9fq/2qFEUCCJTnEXEeA6KUZxGFl/YbKE
4jKSKqVRQHEaIfVmsqzpqiRfsOzKpzJxJIVP+1Fch6CMA1UU54EwyfFR3Ieu
v1qNFAfCYY3nr1QpH3gELs0VvvLDEa6GNIobEZEcU0FxJA7NpF2luBLfpu/5
UpwJu6haPYo7wfPM7AjFoajZkJtEcSm6Ctr+3jgdDDWBS4oUtyJzbGILxbHw
2lyXQHEtmtZZvqU4F4FyLxgp7gVt34ETFAfj5vfj4hQX48Pk7gaKkzGttFWC
4mbsKOg1ozia3Ftbv6L7szPZsJ/pEcXZZDr0Zw/F3aRheZ8zxeHkon/5Ct/x
GNJTczmN4nQS3rTvP4rbiRFT+RmK44nht3ALiuuJz9TU/zif7PvR8j/uJ7K3
i/7nAaSiI+V/XkDsro3JUJ5APAO9RylvIKOWPoKUR5C9jhoilFcQ4ev1RynP
IJNNk22UdxB/webblIeQksNB//MScvd68/88hQSsOdFOeQsxpzqV8hjyotBm
nPIa0mvBZkF5DtnvcSCd8h7ymkXkG+VBZFr2BMOCbTzZ2/5kM+VJpMr/livl
TWQFp2I65VHkkHLe1u7hQCI7xL6yrsqHuLKl7nUUcSekqm3nRWtbImufXUd5
GQnPHmLt75Yha1QY8hS+KoJbd1mP8jgcNlZ5I6dhDZemlXGU56FBrM+B8j54
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
zVIpdH/cZxZVKQZ+Esui/uJG/A+/zhoW
      "], "Version" -> 1]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.764044140492354*^9},
 CellLabel->"Out[237]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{
   RowBox[{"Catch", "[", 
    RowBox[{
     RowBox[{"fuckert", "=", 
      RowBox[{
       RowBox[{"asd2", "[", 
        RowBox[{"[", 
         RowBox[{";;", "10"}], "]"}], "]"}], "//", 
       "meanShiftedWavefunctions"}]}], ",", " ", "_"}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.764043829696013*^9, 3.764043874068842*^9}, {
  3.7640443455227633`*^9, 3.764044348535082*^9}},
 CellLabel->"In[258]:="],

Cell[CellGroupData[{

Cell[BoxData["\<\"10 wavefunctions with length {5320} and grid of dimension \
{76, 70}\"\>"], "Print",
 CellChangeTimes->{{3.764043842165123*^9, 3.764043875152697*^9}, 
   3.7640439186971416`*^9, 3.764043977184457*^9, 3.764044060505362*^9, {
   3.76404420660707*^9, 3.7640442085238523`*^9}, {3.764044338719233*^9, 
   3.764044349629278*^9}},
 CellLabel->"During evaluation of In[258]:="],

Cell[BoxData["\<\"Making wavefunction object\"\>"], "Print",
 CellChangeTimes->{{3.764043842165123*^9, 3.764043875152697*^9}, 
   3.7640439186971416`*^9, 3.764043977184457*^9, 3.764044060505362*^9, {
   3.76404420660707*^9, 3.7640442085238523`*^9}, {3.764044338719233*^9, 
   3.764044349643179*^9}},
 CellLabel->"During evaluation of In[258]:="]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"holyFuckkkkkk", "//", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"#", ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.764044060676066*^9, 3.764044072996019*^9}},
 CellLabel->"In[234]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"newFuckWhat", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "//", "ListPointPlot3D"}]], "Input",
 CellChangeTimes->{{3.7640439242129593`*^9, 3.764043932394907*^9}, {
  3.764043986413867*^9, 3.7640439875780487`*^9}},
 CellLabel->"In[228]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"newFuckWhat", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.764043813543592*^9, 3.7640438158536987`*^9}, {
  3.764043879870493*^9, 3.764043880971278*^9}},
 CellLabel->"In[216]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14536", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.764043881285831*^9, 3.76404391905438*^9},
 CellLabel->"Out[216]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "[", 
   RowBox[{"[", 
    RowBox[{"{", "1", "}"}], "]"}], "]"}], "@", 
  RowBox[{"\"\<Plot\>\"", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.764042433468054*^9, 3.764042439195126*^9}},
 CellLabel->"In[54]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["Blech", "Section",
 CellChangeTimes->{{3.764037270318945*^9, 3.7640372711870737`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"asd", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5Old/newWfns$101634.\
mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764037272147675*^9, 3.7640372789320602`*^9}, 
   3.764037752261701*^9},
 CellLabel->"In[753]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"asd2", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5Old/newWfnsGrid$\
101634.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764037679528466*^9, 3.7640376870275784`*^9}},
 CellLabel->"In[750]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GridFunctionObject", "[", "\[IndentingNewLine]", 
    RowBox[{"asd2", ",", "\[IndentingNewLine]", 
     RowBox[{"asd", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], "@", 
   "\"\<Points\>\""}], "//", "ListPointPlot3D"}]], "Input",
 CellChangeTimes->{{3.764037688485827*^9, 3.764037699467256*^9}, {
  3.764037838003469*^9, 3.764037848393759*^9}},
 CellLabel->"In[756]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asd", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.764037280148637*^9, 3.764037287034185*^9}},
 CellLabel->"In[745]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1748", ",", "145", ",", "145"}], "}"}]], "Output",
 CellChangeTimes->{3.764037287353092*^9},
 CellLabel->"Out[745]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"asd", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.764037289645155*^9, 3.7640372945681677`*^9}},
 CellLabel->"In[747]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"145", ",", "145"}], "}"}]], "Output",
 CellChangeTimes->{3.7640372948769627`*^9},
 CellLabel->"Out[747]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "/@", "asd"}], "//", "DeleteDuplicates"}]], "Input",
 CellChangeTimes->{{3.764037304353405*^9, 3.764037311335541*^9}},
 CellLabel->"In[749]:="],

Cell[BoxData[
 RowBox[{"{", "145", "}"}]], "Output",
 CellChangeTimes->{3.76403731164996*^9},
 CellLabel->"Out[749]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Phases", "Section",
 CellChangeTimes->{{3.764010302013382*^9, 3.764010302917363*^9}}],

Cell[BoxData[
 RowBox[{"<<", "ChemTools`All`"}]], "Input",
 CellChangeTimes->{{3.76401030506179*^9, 3.764010316797248*^9}},
 CellLabel->"In[699]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"r1r2", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5Old/\
r1r2Wavefunctions.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764010425214855*^9, 3.7640104301955967`*^9}},
 CellLabel->"In[703]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mmm", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{"WeightedData", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", 
          RowBox[{";;", "2"}]}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "@", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}]}], "]"}], "]"}], 
    "&"}], "@", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"r1r2", "[", 
       RowBox[{"[", "1000", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "@", "\"\<Points\>\""}]}]}]], "Input",
 CellChangeTimes->{{3.7640104312636747`*^9, 3.764010532694043*^9}, {
  3.764010628786367*^9, 3.764010644894224*^9}},
 CellLabel->"In[717]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4849973055053174`", ",", "0.4304661555174444`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7640106452688723`*^9},
 CellLabel->"Out[717]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"r1r2", "[", 
      RowBox[{"[", "1000", "]"}], "]"}], "@", "\"\<Grid\>\""}], "]"}], ",", 
   " ", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.764017065858367*^9, 3.764017092002153*^9}},
 CellLabel->"In[738]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r1r2", "[", 
   RowBox[{"[", "1000", "]"}], "]"}], "@", 
  RowBox[{"\"\<Grid\>\"", "@", "\"\<Attributes\>\""}]}]], "Input",
 CellChangeTimes->{{3.7640170083628073`*^9, 3.764017061567821*^9}},
 CellLabel->"In[733]:="],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"Attributes\"\>"}], "]"}]], "Output",
 CellChangeTimes->{{3.764017054882236*^9, 3.764017061765896*^9}},
 CellLabel->"Out[733]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"r1r2", "[", 
   RowBox[{"[", "1000", "]"}], "]"}], "@", "\"\<Wavefunctions\>\""}]], "Input",\

 CellChangeTimes->{{3.7640136305155687`*^9, 3.7640136358837223`*^9}},
 CellLabel->"In[722]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"shiftWfGrid", "[", 
    RowBox[{"nearest_", ",", "baseGrid_", ",", " ", "vals_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"baseGrid", "-", 
    RowBox[{
     RowBox[{"nearest", "[", 
      RowBox[{"Mean", "[", 
       RowBox[{"WeightedData", "[", 
        RowBox[{"baseGrid", ",", 
         RowBox[{"Abs", "@", "vals"}]}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shiftedWfns", "[", "wfns_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "baseGrid", ",", "\[IndentingNewLine]", "nfunc", ",", 
      "\[IndentingNewLine]", "shifts", ",", "\[IndentingNewLine]", "newGrids",
       ",", "\[IndentingNewLine]", "gridBits", ",", "\[IndentingNewLine]", 
      "fullGrid", ",", "\[IndentingNewLine]", "newWfns", ",", 
      "\[IndentingNewLine]", "newWfnsGrid"}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"baseGrid", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"wfns", "[", "\"\<Wavefunctions\>\"", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "@", 
       RowBox[{"\"\<Grid\>\"", "@", "\"\<Points\>\""}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nfunc", "=", 
      RowBox[{"Nearest", "[", "baseGrid", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"shift", " ", "the", " ", "original", " ", "grids"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"newGrids", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"shiftWfGrid", "[", 
            RowBox[{"nfunc", ",", " ", "baseGrid", ",", " ", 
             RowBox[{"Flatten", "@", 
              RowBox[{"#", "[", "\"\<Values\>\"", "]"}]}]}], "]"}], ",", 
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{"#", "[", "\"\<Values\>\"", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Times", "@@", 
                RowBox[{
                 RowBox[{"Dimensions", "[", "#", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}]}], ",", " ", "1"}], 
              "}"}]}], "]"}], ",", "\[IndentingNewLine]", "2"}], 
          "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
        RowBox[{"wfns", "[", "\"\<Wavefunctions\>\"", "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "determine", " ", "what", " ", "the", " ", "tensor", " ", "product", 
       " ", "grid", " ", "parts", " ", "would", " ", "be"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"gridBits", "=", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sort", "@*", "DeleteDuplicates", "@*", "Flatten"}], "/@", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newGrids", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"newGrids", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "All", ",", " ", "2"}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "make", " ", "the", " ", "full", " ", "grid", " ", "that", " ", "every",
        " ", "wavefunction", " ", "will", " ", "live", " ", "on"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"fullGrid", "=", 
      RowBox[{"Tuples", "[", "gridBits", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"(*", " ", 
      RowBox[{
      "but", " ", "zero", " ", "out", " ", "undefined", " ", "parts"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"gridBits", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"fullGrid", ",", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "@", "fullGrid"}], ",", " ", "1"}], "}"}]}], 
         "]"}], ",", " ", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newGrids", "=", 
      RowBox[{"(*", " ", 
       RowBox[{"fill", " ", "out", " ", "the", " ", "entire", " ", "grid"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"DeleteDuplicatesBy", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{";;", "2"}], "]"}], "]"}], "&"}], "]"}], 
         RowBox[{"Join", "[", 
          RowBox[{"#", ",", " ", "gridBits"}], "]"}]}], "&"}], "/@", 
       "newGrids"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "set", " ", "up", " ", "the", " ", "new", " ", "wavefunctions"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"newWfns", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"SortBy", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{";;", "2"}], "]"}], "]"}], "&"}]}], "]"}], "&"}], "/@", 
       "newGrids"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newWfnsGrid", "=", 
      RowBox[{"(*", " ", 
       RowBox[{
       "by", " ", "making", " ", "a", " ", "new", " ", "full", " ", 
        "coordinate", " ", "grid"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"CoordinateGridObject", "@", "\[IndentingNewLine]", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"newWfns", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "All", ",", " ", 
            RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", 
         RowBox[{"Length", "@", 
          RowBox[{"gridBits", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "and", " ", "then", " ", "finally", " ", "constructing", " ", "a", " ", 
       "new", " ", "WavefunctionsObject", " ", "new", " ", "full", " ", 
       "coordinate", " ", "grid"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"WavefunctionsObject", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"wfns", "[", "\"\<Energies\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"newWfns", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "All", ",", " ", "3"}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       "newWfnsGrid"}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7640134356412783`*^9, 3.764013652866251*^9}, {
  3.76401410460718*^9, 3.764014172348617*^9}, {3.764014411097733*^9, 
  3.76401468509713*^9}, {3.764014794627399*^9, 3.7640148057894506`*^9}, {
  3.764014837944154*^9, 3.764015036777506*^9}, {3.764015093240941*^9, 
  3.764015445963801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"r1r2", "[", 
    RowBox[{"[", "1000", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"{", "2", "}"}], "]"}], "]"}], "@", 
  RowBox[{"\"\<Plot\>\"", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<PlotMode\>\"", "\[Rule]", "\"\<Density\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<PlotDisplayMode\>\"", "\[Rule]", "\"\<List\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Point", "[", "mmm", "]"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.764010573193232*^9, 3.7640106490336323`*^9}},
 CellLabel->"In[720]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["Coeffs", "Section",
 CellChangeTimes->{{3.764010299081193*^9, 3.7640103001206303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"coeffPlotter", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"asd", "=", 
        RowBox[{"Import", "[", "#", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "}"}], "]"}], 
         "&"}], "@", "\[IndentingNewLine]", 
        RowBox[{"Select", "[", 
         RowBox[{"asd", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "<", "10"}], "&"}]}], "]"}]}],
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "&"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.764303396560731*^9, 3.7643034049591*^9}},
 CellLabel->"In[42]:="],

Cell[CellGroupData[{

Cell["150988", "Subsubsection",
 CellChangeTimes->{{3.7642990576070747`*^9, 3.76429905910423*^9}}],

Cell[BoxData[
 RowBox[{"\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
coefficientsGrid$150988.mx\>\"", "//", "coeffPlotter"}]], "Input",
 CellChangeTimes->{{3.76430338750569*^9, 3.764303408584646*^9}},
 CellLabel->"In[43]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell["151947", "Subsubsection",
 CellChangeTimes->{3.764299066436843*^9}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"asd", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
coefficientsGrid$151947.mx\>\"", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "}"}], "]"}], 
      "&"}], "@", "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{"asd", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "<", "10"}], "&"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.764039147520877*^9, 3.76403916513256*^9}, {
   3.7640472495417137`*^9, 3.764047250283435*^9}, {3.764052030651763*^9, 
   3.764052032358219*^9}, 3.764056016547209*^9, {3.764058747419074*^9, 
   3.7640587845462008`*^9}, {3.7642990299086123`*^9, 3.764299051837421*^9}},
 CellLabel->"In[44]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell["152906", "Subsubsection",
 CellChangeTimes->{3.764299101088374*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"asd", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
coefficientsGrid$152906.mx\>\"", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "}"}], "]"}], 
      "&"}], "@", "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{"asd", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "<", "10"}], "&"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.764039147520877*^9, 3.76403916513256*^9}, {
   3.7640472495417137`*^9, 3.764047250283435*^9}, {3.764052030651763*^9, 
   3.764052032358219*^9}, 3.764056016547209*^9, {3.764058747419074*^9, 
   3.7640587845462008`*^9}, {3.7642990299086123`*^9, 3.764299051837421*^9}, 
   3.764299091827392*^9},
 CellLabel->"In[11]:="],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
    0.009722222222222222], Point3DBox[CompressedData["
1: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
azastSPHPk7eYzpt3A1y7GPcvtYtai3k2MfyGbGXks3ofLCPU2tOzVlZSI59
XFh0aPrTnXQv2EerhYomVQPpHrGPw949LR33g9zyVM+DC3X6CLwHlTcPLbgv
vDYrduuYkT+EVptqjRRf/dXblxoQuunSBebYX72Txr+PnY9mjv29Kqub97Lq
OnPsb26/r2ozn8Yzx/7K/5ZdqqacwBz7W/BQJuuBbzJz7O+mQyXX725IZY79
/TWxzGlUm5A59tfrjpz1ibAnzLG/G7q3Tdz7nBz76+ntrR95kBz7u2L8kFTL
Jnp97G/2o+/FuqWPmWN/B/yxrrG/Rc+J/U06bDZt3uFHzNnXh7wxr1vo9JA5
9jfGaqK4vkMKc+zv5m2zOwy588H+3im4sLL18QPm2N/o5FUzNaXI2f7uWr2s
dUcS3cu//XXdMdut39dE5tjfM9or1iXZkmN/C0ovqJ3pSY79PbFSIHEkhe4X
+1sd6tj9Zh859vfb17Z7OxaQY381Es8Ydgwlx/6e6znG5rQsOfa3f92xtgIx
cuxvgKbnqfFy5NhfEePdjzpGk2N/h/RQfytmQo79VZs14dGDMHK2vyOXOzz7
Q479HWEgFpW9k84H+3skImhkZzs59tew6mvPITfoXrC/lwc82H3Sle4R+9uR
fKFomx3Ng4Rhdts2/z6CjwO/L517PEV4pF/ivr67KoS5KxvNju3+o7ez48/9
oIkXmWPfvUvGvKqcfYU59v18P6nPBx7GMse+z40dsMC37S5z7Pv1osgcqd0P
mGPfT/k5y93f9Jg59v1KrNcu17o05tj3nHzvSN0ez5lj38fN6LP+g246c+x7
oKnHCY0n5Nh3h7ppr++fJ8e+Cw5evXhYjhz7Pjv1zJ2ErfR5se9rXEdOn3Pl
GXPsu3tZZdDBiqfMse8BvX68XjuRHPte91Wsqsdxer/Yd6nMMNmQ2ifMse8m
Y1e9ldlCjn1/q2t1ISRPyBz7fm6GzoLnLXTO2PfB8lPHy+mQY9+tRmv1VApI
ZY59L7fPV9na8Yg59n2YnnjtMjdy7LvOsdgpk+XIse8jYv8aTLn5kDn2fc+R
S2mh68nZv1fm9pl6YyA59r2gw3frnR80z9j3G6OMm+NfkGPfZ80ZH9k3hRz7
/iwyvOLxY3Lsu0pWZKLsJ3Ls+48HE+Y96E3Pg31/uEp/9jAzcuz79Oz517pf
kGPfV38qlZplSOeDfd+1WbKkq4sc+z7it6t5Th7dC/Z95LhjmWav6R6x71Py
h8iUNtE8XO/ns8/3Rx9BdWtjW8bVJ0LzeqGv6L0yoZ5uy5ZOpWa9Xl/i+235
epE5+iBiuaLPPJurzNGHu6YOcapyt5mjD5YaQ8+Mb7vPHH0YvfmVkv2Vh8zR
h86KJMmJkWnM0YfD0c3bizanM0cfRiyYsvbA0Uzm6MOgzJuqKRezmaMPg9YO
1855/pI5+qD89mC7fRM5+pAtMv9ypxs5+tC7ZGe7Zzq9PvqwfHJC07ziLObo
wxcVV42WH/Sc6IPYe6/hP7tfMEcfZAZFnbk+ghx9eN48wuC5cQZz9GHXwlrB
2wt0PujDxkmjW/s1P2eOPnQ+Uz0kZ06OPvgl517PK3zGHH2Q8xt2654FOfrQ
FFWwbkLDU+bow+tUyUzFAHL0QV3P4r7VTHL04ZqE7Icev+je0YcligvOjrhM
jj58f3mmtXwrOfow6GPD38Pa5OhDgsbutnwJcvShfciPrMRymn/0IVhiVbtj
Njn60C1it0pESI4+RL/5blXDOfqwZ1vQosdvyNGH20s/nc6tIUcfbPT0mnur
0nOiD2rXf3QXmJOjD6eDnX/MSCBHH3bMcFo8fhidM/pQbdsnRCSaHH3YVz3C
5qge3S/64HQ17JrYH/IVnxb9iZ2jLFBeZDT1YPZz4b7zQTqfGouFt8Z02jkl
NurdyBjrYBV/kTl6snKwU2in6DXm6Ena87p5+sbxzNGTJ6rB5qFnE5mzP29U
X809ufcxc/Rk0I2+Q17UPGOOnvxxy3i0pSiTOXoiLRjye9i818zRk+SAveai
+rnM0ROVoUuCLxi/ZY6eVN5PzBA8JkdPshPDNqneIEdPNPaO2v54PTl6snbl
ll4FRfR50ZOonKYz7YvJ0RMZ8weLrzjlMEdPQkxshjqavmGOnvTVVcheuYre
L3qyZsWmsEMbXzFHTy4nHk3OOfiSOXriHeZjffluNnP0JO+O3c4h7VnM0RPR
Wa9XVxuRoyfeIrGKKincvfzryZLtCm/VJ5CjJ+6hz2f8iXvBHD05YDowpGYq
OXryXq5X1KfMDOboScx+jYWrt5CjJ+LnZNLsZMnRE4upKrZeKenM2dfTOi2b
OtWZHD0ZUZrZeGwWOfv3I/u8HXPkydGTUrNVtlm/aY/Qk07foWZ/ysjREw9T
l8cbK8jRE0VbmfOZLeToybPFB9c4DqfPi554dHnu6mFJjp7kqrq+mpVAjp44
iG0U/atG54OedHUrzy2PI0dPppaF+r42ontBT+zTa7O0BtD9oiciji6mh7vJ
GyJ67MkJVhbIH6nYpSydLZyx8trGe54fhKoqYvsqTRv0pA0cFXo4hjNHf1y+
JJbVil1jjv6YW7hvGvk8njn6c9x94/moS0nM0Z+zDx3MokyeMEd/On8aXuhs
S2eO/uzJ29GuPvoVc/Rn7r6oqnbRt8zRn55ZfTs2b8hnjv407LGTbez5jjn6
kyf86Tijnhz9sQ+fci9p3Hvm6M9lw+ja/jLk6I/NlPyBd87R67B/Lxj+frlW
dwGdz7/+XAga5zF7Izn6kx7YdvxlIj0/+vMs3tv4U19y9Gebi946F/c85ujP
iUGDHDfU0/mgPwvSZiW47iZHfyrGtCTU/c1ljv5IzlOwUvclR3/ins33zVAj
R39Mp+met/HJoXv51x+9FS/sfT6+YY7+7L059VjNRHL055Z34Z3zwa+Zoz/O
ATki4pLk6I/9Mc+8igM0J+zvJ0cuHLdMhBz9WeQmn/TG/yVz9Of42e0Vw8aT
oz/mPXbskf5A+4L+yO9dHrspiBz9cbs1ZYC2BTn647FpyK7Bc8jRnyBl587Q
ieTozwbl18WpM8nRn8W1/lNmmZGz/97pThG7f5Yc/Zk7serMnmpy9u8F5Ts1
B1rS+0V/QgMaJyfUk6M/Pi1GIaGX6TzRn1Xe7+K/7qd7QX+aHz+3uLGH7hf9
efmk+4xPMM3JWev0+vpqZYFPemzqot25wibxh54n5POFJyWkPC06f+uZjI8/
92NPOHP0yuJJ3xxXkWvM0SvFpLYUyz/xzNGrIeL7vhmYPWCOXi11uxRoPymN
OXolLLvaEHrrBXP0avyZhcltC3KYo1f+UwrOtlrmM0ev4qVvHxzt9p45erU9
3//sxS8fmKNXEX5TP6usKWKOXq17PaDcsZMcvXpo7H41atwn5ujVAu2/QTnV
9PHo1eDVG3UqbMnRqwfbzq8uePeRzudfr3JbRrw30iRHryKW3Lw07gA9P3rl
W+bhbZZfyJx9vdlnt43CieTolU34GEuVUDof9v0IJUeLQ3uRo1dW16VWXjv+
jjl61f0xqPZlT3L0ynbfkkjfswXM0as3jsqfxo4mR6/8lpbVzU6le0SvPo7y
O7dsHTl69af7kmVsSx5z9GqG5rFlzy6Qo1d6a7VWmS4iR68eGGzx+f33LXP0
atX5d5qOt8jRq00Ln4gdsiVHry60/9xzcgo5ejV3dbC/kwQ5euW37FLZji+0
d+jVgHfJv388J0evaiaWO29OJEev9ncMPRKYQI5eudkU781LI0evmv60acwp
Jkev5FY4VTRL03OiVyq5t3UMFpCjV55SJSlfA8jRq5vmC7ulG8jRK9NzJuWG
1nT+6NWv5AO2elXk6JWkxd5Rk47SvaNXfu6DntRMofmZOebIbuUFfQUWqhLK
3S0FQkun8GUvZr4UNn1VUb45t05vt+KbgCU/o5mjb66rt1QNOhrDHH1bdKTV
Mvv4Hebo21F1e3fRyGTm6Fvvgc/uH5rzlDn6pjez/dnhS1nM0bf7uvp+xmZv
maNvt5rthYmV75ijbzO1TDbfzvnIHH1zCs+fva3oM3P0LXX7YO1RmSXM0bfy
Q84eRp++MEffbgsPnmzXLmWOvhU7CEoPTyNH36Y/2vaqvB85+mbSYStj8pRe
H32zGGWR/HgaOfq29quhvWsEPSf6dv9NsU2WGDn6Nsx5cfKQbcXM0bchm+P6
Tcijc0DfikL+5N6aT46+PcwzrRz96BNz9C3980e5+Jnk7OcnyLwxbHtcxBx9
+7o4e/O4xeTo27jx71pL8+m+0Lfa7GFTEzeTo28XA63jP/z5wBx9S9z9MVX0
FDn6Jjdc8POeBjn6FhBstzc1o5A5+nb2xhvzVBty9G3znB12Dirk6NvT6UvU
JmW/Z46+eVxpj4w/So6+lc78Fvt1OTn6pjVIaZ6HKjn6FqGc+XxrO805+vZC
K1LG/Ds5+lZrb/mysoQcfVsYfGPgrx/k6FtJw8sUcVH6vOib09s3yw9pkqNv
hY81t4huI0ffAvMUau4nkKNv425pjfjbj84NfbMNHJTsfpIcfUtPfHpQqEz3
hb49/SDxWTSeHH07kN3vqJs5zQn6tkAsRcpvMM1bSc28mmlhfQWWC4q8o+I+
CzNLngftXftEmPd4+Khzx6v12gt3nPAaksAcPSy2WyMnueMuc/Sw/JZ2itSo
ROboofMdI/3JEx4zRw9t3QcOX+mVzhw9fFqlOPLhf/99AUcPw6ZtrjXeVMAc
PUy93dtnQdpH5ujhnUfHw8ZPKmGOHgbm7Zo4MbmUOXoYPWvd1c3pZczRww83
HdUNN5UzRw/da+eVFiWTo4eXeweL+hSTo4dFhyOUlDhHDyd1OkkZZJKjh0Oq
xE88iyZHD/MqQtTP7SFHD/ubxlhHCcjRw0WrzgUEy5Kznw9g8GnKqgJ6v+jh
tAqzw4YR5Ohhqe21JT9tyNn3Dw4YOUNpJjl62KfXhGcpMuTooZH46KhrRXT+
6OH66nmHym+So4fW+ycPeXaQHD0cuLrow4JV5Ozr2cpM5ouokaOHk1SHaT+u
/sIcPVwnfHn1XTA5euhX02ZsO5ccPdQfkOZv+JvmCj0c53xwR/hlcvQwevCC
Ck9zcvSwdPMXP+mh5OihdNFT09yfxTQP+Prqra+FsQ/J0cPrf6tUp4SQs++X
GefkOeAwOXp4ef6uF5ddydHDZaNtina7k6OHdpamexIDyNHDM7MMbm64T44e
OjVu26T7gxw9XGhVdchvDL1f9NBpfupyyQPk6KG+/JkHa0rI0UOlwE0/m1bS
vaCHxtNevc94TY4eCjyOz7kymOYBPaz6Kq0wdgU5ethdIBHxLYPc666ojWlD
X4H+sM1K4X2LhCJj7uyOyLwijA8ZO+NwTqWexWWHLSr9cpijn7UvNn4NGp/P
HP1snjtX903Ga+bo51ulwN6jz9LroJ/jv2l1Kf6l10E/JQaEH4k+/ZE566eh
7uaxTSXM0c9VVX3fhFwvY45+Oq5cdyer71fm6OfFi9aKp4dUMEc/b0+f11CY
So5+Cl3aXv/q9Y05+mlgU9Oqo0+OfvbbsuvNfCty9HN7jq+u1E5y9LN1h/59
/V3k6GfKghsXhluTo5/DQgb2HGNCjn5qOFuP/biYHP3sc6QiYfQ0cvRzp2Pw
3AI1cvTz1ILJSbJK5OhnL1ObC9rddD7oZ+dvtWk2NeTo55y8pJ4DPpOjn4eX
THMReUmOfnZtCJNrTCZHPy+OmnaqK4Yc/fQYfPiw5nly9NM70na39DFy9POn
zuSPLc7k6Gf0Z+vwHlvIWT+n/fnQbUSOfirNTGk4NZ+c/ffyJLtxJyeTo5/G
aQn14urk6Ke11+48pX7k6GeO/NuuTmly9PPX5Sf60zppntHP3iPWOmxsImd/
noxTKrlSTY5+pj9oXGv+gxz9NInwTWj4Ro5+OsfYxUh9J0c/L/Z0HRxSSY5+
7hzkundoPTn6OaWiS+x0Gzn62a89eHGtFL1f9NMuyFU2oj85+rll/4CfgrHk
6OfthkZx57ncfP7rZ/PXM5LppuTo50a/cwcCnLi5/ddPnbQZS+K8ydHPqVtf
jmmyo71APyXWtt/0+UAfr7H3yU+3Jf0EBtvs1A21cuF66Gq4RNVFjz51zNHV
aEVdo6rjtczR1SktKnenDqWPR1cXpPkYhIqRo6suIRFFw7fR66Cra3YauVuv
rWGOrqYlJal1i1YzR1fHrRwlUXnrF3N0dXfYXB/925XM0VXZiLvOP8p+MkdX
c98L+0RvJEdXvV4Uma0fQI6uelz/s+LR9x/M0VWf/nVi51+To6u601Nk/DLI
0dXLNhsGuj8nR1c1Ij3Gv3xJjq7Kedhf31JIjq6++eN3YEwFObr6ZeCNE4+b
yNFVKy1ztyoJel/oaoZG39VHlMnR1Y1BGcK/6uTo6rMgj+FWU8jR1Uk+rwzW
zCdHV9d3qb0VNSRHV0U2ZLUFWpKjqwHmV6va7cjR1eu3DOKmHeTu5V9XWzQT
hkaeIEdXow1XPPseQo6uFh/dnSEaQ46uKgmzbAYmkqOrBt6X/K48I0dXz43N
rnyaS46uSo2u0d1VTM6+708rPeXRT3J09ZhS1+OVjeTo6o6VvfWzO8jRVfm+
G4d/E6c5R1enjZ1xu48sOfu60Opd2St6k6Ora6NVfJzlydHV1bus7Ww4R1cr
FYYah/UiR1fLdZ/tj+pBjq5+Ed9pOrSbnh9dfaVQvXdXEzm6Wt9HR0H0Bzm6
aqRp7VBXSI6uOvreTvmUzs3nv66a2o8trLxDjq4uCB4TEniBm9t/Xe0uC1wp
6U2Ort5bbRTebxe9L3Q1Zvb92LPbqT/o6l1Vs7QZK38Kc//vz7GsnxY6Ynrm
FXXM0U+X4Qp+wl/k6KfBRbVDumXk6Gdg946ZuRnk6OcGzUf1tifI0c9dJY8z
7/YnRz+7ciYv2WRcyxz9XNNZe0lzWQ1z9FMl2sLn5LRq5ujn+QP9rT8vqmKO
fgrOX0sZeOEXc/SzpE4yduFEcvSz+PPc21MaKpmjn6emHJow/wM5+vnggGe5
P+foZ5xU/IDLP8jRzx/xO2b8EaXPi34uisqSPKRGjn4eWzdOu2QROfs5LZnV
g/vYkqOfOqf6Dn4dQI5+3hqiaC2fQI5+9rQOGZ34nhz9FERPMcv9Q45+Vpuk
PnHtS+eMfnpOkZj0dRI5+ll8SjsozoAc/fy66PT+azbk7OcCqTXpfDxKzn6u
VN1IjyOXyNHPAUvy8+0ekqOfEdeW9TcoIEc/Ex58DxpRTY5+Rh1VefxAjOYK
/ewf9naTjwo5+ukS5zo+WJMc/dz9drlr9Cxy9nPGHpr4Ky4lRz9nbTPe32FM
jn46e4bOkrYgRz9t2pv751qTs++b3nklZek2cvTzc6PbY8Wt5Oin8aeq+X02
kaOfgQc1HWXXkaOfywLFjG9yz49+tmmE35fXIUc/I+bsXFIxghz9FFyWlJKX
Jkc/k362Fmb8pHtBP9MVLW58fE6Ofhq77fmy/wI5+nnXyt1Z1J4c/ZzTe1Ks
nx45+pm5c/Us8ZHV+HtR1sP1o3bvFLbWMUcPh6a27T71h5x9Hc7bvh73q8nR
w+FTwmMy3pOjhy/TrpbpxZKzrwPstgupNSVHDxVOBgRHv6pljh4OO7NVcEaB
HD0MGntk2JdFNczRQ/uVp/a+9aP3ix6mv9ir8kiOHD3sk1PvvPdJFXP0cKiP
WZhZCDl6OORL1Dvls+To4ZodWmknY8jRw7JkLR3PF+To4ZlxFV9qa8nZv/uc
jgi91p+eEz1cfVHCLGseOfs6wBEXygNsyNHDNKMQzbAAcvTQcr+J/uAEcvZz
q4YufdT3PTn7OsDgxe6lTeToofPPUSdjFOn80cOe5dPck8aRo4cPuoZti9En
Zz9Xc/uJ5rEW5Ohh9QsPTXcXcvSwtMnxWPJJcvSwR2f3uZBL5OihrF3e2WkJ
5Ohh4bFVpctekKOHwgxZmfRCcvSwXsq98tJ3cvRQZVH4J/tGcvRw7/zyUP0u
cvQw/vWZkUpSNM/ooffCTNv1cuTooUbdgVnTFcnRQ1c/A7nzSuTo4bgs+7RW
bl/Qw11nan5u70WOHko3VIS8kiBHD0enbvgZ1ErPjx4K4vQK03+Ro4dPos+r
anwgRw+naWivGpdGjh5uSlBx/XKFHD10kK3eVOFNjh4e69jfXGBJjh6WR/zt
XTiNHD10PHxc7IJUjfD3//07OOvb716ZH/076pijbxFLzg2I+0uOvi2pifSr
riFH365YRpsmF5Gjb+ee/z54LoEcfRsycfutzY7k6NtEvyB7Pyly9G3rMVdb
NY9a5ujb+4zaF2HN9L7Qtz5XFhUGuZGjb0f9LuvpapKjb+H99qttFSdH33q9
SLpk2lLNHH0LSbH0msadJ/p2b4za32Xq5OjbVpMbaUv1ydE3gyNlDsdtyNE3
ky8l68b6k6NvfYPbVPzvkqNvCvt+7XTNI0ff9q+TDjlaR46+yZlP+P1Jhs4T
fVutG70zbTg5+7nlbp79sqaTo28LnFoT/iwjR9+uvkm19jInR9/U4tNrFezJ
0TeNUt3YhYfI0bf2K8KoZX7k6Nt9U+e03eHk6FvfbS/UV98gR9/qHO/PUUwk
R98M96/TevKEHH2TtKrWls0mR9/qdqjeVcwjR9+qT8msef6BHH1L/bROrbSY
nP1cvr7iul5l5Oibp/QkY4+v5Ojb69037kZyjr75CiTPdHCvg74Z6ZxYvLCE
HH3TDrqpu5h7TvTNaH7rW9lccvStyko2qW86OfoWfzKzcFoSOfp2pOLd7ZVX
ydG3Uo8xwU8DyNG3ZYExRRau5OibkcKj8iIzcvRt9QmpM6dm1eLrElmvwhZo
FvyvY3D06u+O9bdj/pKjV+rGP6ca1ZKjVwcHF0r9/EyOXr2/42z/5hE5ejXw
9tzMIUfJ0atpk2r8Bk4nR6++tQwv0/hIz49eLfPJqez0IEev1Jo/bu6eTo5e
SQe3y6nIk6NXW/wmhKhLkKNXv0pCB9+SJUevhs9de3HGUHL06rS2UpDqTHL0
6pq+j98TY3L0asfWLOF4B3L0asJVX/XnvuToVXF433bRKHL0qtXo5oSmRHL0
KkfjeWZkFjl6ZThv2tGVReTolWFgVt/JleTo1Y0Vuh4P/pCjVyPSX/z4I0b3
hV5tCLAf3aM3Ofs5jerZwUb9ydErpa0RNinDydGrwKSNYnqa5OiVRfdBrcGT
yNGrjLMtNuN1yNGrQ8uL5m3RI0evOuQmq3xZQI5ezTuUq3pgCTl6Fdts/UZz
BTl6NaBumGSDATl6Ze27zuneanL06sy0cQEWhuTolb6eU2gl9/HoVcCLXWlj
V5GjVxmu8436c8+DXtVqTbh0dDE5euU79cm++fPI0asNwUFjZswkR69etcco
9tcmR6/m2ERtCVcjR6/u7fCXP6tMjl5drgsfepqbE/Tq4eHdkpo1tfg+Dtaf
GcHtf+f/1yU4+/sxhSD7a3/J0R+7s4f2TK8jR3/y9ie71HwhR3/8FiQERqaT
oz/XTmSJVIWRoz+nJKXqSzeToz9ZpZOXFo8iR3/aBR6X9jbQ+0J/wq6XDzn4
mhz92e7QddrvMTn6YzVm9BOHNHL0J3+FpuDBK3L0R+t4iYNjCTn645ah+rC9
nhz90awpNHORoOdHfw7MmaEk2o8c/Vk71KiobCQ5+rPzXkp+5WRy9OfrxQyT
HQJy9MdTLOXV9mXk6M8sow8rexuToz/2eX9PhG0kR396HjDQX7SFu5d//fEf
7fpKZRc5+7macqtzJzmSoz9aJiuPv9pLjv70lT01J/sAOfrje68qcr4nOfu9
GGeV1yz2Jkd/isObI54dJ0d/hgye5P/4BDn6053m8XrSaXL05/onucOK/uTo
T2y4/XnTAHL0p6rztmcb5+iP3sKriRWcoz932rXC5DlHf/T6NLRb+pGz7zPd
GnQn7SQ5+nPW87L3cB9y9Ef8ZsvENUfI0Z/aNKXRU93J2b8vDJzhF+1Cjv4c
SLbVWmdLjv4cFNG+MMCKm89//bHfJ6l5bU2dcPP/fV8q68mIoG+h0zrI0ZPf
Jy7JKrWQoydpi0J1C36ToyfHD5eMXFtBjp6M7yuIb8whR08q5lyIeHWHHD2x
OdCZcPEkOfvvL4NoKfHt5OjJqLCP/jHLydGThtvdT2N0ydGTG5Izmzp1yNn3
mY70O3hdQI6ebI+QlTm5lDuffz1xrNO782gtOXqiuD1mmNpmcvTkqMevRBs7
cvTk2FZT44x95OjJwJiJJ8S9yNnPXTRsea3gS46e3Ftl+X14ADl6Mv/Jmpkr
z5GjJ6+fF/e8fIEcPWkanhm27BJ3L/96EinV0MvhCjl6EuF0YK3sdXL05Nxx
bemJseToycfBnmXyt8nRkxZ1j29HuHlAT+L+Jhy9fI8cPZEY9NTQM4EcPXnT
Uz6lI5EcPbkXG9Y94gE5eqJ7YZKwkXP05O0QN4FJMjn7Pq/B5wcZco6enBBc
NivkXgc9yVaWO/k2iRw9+fF48+o53HOyn7s42clS4j43V/96sv5lV4oMdz7o
yYPEiuEL4sjRk51Xeww8FkOOnqTuU/kRF0WOnsi1X9gSHkaOnvTeemB276A6
/BwM1oeMrWeKLTvI0Yf4HinRpS3k6MMIz+x40UZy9KFuxM7xGyrJ0YfwlrIs
tyJy9OGHSO2hlnRy1odnVr2kb5OjD3G3iytbQsnRh22aKl8XnSZHH3SOF+rd
Ok6OPggf1C8y9yVHH8JLJpTO9ufO518fNlpvl1I+R44+uCjO8H14kRx9SH/8
+KTCVXL0oSplbUZ4LDn6UDZ56p6gu+ToQ+o9m6WZSeToQ/jVj6OWPSJHH+yM
BSE6T8jRh6j3x2adfUaOPvxSU1bfl8Hdy78+1AScFtZlkqMPx97tWNznJTn6
ID3ZWvz7K3L0YXnB0njbN+Tow8r4IWHpOeTog6rI/gnFueTog5pDqmTyW3L0
YUnt+3nb8sjRh3G2L/wLOEcfEvoKMsXzuXn41wezGW3xzdzHow89P7xtPsc5
+mA/u9H5F/c86EN1peeqr9zzow93XIob7bj3iz5cc8soOP6am6t/fVj7NcVp
EHfO6INy2MW6Xty9oA8t2Zqqhs/J0Qddh/D1z4Tk6MPs5hNSs1LqhJf/7+di
sX3/pn7gXGoHOfb9wFSFY3Wt5OzrQl3GqO9qJmffR6nVp8uklhz7LtXr9LF+
FeTY9wtNQ9MlCsmx781P92a9zyLHvo+f+G7qAyE59r3Xs/ftkdz7wr4/0Bnr
uSiZHPv+6UXL3vMPybHvg5f7S7/kXh/73qMiIbz3c3Ls+4ddn9TCMsmx7xmb
4zaXvSJn3/f9aat9eC459n1cUrN1jwJy7LtSZNGTv+/Jse8t5SuHuH4kx76X
qTjo3PxEjn3/+fVJhHsxdy//9l12dGmN5Bdy7Hua5ruBRqXk2PcbcUHe1mXk
2Hej/j4588rJse9hq5WvN3GOfTfKDx/o+ZUc+55w1EqpnHPsu/ThpsaB3Pxg
31M2TEnR4hz73qzds0aZc+y7ws2zZS+518e+15s5f17NOfa9t0v5nhDu+bHv
FjntGy5x54B995ZwVLDgzg37fl6hz/CnJdxc/dv3Cdbt8umfybHvaipbPxkW
kbO/37g/V3kNty/Y9+wtb44/+q9v/36OJdtfkYQbhrM7ybG/lpI1QqV2cuyv
e8DC94//krOfQ6Xt5ZXXQI79dZbKSdKoJsf+OsXvazKoIMf+qh0+06ZbTI79
LZIqjd3/gRz7ey3mzrmH78nZz6U88cPwK+fY3xxfHfWH3Otgf+3Way/b+okc
+ysZqL9CpIQc+ytUFy+JKSVnX39Y3jpq1Fdy7O8Lz+N9V38jx/4eWjuoYNEP
cuxvruQokbaf5Njf7bqXX2z5RY79tf3V+iCqiruXf/ubejlR4hp3/thfhT2r
C/fVkGN/m542dmjUkmN/E19MHhrPOfu9bFc8TZTryNnvkdnjEreBc+zv2DH+
xUc5x/6qXDC/GcA59rfthnpvD86xv6tmqles5Bz7W94jTLKVe07sr4XVysHu
nGN/X+XOz//InQP217J6oYco59hfgZLdxEbunLG/IZIL513m7gX7KyK3RLFH
JTn2t3vj3dtK3L1jf1eZup1N+G8vKv/v50KzffT87Z/6vJMc+9imu9FQo4Oc
fZ+FvIVnTis59jGwz9rC03/IsY/DlynbOjeQYx/nPlAX76ghxz7eaZevWf+L
HPvYvd25c8lPcuxjQp9bYUU/yLGP5UEL16/mPh77OMZaZnVoJTn28WBltJVO
FTn2cWvzmdaX1eTYxw5bOT2rWnLs49g73QEf68ixjxNm6YuMrCfHPhaPj+02
4M4H+5gR1NHfoJEc+1h5LEtNo4m7l3/7GLrV+lMp59jHxlvTTzs3k2Mfm4tj
NWs4xz5G3WqQXsHdI/YxNlhqcgDn2McDQ1qsH3OOfWyWLdV7zzn2UcvkZHQh
59jH4x57FqRxjn2s3RupHcQ59vHw9C7l5ZxjH/eJL5j7nXtf2McKkZZkS86x
jyV1OgOTuHPDPq5N6bO6lDt/7OM41fq1H7n7wj7OS03VPM/dL/axRXX/cPnf
dUKF//s9CGy/Houf2begixz7tcDq4LeBneTYrw2elXuOtZNjv063f47a30qO
/XotTKmR/0vOvt6+ZqnHxSZy7JeVirr42wZy7Fd0ldT55npy7NevjoANHZxj
v56WxeZu416Hfb3995Rjuo3k2K9ZWlKZM7nnwX4VG97z0G4mZ/99OvmixJg/
5NivcdH65+S494v9CtK00vrAOfbrt3dddkALOfZrfJBqvwnceWK/nmh5pN/l
HPt1x/3SPI02cuzX9xu5Jzw5x37dvmhZksU59qtVX0lNgrtf9nuH1xoPHsM5
9quuf6ukHufYry3pB7oWco79GpP3aNBMzrFfIxdYiKpyjv2S+TT5VTX3nNiv
gQo2969yjv1Svn/y6yLOsV+zD9Rqv+bODfu1ov2w4iTOsV+SE92P7ebuBfvV
w2enyaH/7vHf7+Vh+/JtZN/b97rIsS9xv6VmfOskx74kbDLvX9pBjn2pqffX
imonx77kuvfQFrSRY1/mai8fVN9Cjn25+OSkshLn2Bdj1fLyFO75sS+mPSfk
f+Yc+9Jn+oyRWtzrYF/UFq4IS+Ac+yL2dvZSo1Zy7Iup6LrltZxjX+I/OFQc
594X9uXd0IfyA7hzwL7cU0+5HsI59mXX2IVr5bnzxL4k6Ocf2MM59mXHh/k6
2ZxjX+al9xfvx90X9uVS/4CE1ZxjX6S7dWU8Oce+7GuIdr3GOfblkcWc1ULO
sS/rL5jtfMU59uWNmpF5DufYl9nPpL4/4xz7smxEwKmbnGNfcm70enWEc+xL
0fIXEcs4x76MType1MWdD/ZFpWWfSQjn2Je5Xtk9VP7zmP/7PW5s/q8N+lnZ
u5sc8y+lPFv3SBc55v958/WPXzrJMf+Z+zatUeMc8684xOOHGfd5Mf+tX0Rk
brSTY/41Pz50ns055l8jwWvuEM4x/1v1I9bocY75v6Qc/dSVc8x/nFmeIJdz
zL+CRMTGydxzYv6Nu+ofnuMc8/8oydm5jXPMv6XJ7ztruXPA/N8QHDt4k3PM
/zC54N0tnGP+jQ3a5s3izh/zHye13taZc8z/TRVR6xjOMf+RfVvl3nKO+Z88
w+1nPeeYfwOViIW9uHnA/M97P36SKueYf43N7xU1OMf8V05f+GMM55j/VyJu
89U4Z1+/cTIptQ/nmH/HV78SW7nnxPw3RB8Rz+Mc83/4pOr80P/83+/lZPM8
yz+lzbibHPPc4uIQ08Z9PObZffF1hWDOMc/6Q8+1juQc89x+erBVYic55tmp
z92raznHPOfWTA8bxjnm2Vizz0wVzjHPDufsxSZxjnmO8R1jsZ5zzLPvYWF4
IOeY58Uq47blcY55Lt+b/7cP974wz5rBuxat4RzzfKHAINqfc/b1AGZ/J2Zx
jnneF348v4NzzLPPaukvY7h7wTyvfGnjsJpzzHPu+oJaJ84xz0urT4/14xzz
vEdPTewK55jnhWunjE3kHPPsKn9FL41zzPP+C8s0MznHPP9+/PJ3NueYZ9Xe
T0/yH495Hn1k9w7+9THP++rHf773n//7PchsPgOGhlX4cs7+fTmgwcCAc/Zz
BhoFRxU4x3zG9J/9600XOeZzwP67/f04x3zmOI0KWM855jPg7JmFepxjPr9+
NR48h3PMp3DzFDFDzjGf/Zt9Ptpyjvn8fPL7jUDOMZ8muw9OfcQ55vNLc1HA
D84xn+21564qcueA+Yy7kpGnwznm80q3+lhLzjGfUhlWP704x3wKpifZXOIc
85kcWJ3/kHPMZ99Toe/fco75nHpHxaCcc8znDdv8WbWcs99rHPXW+A/nmE/f
ozKP2vh5+DefS0P/lHZwzn5vwqBGn07OMZ9XOv4q/s///V54mrdDj57Gc455
K9olKunLOebN49W7HCvOMW+nfK+tmMU55m2AqLFUP84xb7k/5y5p6SLHvE1y
edFUyTnmbaurzL0qzjFvt4xLlNs4x7xN7LOhtBf3eTFvAquYsSM5x7wN+pG0
TcA55s1A5vygjZxj3v5snVqzj3PMW1j107IgzjFvoT3TRt3iHPPWPXpHSDrn
mLf8v/qfPnKOeVuQIOr1i3PM27Pp7iF/OMe8RVrvOcbfO+Zt4nWr792cY97u
//HY2sXPw795c1Bf59XGOebNUyr6afN/Xvt8jJVd/l82P49OHhz9knPMz8w1
aXl3OMf8vLce23Wec8zPe/ULYYc4x/xMDB+jtJNzzI/5K+G1dZxjfm7fn1mz
inPMj4+cxGAjzjE/96OmLtvIOeZHVnNp6Q7OMT9mLtIvXDnH/Nxa5p9xgnPM
T+65VOFFzjE/nzvuTefPB/PzvLD6zDPOMT8BT6/Gv+Mc82MTWOzxjXPMj09a
xIkGzjE/bgr66e2cY34OW97I7+Yc85OW2Dali3PMj9MStVl/+Xn4Nz/69uLh
Vf+5V6G6aYtWK5uHsuTC8cWcYx7uhZkdeMU55iH1vPfuR5xjHoyKzNpjOcc8
nHZ6WHuRc8zDi+ID085wjnnQmCT20Y9zzIPNhy9vAjjHPHwctz75POeYB4fn
V6UvcY556BPgsOcm55gH+6ybq5I4xzxIhxmUPuMc82BqbjIll3PMQ+Q15dLP
nGMe+pgePVHJOeZBKmC/VhPn7OfKft0wuYNz9ucrRdPybs4xD4Ehv9w6Occ8
iCfJG/7v9ZV+DV3ldbKN3a+liYmgknPcb+az/ZolnON+FUPEw/I5x/0mupR6
ZXHOvr5lf4HTE85xv3MXt0Ymc477lW/3/5nIOe43SnGZ1QPOcb+dldvFUznH
/aaMKDJ5yjn7PYw7jSfzz4n7dRxyRfot57jfRRJrF33kHPdb4Lwwooxz9t+D
Z/3dfnHO/vy8IO9AI+fs93SfFHvcxjnut8Ki2bCbc9zv23PHOv+371EdAxf1
qmxn9+V77sTkes5xX66S0pmVnOO+tLbfTCjnHPe1TzWz9RPnuK+LW6yr33GO
+5qUM3DbW85xX3OSr57P4Rz3lTLnxtFcznFf5Tuz/PM5x30dVt/9+z3nuK8e
F4N38c+J+9ridelKKee4r7jGyO5vnOO+SrY2xlVxzn5P9Pw5Ug2c476CDqke
b+Ec96XgqXL2f3s3Vb7fnLMLO9n5v5L/sP4P5zj/9stC03rOcf5a2j99qznH
+d8crNj8g3Oc/91op/yvnLPfg/ZD/H4p5zj/HVee7fjCOc5fJ7G7mnecf+GJ
rg9lnLO/P/nh3c5/Xpy/6Km0X985Z18P9jPL+hfnOP8JQ6d8ruGc/XybV4tT
+PPB+Xt8X/L/zzN9uOLUYVFd7DxfNztea+Uc5zlYVU7Afzz7/m6nng0NnOM8
n2hLptdxjvMMXN73WzXn7N8vnLxu/eIc5/mwPut2Jec4z6t3zv7iHee54c41
lSrOcZ5rrBtt+c+L8/QZOXRzLec4z9JzKvG/OWdffzt5T8X/3q/JlF7jbnR1
s/MZYfHySTvnOB//WaE7Wzlnf79xOnXoX87Z1x9Gan9v4hzns1U5+jP/eXE+
Cupy8+s5x/lMVx3q8ptznM/bzlcevON8dp1xm8q/Ds6n8epEWf7z4nxOBl7e
8L8OO0UfVgyNExHg/aZI9+vfyTn7fv9D2q7tnOP92kz3KmnlHO/31LyRy1s4
x/sVe5tR8IdzvF/xsrgrzZzj/a4oE+tu4hzvV/yQ/i/e8X6T+jcb/e91Ho0T
lfuyQZQ9v37bsj+dnOP5Xf7IFHRwjueXOiR6t51zPL+2S2hgG+d4/h1lKz1b
Ocfz+y8ND2vhnP39alO94v9cMtFdWl1WjD3PsLq7Pl2c43lK7SIedXKO5yls
PVnbwTmeZ8tNjSG8s/+/OBtn9L/3tUKvQ3zHA3r9tJjs2i7O8fpapvpmvOP1
hfMXZP7vec5lunbHbRVnH798tfy0//3/9f8DgSoiLg==
     "]]}, {}, {}, {}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  PlotRange->{{-2.4251365622558967`, 2.4251365622558967`}, {
    0.8065811249805872, 5.571761738536032}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.764299092449728*^9},
 CellLabel->"Out[11]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["150005", "Subsubsection",
 CellChangeTimes->{3.764299121569709*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"asd", "=", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
coefficientsGrid$150005.mx\>\"", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "}"}], "]"}], 
      "&"}], "@", "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{"asd", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "<", "10"}], "&"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.764039147520877*^9, 3.76403916513256*^9}, {
   3.7640472495417137`*^9, 3.764047250283435*^9}, {3.764052030651763*^9, 
   3.764052032358219*^9}, 3.764056016547209*^9, {3.764058747419074*^9, 
   3.7640587845462008`*^9}, {3.7642990299086123`*^9, 3.764299051837421*^9}, 
   3.764299116646922*^9},
 CellLabel->"In[12]:="],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
    0.009722222222222222], Point3DBox[CompressedData["
1:eJxN3Xc41m0fx3FKSxoy0l4aiooGoq5LW0uFomgo0aBQCU0iSUsaQqJIIUKK
FJWRlaQ7hZJSsrM3z30fT5/ze/71HMfrcFx+13l+v++nu4xxJvvXm/YQERHx
6C0i0vPf/73+xq47bFfPRKPyZJ19Tv2EBlkduc/6rBKsFnT03P20R6L09uV6
k//pKzQ1nxPStmotc3z85siMMXf19JgH2Sxa+UhZXLjOeOyK2qiNgl4xx/vK
i/dIzMxLN/g+qa+wyH/B15nSuszx+s4fet0r+k4fj9fvZ354t6B4M3O8/gSJ
+EuKZluZV3ckLm0qEhceV7r2PHr+dkG8ouiAos2iiU5rVhv7Hukj3Hir7K6q
ywbmeJ4B0Y5G7UuNmON5Hlr63u7ntI05nufkjtdekZdMmON5Pl3dM9hSdydz
PM/mxodv+0eaMp/rsmChxoX+QosZtTv62e8S2NxxkrwZJpI4Lzl7u0F6b6Hr
z7Hnin5uYo7nj1hktXxkyTbmeH7f/nmSYdE7mOP5BZKz1HqMptfH86fcWbbM
dZI5czz/WLshKRWhu5nj+VX7zZ86234Pczz/275J+blXyE8Mip9/UlNCeGl0
x89aqT2CDbMlFB90dSfUaazfJTWyt7DrWUSz18JtzPF+R+5pzxm6dSdzvN/o
fhNGysWYMcf7FbU/v3PjeXp9vN/p826ZFv7exxzvd9gGjcaTAZbM8X51vvT6
+uLwfuZ4v/902q1IsiDH++24+3vi3ih6HbzfOd9u9Oyfa8E89Ya6enK5hPDe
w1Uyudv2CVLGSc4ZG9CV8CDyw563Fr2EuzaMvTaoeAdznM/dlYHT8tLNmeN8
FopKOb19Sa+D89mgeWHnwwEHmON87res0DG3tGKO80k9VLRj4j5r5jif6iXH
xkzPJ8f5DLxVHffyJTnOp2lPZPlYITnOp+Ss6J3ue/R5cT5HL8Ztt0ug58T5
ZHxtz5Kdt5+55Pgns8W9Bgif/z5ZMejHPsGcQbILri3pTNiusHH/2QQxYc1h
t/nyTubMcZ76k1fI2+20ZI7zXGeqIjPwghVznKdJRUKRlJsNc5yn2Jhnu8dN
O8Qc52lVK+lgsv4wc5znq+gNopZvyHGemnY552pukuM8s4M/peWV0+vjPE8+
KdabN5Yc5xmq8EnrYgc9J85TTzR9W/c5a+Y4T60hU9USOg8wx3n29T2xv+cE
Oh+DkNkzdZYNFJro7VumnGwuCOgYvkyirD1B7vZnm8WSYsKYRDnd/VssmeP8
j05vaDzwxJo5zr+w0PKmutsh5jj/fE2/XpMqbJnj/BUHTJjw+qsdc5z/8eEK
/T9rOjDH+Y/TMdlrl0SO81/7/Y2760lynP+EmwZjDL3tmeP8jbTm+wqv0OfF
+Tu8v+DpOf4Ic5y/j4TTzjMbDzPH+QvKotaHbDzIHOev+ijr6qs2K+Y4/9C8
GT1a3lowx/kXjyy5VZ9iytx/duQ0z8aBwhFPLcS+BxoIhpSPWevo3pbwTtbo
SLdJT+ExddOrNz5YM8d9bZW3MVw7zJY57iunaO7mac72zHFfFy9c9O7ec4w5
7kvCY+esxRknmOO+5lR+TPCOP8kc93X38fbpjwadYo77inIbtiP5B3087qvx
sq6Vvz457kv+YGD6yI30eXFffXcJt+S50XPivpxXx/ZbYeDAHPel1zZeuX/u
Eea4rwVmYRNuth9ijvuyr5j6+PdxOk/c1yzFmuw5yvuY4776GM0eckTThDnu
S0J9snsfHW3m5c9nTP58Z5AwfdKJ4vq8NQmn8uQNW2a0Jpw5//VoXHQP4ZmN
U79brbYVwHG/za6njHacOsoc91vgfOGItNFJ5rhfDaf+9gpTHJnjfhfohmyr
C3Rijvv9aX87tCzmNHPcb5mu3OyT452Z435/LJEabVtPH4/7jS52bdZfTo77
XVc+2DrGmj4v7jc3tS2g04CeE/db+Or9W90ep5jjfp+PiVJrqj7OHPerOfLM
vR8eDsxxv9IhzeYu/nSeuF+Nz5lWKd+tmbMeWm06cHPLXua430HujxIv/dzC
HPdrluggdWPIDOa43/Nq3Zc+tBqw+/W6s0FykMJg4dLWnvF9Z+1NqE5SMLHM
bU5YILb91KHePYTHqx54now5KoBjHppyd60wuXiKOebhqqzBsIBZp5ljHn4V
BWetP+7CHPOgdMyy8e5eV+aYh7KyK9o52WeZYx4yGrQuzzd3Y4556JzR/vv0
AnLMQ4D3QqWTh+h1MA8PLpZub7ahz4t5EFnnkLV59BnmmIdEpRXKyx2dmWMe
xpgoymWHODHHPLhqbLA1iaLzwTxkW9vGTO86zhzzkKUXYixSZccc8xAuo7d2
06mDzDEPo0a2tW2cbsEc8zC5q/32nKXbmGMecrN+yzf3nMsc8xBTfP+o2hx9
du+Yh9Hvm41L75rRPJjLXFQ+OVgY7aS15EE/64QtkdP3lhxuSmiy/+E800BU
ONQl3P/V1VMCOOZHTrBRbO4VZ+aYn50+6r7Kja7MMT85NRMz0urPMcf8/EgP
Gq/seIE55ke88U/Vq1mXmGN++m5/Wltxhxzz0zF4VlXxNXLMz923vXe+mUSO
+dF1lkp+Nvoic8xPWqbpiRnO55ljfqQtNlV1+dLzY36SP4V6Xvt3DuGYnx3f
it1clc4wx/yoNfW/IvLsNHPMj6/17aTcPo7MMT+vvvW+qml9nDnm56ivq4rg
2hHmmJ+mi+ed6i2smWN+goI/ibqsMGeO+VmwdmWKo7MBc8zPjQ1KKjPFhzPH
/HinSVj8DNZlc4L5aXirHa5wzIT5d8UPEnp5g4ULU3yeLNHYnZDpN+vgpuGN
CWG1pm4V90WE8b+eNa4xcRbAMW9NLsalw//tABzztvqqR1Gv7AvMMW+zGzN/
65lfZo55m9423+Tb5CvMMW+ar5Q64hw8mWPeIrvOmw6Wv8oc8/Zo06MUu2nk
mLdJxT7nJkfS62De/vQ7X2zckxzz1svS5I3bEHoezNsJv8IvcfX0/Ji3wf1H
Z0lEX2KOebNRvlhllk7ngHmrTY9P3CXpzhzzVn5GdmuEylnmmLekkJfPjZe7
MMe8hd3vn69l7MQc8+b2Zl70FIuTzDFvveM7pdy67Zlj3kZs0Ji+zusQc8yb
dNyXukO3DjDHvKkeGrjq+Uxz5pg3lZCL9/bP207z8HfehD3k5yQrGjDHvJ04
MEHUbPJ65i61Hm6Hp0sKa2w2vaodtV4w77zasXfP6xPS3r0btbq5WzD26hiV
xSlnmWM+vxZckrQadIk55nPlboONa5o9mGM+ow6I+epEXWWO+bR8cSlRdsIN
5pjPYgmflKr+N5ljPp90jnPNHuzNHPOpeGr+m23zyTGf/brNRka/oNfBfMqc
Mlne2ubFnP33+/eUZ2O+0fNgPg27TwdtuHidOeazaYxXm/3Ya8wxn1axrz70
v+3JHPOpPcK/qnbEFeaYT9VZIz8reVxmjvm0WnjvcH9xOmfMp0iJ292f8ueZ
Yz4/Jje7z17lxhzzaZHmF/n07BnmmE8ZTZdeg4Y7M8d89iq4ryFX4cgc87kh
vqP/z+6TzDGfOUHqgVWaJ5hjPhUS1aoW6x+jefg7nz5z/zGeZ32UOeazNjU0
p6yBHPNpXNdzYJ+Hx5lPi1nX18tZUqhd5R9fXXZS8MB+vsvS7XUJqi/+mfT6
ZpdAePhTnET0BeaY58T5asF9jK8wxzwft78zOk/9OnPMc+bb7ueq7TeZY55b
twxJ6th/iznm+Xvud/ErfreZY55/Ctf8SN7rzxzzvHPakYuf7pJjnlX8X/S4
aU6OeXa2Vlna3E6vj3kOvC3uWKdPjnkeO61pnMVoP+aYZ/mED/tjDvsyxzw/
Vb893fy5N3PMs+IPH7/3vekcMM/Le9kluBvcYI55/lkzVfAs5hpzzHPequn/
pCpfZY55lr5xOft7Ct0L5nm6TNHWbisP5pjnktjq1PQ1l5ljnltWPMoZr3eJ
Oeb59uAZmRGdNA+YZ4Hi+6O7Cs8zxzyfvFZbqDeVHPNslJ/VvbjGnebh7zwv
GnP0aKoBfTzm+dvQ4LwUffq8mGdB2tXYT3UXmWOetw0bUZ0hT+8r236wy7NC
SeHU/cqe3iEeAjnzhRfjxWoTgkLyZ6gv6BQcV/zu0dmHHPN/RW1y3G7J68wx
/0rXZ7/6qODDHPNv4GIUNufBbebsz7fPw2r8x99hjvm3bLaZmT8nkDnmf8cc
m9vrjgYxx/zn9sr7PLiZHPN///w84aNUcsz/1aC8Aw3ryTH/aU1601su0OfF
/KvUnjtW7HeXOeb/5m7Z4Kz79PyY/7K9R0Wy7gUwx/xLaL9Z3XLfnznmv/LR
2XNf4uh8MP8XMupqzt3zo3v5O//Pzu5a0tDzFnPM/0C1NaIrztP5Y/5jjwzt
ra7szZz1/PS4358kbzLH/KcXPRi7Vd6LOeb/6GPZAcuMbjDH/JuV33meWEDz
gPmf97HkoL0HOeb/z0Tps0onyDH/Puq6indjyTH/AxY4Geuo0ufF/Av2qfhq
d5Bj/qdGDHUfLEvvC/O/a6CV22lHOgfMv1H0t5SYxb7MDwqye36dNURYNHG+
1XdTP4FEyIWZpmtrEmS8itTCi9sFOUteNc7N82SOfWlucZy0dZA3c+zLG6O1
OYGfbjPHvsQYzdxTY3yXOfbFcfP+26KF95hjX7QV/Koqqx8wx76cm/Q2S6Er
lDn2xUGvxWN4ZRhz7EtLmbC0oIQc+yK+d6ZSTyty9uefDzM7trnQ62Nf9sW5
td3aEcIc+xL2MndUwAJ6TuzL4NtiSk/73meOfckNu+WS+oXeL/bFcnXRs9Z/
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
JEevsqKSf4xtec8cvUprG35G2YccvRonof/o5VJy9EqzWdFVtzmHOXolPalz
5bswcvRK68OE95/3kaNXvkZCp++zyNGr80e3WaT0JEevFlrWD4/7SnuHXsmd
fT9kbhI5+/oBwzsiEY/J0avABUq/v0STo1fuEW8VR70kR6/yQwe5uBaSo1eF
knXzhH3pOdGr6H3SBV6LyNEr3fyEvOmXydGr1D9bXuvVkqNXGfPs7fx20Pmj
V61f+v90LydHr1YeHX7upDPdO3ql3O4yfP5smp95Cqf3Sy+WEU6yOq2n0/JB
sM3Gd2XqvIyEhh9DpUO0agQiGRvn+5feYY6+9d4zraXBOZg5+vZ7kZfpK9dH
zNE3icvSmzv9Ypmjb2ujTWefWPCKOfqm4nRlyin/NObo22C1/iXrjXKYo28n
qpwOPyr7hzn6Jjr7VFBQ9mfm6JuseNgww/xC5ujbAqlFP4e8+cocfesVlj1V
o6CIOfqm7b4irnLmN+boW+Zkx+XWc8nRN5v7udpvZcnRt17JiR8nv6LXR99O
H/YodZ1Ljr5FzV15VdOPnhN9k2rdPsG5Bzn6JqFx6cb7XV+Yo2+35X/kfM6h
c0DfjoyaOGX9InL0TfD0TeDrZwXM0TeDU/YTFs4jR982j773wulFPnP0LbFl
lUrYMnL0zali4FbDXLov9K1icZntpB3k6NuxDzvGazV9Yo6+OV7LLzBxJ0ff
ihduURk4mRx9W/rq8BnJlDzm6Nu5549/9N9Ljr5dHSUi+0yWHH0rKswOsU37
yBx9uxCkklPnTI6+bcx4pzFhFTn6NsgwpDJ+JDn6pqN7UHCnjeYcfZv742eN
109y9M3NZGP8xK/k6FvukUnek0rJ0TcdyXXqWiL0edG3+w9+z01QIEfflJtq
ey/cRY6+3Yh479wcTY6+1XbfLtHgzg19q1p3KiH5HDnr29NbeX2l6b7QNxe1
DpfV4eToW5/bRw+mGdOcoG/ja/dPKRpB8/a1amHVXG8ZYfyhH6YVoYWCN1+T
rthuSEx4/2LcpOuulYINpfZKciMfM0cPb70bdybFPJI5evjsj8vchokxzNHD
qzWaVtOmv2COHm5WyjZZ5ZjMHD002juhOfbf/76Ao4c9+88L19v+gTl6eKox
76zWy8/M0UPT1UPzJqt8ZY4efqiWmqMY+405ehg45d4yo+Ri5uihvsrKscu3
f2eOHop0RS54G0vO/r69cLe33Rdy9HBkkGpWdyE5ergqQPal+hty9NBgas3g
kDvk6KG8q4jA4SA5emhYl17gKCRHDyd3VU2xFidHD2Mifz6b8oHeL3ro+D7x
7SQ/cvTwz9bTyk/3kqOHzT/mB35RJ0cPj1wYcP9UP3L0sDi0sX13Pp0/evjM
xND4dgg5erik/Zbn0WPk6GHUyizJNh1y9LDxfj+bR+PJ0cPvWf+0ylUWMUcP
LUd+P6FwlRw9zApwq4oTkqOHnsXz79ysoblCDz9+zs38doecfb9MjemBl8bk
6OG6lYtllowmRw8jJZuei//+QvPwt4dWBnuyfsaRo4czwpdd2XeDHD1cXHFs
8npHcvSwZP9xza9HyNFD0dnO4Q+OkaOHbgV3VOsvkaOHcQXTEm9GkbO/H9tw
Z+TxX+To4azomVM/TKH3ix5+3P9HYrUDOXr4yq3urt8XcvTQO8ym96I1dC/o
YZ/87GFyWeToYdn8vrd1RtI8oIePJ3ap5a0iRw/DC5WOeaSQO0aK7jWskxEm
+Yw/M0wmXyCi8Gi/35vAhAivaWpO2WUCGRmfcPXut8zRz1G2O48OVcpljn4m
9JkdHJqSxRz9XDXAOnbUtWzm6OfDulOlg5rpddDPwA1yUQEXPjNHPzco962c
2vCVOfrZ1DFW1et+MXP0U/vFiZNvZH4wRz+VRi8MPDe6hDn6qeVvr5X7nBz9
HBw7K+qHxE/m6OdElfX7Zi4lRz9bV22MUjUhRz89R0XZt+wmRz+/7O1lO3cf
Ofrp//akzoCd5Ohno8gnM6mN5OjnsW6H+BfLyVk/zezLxeeSo58vDefJRE0g
Rz89Xfs++ilJjn7+1ot836ebzgf9NNeoMVtQRY5+6ugPGfu7gBz9zPD+uTUj
nRz9DD8TnB4bS45+bl64QuFlMDn6KT3aT7rsOjn6qZtuN/K1Czn6qaVu/jH8
EDn6ueq11rS4neTop2GB3KIIXXL0c5FY83mNReTo5/xDqwxUZ5Gjn9l9KgeF
TSBHP30+b18RJ0OOfpZ7L1a/25cc/dyyovpuQQfNM/o5dVSXYY8GcvSzZKpI
6IpKcvRTZr+7Uc9ScvTzZpDjohs/ydHP9MvLRR9yjn4eG7zOVlhGjn5O31TS
+80fcvTTWtLht2obOfrZ+KfIx6sPvV/0s+77uy8r5cjRT7FGL82aqeTo5ybz
tg/yWtx8/u1n00CLRYcNydHPCaeNBy+24eb2bz9nLNuhsN2ZHP3s82TPi3uW
tBfo541zdlsFn+jjJ9sm/nbQlhX6z6ifM3XGO7gAXVW5vdQ3RK6GOboqu6h+
00fXaubo6obny/vMHkMfj642B49v9upBjq72X/shfpwZvQ66qvsuRHvnhirm
6OogHa+8LtFK5uhqbGU/298Py5mjqydUt2xeEl7GHF3VysqY9bP4N3N01ar/
bh0/Y3J09YZhVrPuMHJ0dfr1jqKoX6XM0dXuiomF57PI0dW9ct4vHVPI0dVl
tTaD9ieRo6u7HyhmxGWQo6tfFrm1rc8jR1e9npacki4hR1dXLs5vD2ogR1eL
tys/yRaj94WuDr23aL6ZNDm6GuTb1P2PPDn7PgsVPY35s8nZv9vK/1RWXESO
rk6SEDn4cR05ulr50c1o5zZydDXpz0m5dEtydPWov90z0WPcvfztatyQ7pnm
58jR1TNFn3qEepGjq0VTFlsk3SNHV0M3P36a/5gcXT3T+1L6jtfk6Or52mlb
T7wjR1d7ysdqTP5Cjq4+lTXwOPybHF19X3s6oU89Obpq1ZkW59hBjq5mayWs
8u1Jc46uLrXp9zGjHzm6mr4qfXzvgeTo6pvaMOH0QeToqqKiS6Q85+jqq3Hp
WvoS5Oiqpc9xeePe5Oiq2o5eH/K76PnRVS+fbclTGsjR1akbP09/8YscXT1y
MNIoLI8cXZX/prbtZjI3n3+7KvXr9/j7j8jR1etDNxxc78PN7d+uzpqbfT35
NDm62naifufHvfS+0FVDvTk9N5hTf9BVTyuLQ62rfwve/f/PsayfFYvyJywq
qWGOfnZbL/qaUE6OftqPaFCdX0zO/t15j5j/uxRy9NPhSO0Pi3PkrJ8aXjsi
5cjRz/M7Zl/epl/NHP00kDq8X2FlFXP0s9C/8Ljb3Erm6OcGsRU/Py2rYI5+
hueZqsr6lDNHPy1sa+IWKJOjn7Ene8kr1pUxZ/0c6vRH7RM5+qnnqN19mnP0
MyVR/Oq1UnL0c8ngrxKlovR50U91v/lT908gRz8dd2y8krGMHP20HWx8v2sf
OfppbPk1PuYyOfq58FuEWHM0Ofo5Y55JrPdHcvRzqPPd7KgmcvTTslEwcLMM
nTP6OVrOedMrFXL0c2/bVW83HXL0Uypr4AHHveToZ2Cfl8qRLuTo53fr356b
/cnRz6fPPRQXPyNHP/f4JxWO/0COfn6z+1jXUEGOfr45P6/0bA+aK/TzyZwA
N8Oh5OinkvaVMzunkqOfMst7zLbWIEc/4zTtC4q0ydHPpbYjjqfrk6OfStH1
ch+3kKOf1nG6tb47ydl/1z89ESBnRo5+5qQLkopMydHP670HHSreRo5+bu3f
lv1pIzn6mWc4tcBuBTn6edNOdctXNXL08/dOhT5R48nRz82yWilf+pCjn9bP
w09f/U33gn72PdF3WnASOfppXhsiq+1Djn5Gj5u4NHs/Ofo5L/JOs5GAHP18
9dJuTLZ8Jf5elPUwXETd6GVrDXP0UL7aqPRCEzl6qFWwZ9HjSnL08Hp0flDK
R3L0MNrSb4sglBw9fG/eHVtlSI4ezirO1AvIrGaOHv4Z6nXCYzA5erh+oLdn
4bIq5uhhpqdFbdZFer/oYeaU1a5PBpCjh7fbHi+0Sqxgjh4O71Gure9Fzn5u
ldUiJ4lr5Oihmfvsk07B5OihRORwKdtUcvQwZvnQzz+qydFDqX57Qr3l6DnR
w6MjdI7FLyRHD2d3D+13ei85epig8nqp+2Vy9PDAzQsrJB6To4dPNnh6i30k
Rw9zVMoU3zaQo4ep9b9FrkrS+aOHu+QiIwMUydHDg3l+hh5LydHDJ34iQdJb
ydHD+tytt0wPk6OHbqGP0vzcydHDIm+tmOP+5Ohhre6OwOGPydHDEr2cxump
5OhhWPogzXt55OihReQtPadf5OjhyvMPvdbVk6OH4jsPvp7URY4enqgzyKnt
TfOMHj68sztCfQA5eij6eNUEWUly9NAxaeeDw0PI0cPN5ebDPnH7gh569Mro
XCpBjh4+jBazfCBGjh56Ohy1tmql50cPXWXSJe6Uk6OH/WXn1vb8RI4eTvCv
Dun7khw9NPtgvOxZIDl6aCR750yCMzl6mHOjt174NnL0cN3toa4Rc8nRwxH2
CdYH+1QJ/vz/38FZ38Qqzu6+0lHDHH1zX+m8/GEzOfqmNuzh48oqcvTt+A3/
lKf55OibvpTcmWuPydE380/hR0ysydG3U65DS8/3IUffJqj12DfuRDVz9M1v
mM9Er0Z6X+hbcP12+0sO5OjbO4+8C2pTydG3dg+F49t7kqNvonOF4/RbKpmz
v4e87t5LmTtP9E1LMUZnqTw5+qayKSRu8VJy9M3+1JdpjnvJ0beZkb/a5C+R
o29hJYnWZyPJ0bedX/QPWb8nR9/s1iosOVFDjr5pbfs0/UM/Ok/2dYbDeyrF
jiNH38rnrtROVCVH32bMtV5WtZIcfTv1btSiI1vI2fdBr/Xt1/sAOfpma9DQ
oH6SHH3TqOwcILhIjr7JdEQtN/ElR98yk9VfL3xAzn7u2ad1jaIx5OzPez2y
ekQkkqNvX8KuT25NI0ff+v2++rE7h5z93DOxvlGPPpGjb9f7XErJ/EKOvo17
YaVsWUyOvmXuP3dvzw9y9K3KZaH5Oc7Rt+53rTG/uNdB35S8x+ZP/0qOvl3O
WqehzD0n+vYnzHd+fTY5+iYa1Hy6M4kcfTv64mT7qCfk6NuwliUj5wSRo29V
Y2VmBV8mR9+SBSc9FtuRo2+5I6JvvjAiR9/kruQpHNCoxtclsl5Nfp3z3uPf
jsHRqz1vFsjcbyZHr9paTSPWV5OjV2mBq2VLC8nRq8S0KXpZ8eTo1bzT9adG
uZCjVznHc6SGqZKjV85Cgcykz/T86NUZy1k57SfI0SvR5tM9OlXJ0augoHGn
pQeRo1fhBk+2jBcjR68MEiwDQ8TJ0av2A50v544hR6+WVGXZjphHjl6dfSL1
8IU+OXq10NhMWtGKHL1yHGMQ/MqNHL06WnXaRySAHL1ytipoqYshR696Dh/q
75dGjl5dL8zbvDqfnP2cRkHnP8pl5OjVoay9g540kaNXPteHzWjsQfeFXq2e
HyshNpCc/XnMUax9rRw5evVuzgy1J+PI0SuTKo2xGlPJ0avqY2PPDVUhR69U
NSY3TlYnR69kovRqtgjI0auXnWHf8haTo1etznIiB7XJ0avsezszxq0mR6/s
5Q6N/a1Djl5pT90fEbyOnP1cu4sPmnXXk6NXj3wqZnzhPh69uiU76uzoteTo
1QRjd11x7nnQK431p/Ntl5OjV/vujPk9ayE5etXTdmvW5Hnk6JXW9lvfes8k
R6+et99af24COXo17VWShJM0Oft35+bxcvbcnKBXH8Tkv0lXVeP7OFh/zM+e
Kl/8b5fg6I+29swh95rJ2fehCz2uz60hR3/a2nWsKovI0Z9tf6a5+yWToz8+
NQHNZd7k6M/WbovUoh3k6M+AUoc+hZPI0Z+a4alrDtfR+0J/Lj9XqHPIIkd/
rK9I37rwghz98VFRUrB6Sc5+TmxXH4mnmeToz+4jz8Osv5KjPwmDivd01JKj
P3+WCx1sxej50Z8vSbH+PWTJ0Z935yv/+TGRnP2c2PcXVSpnkaM/+5d+kt4n
JEd/xvvpfty7khz96fXrpoekPjn6kzM0tPmWMTn68/Pp3bgVpty9/O1Pzdyl
SiP2kaM/R5q2is61Jkd/hpyvNs22JWfflyGwCck8So7+tL+cdGrJKXL2e15C
0ty1ncnRn9G7FoxIciVHfwL2XNZ8cY4c/fF/8NhX+QI5+vP5T86+QZfI0Z+k
V/XXNlwmR39mn/fyaOIc/XmzUPVTEefoj6bI4Xf9OEd/XheaLN10kRz9MZ7s
JxnnTo7+BL/P6JI7S47+fNA79GrFaXL0p3yrMHPqcXL0x+rPz0U3DpOjP/mH
zpavtCBHfww+HF8nYcLN59/+GM8yTr+hVyPY8f/vS2U92dn/7vW5HeToSdYJ
x4WSLeToifXIQL3cP+ToSdmltOX6JeToyeOfjT/rssnRk47ZK/IyHpGjJz6d
fdt83cnRE2PHZOce5uToybDBBhOCV5GjJ2MdMoODNcnZ3y+Fh6t2qZOjJ9+6
dVc/EJKjJ34bBxqeX8Gdz9+ezFHIOv1iAzl6crj5sd3EHeToSdvbJ56WluTo
ibuHd2zaEXL0RGnPK5s+juToya3qz3Nk3MjRk0Hl7WmTLpOjJ2Yu9910r5Oj
J1r74p7e9yFnf7+kb3x1nT93L397omAzfbZtIDl60te94dLg++Ts+0zbl2qo
hpKjJ95K9qUy4eToiVythL8bNw/oiZTOu/z7UeToidzsI2NdHpOjJy4rWn6L
PCFnPxdda679pKfk6MlZ5xbrJs7RkzTdg6MNY8nRkxXfE4fpcs6+zzRe0yaP
ex30ZEqDQfQ77nnQk3PC2rOaMeToybhIsyDRaG6u/vak5kKOeG/ufNCTWrHt
RwVh5OjJZvvD9qeCydGTT/1PLbsXQI6eXBd//fKqNzl6knpw3tleV2rwczBY
H2xstXW3dZCjD1b15WlFLeTow8Ka09Ui9eTog17EVrdNZeTow6qQEYsc8snR
hyif7MEtyeToQ3XQ2Kd9wsnRhxrlq8UtN8nRh7vyK4Ytv0COPpytOZT30JUc
fQh836m71Y0cfZhj7LZTcIk7n7996PG8Xy/Z6+Tog4qnqdiLW+Tog3DZwItS
QeToQ2iQ3Ar/UHL2e7hcyo9djyRHHyIeen3OfEKOPhT4bFVaG0+OPrzXHiYv
SCRn/70jE7DG5zU5+iD06bx6PIW7l7992NPjuGfTG3L0IeyPpunwDHL0YVLq
/p1VmeTow8GoydMPvSVHHxpaOrszs8nZz41s+GVV8o4cfXAxvDE6MYccfbBM
j+6yeE+OPnw7MiUpn3P0IcXhsUW/XG4e/vbBZZdcUhv38ezrGb76rPPhHH1Q
vn+mfzX3POhDbFjjkF/c86MPJ88G5B3g3i/6EPZieO7ZLG6u/vah9Ji58wju
nNGHlZmZEhLcvaAPO8+4LFybRI4+SGnEnUxMIEcfdtwfOlE1rkZw9/8/F4vt
u226QU18Bzn2XfOmVGZ1Kzn2/U25zdW9jeTYdyc/NY+N1eTY9/uvzqjJlpBj
3/9sN/EUyyNn30cZopf8MY0c++4l13D8aQI5+/olraM3/bn3hX0XHfvHanks
OfY9ZMekL17PyLHvLqqVuZnc62Pf6/dXPBucRI59P31e+aHvG3Ls++wgV8OS
THLse83rY3m335Fj32NSFiwS/0COfXdrvSvV8ZEc+/5CfVP1sc/k2PcAsYKz
EQXk2HdBefCB01+4e/m7732kfJUkisix7xm2Pd8bfiPHvg9Wnn1jbzE59n3S
9ruTV3wnx74/3WK9tINz7Hug7IUs1x/k2PdgW5uPZZxj34O/Xw8ez80P9v2+
c6ZAlXPs+0edFeNHco59T/5clPCee33su8zL0aoGnGPfI9XjtP2458e+61x6
fz6IOwfsu+HLded3cOeGfVczG/A2+Ss3V3/3PcvBrim1kBz7bjhvV4lePjn2
vXbvu1n63L5g359KtsTE/9u3vz/Hku1vuHl9imYnOfb33Ms5KkPaybG/OsaX
bF40k2N/V1sMFb6vI8f+qka/vTy5khz7e8TaoEanhBz7e8Ro4qT5X8ixv5Vl
bkMdPpFjfwvF+6yJ/0iO/R2XJNhQwjn299D0Zut47nWwv8KMZV/NCsixv2sO
L5nV4ys59tfJyUQi5Bs59tdhi+KjKT/Isb++98LrdX+Ss6/rXr999MpScuxv
q75XUOdvcuyv5Cnpr7vLybG/sQG/BfcquHv5u79n7j0SCeXOH/trH66z+HgV
Ofb31cjWL0rV5Nhfr6Jde2I4x/6K9/7ePbyGHPu7YnhXhAnn2F/hYuORFzjH
/j5wfjbKi3Ps76TZql4unGN/Vd0CrTdwjv0dlr/KToRz7O90wQRTZ+75sb8+
b3+++8adA/Z3znGp4X05x/7+rhy8vpU7Z+xv5eyWnPvcvWB/D5/b0S5eRo79
Xdu75bssd+/Y35cHL4nG/rsXZf//udBsH1eNvLI5qZMc+/jlo13lpA5y7GNL
9ylBdis5+z41I8+I/75eBY59DNQo3H6ojhz7WFmybmhHFTn2cU7gPsXN5eTY
x9+zq/av+E2OfRzq92BhQSk59nGZT7Haeu7jsY9Kri4m3mXk2Ee1UdPuzqsg
xz4qfWuxyqokZ18PPNOwZkc1Ofu56xoSJwtqyNnXb1R+U5lcS85+Tuys1qPr
ufPBPlZsHlO6rp4c+9jY6rNmagN3L3/3Uca93LSEc+xj6jjxY3aN5NjHXeFe
J2s5xz76fRuatY67R+xjwPL07dc4xz72ujWk+zXn2Mf9B5YtKeQc++i9uEeP
r5xjH7OvZ/5J5Rz76OIRIH+Tc+zj9Jb2WbqcYx9vrpa0q+LeF/bRXfV7nRnn
2MeNc3xVX3Dnhn0M8G5TL+XOH/sYpxX8p4i7L+yjdd7pTbe4+8U+Fjlqv5X+
UyMY/P/fg8D268wCKY3FXeTYr3Ux3T7DO8mxXy9mX9U+006O/Xr1Z9VF+1Zy
7Jffkte1g5rJsV93ssRu3Wogx35laWovzqkjx37JmMd2NtaSY79uhbSUdHCO
/bp8adBRc+51sF+/W5bozq8nx35NEiuJ0uCeB/tVbSu8qNxIjv1aObNJdWoT
OfbLYvW6hoHc+8V+9R0UFv+Zc+xXmX2z+5UWcuxXmccfyZnceWK/Rl0IE3vM
OfbLTOCQodBGjv0q1280Pc059itx7y/pLM6xX79lveP7cPeL/VKaJz5ciXPs
l/Pzzv2LOMd+5T01L1jBOfZr7x+rnQLOsV9FURMfj+cc++U5oa6kjntO7Ffq
dKfRYZxjv/RvVV5ewzn797hNuyU+cOfG/v7qxJZuNc6xX4UGjpaHuXvBfqW+
UBt15t97/Pt7edi+TF4tdIvqIse+rDjfs9fPTnLsy8iPph1FHeTYl8X5syYH
tJNjX7xbPswTtpFjX17tuTSvtoUc+/J2W8XKIZxjX/zGK6g8454f+xJ7LEzt
C+fYF+/sj7dmcK+DfdlxtWByDOfYF9205jLdVnLsy7hDy0RrOMe+OBw9GXGW
e1/Yl+7xFxuHcefAvr76tsPDm5xjX4Y93OMwmDtP7IvDQd20Q5xjXzI1vkVl
cI59aTgn/2god1/s96qnl/npcs6+nrCzRd2Jc+xL0o2Y9vucY1/eRzUqvuIc
+7I6Mywkm3Psi8aRM0NyOWf/fi0zeMAbzrEvlZveKUdwjn0Zezq+8izn2JfL
wp4q6zjHvsjszlksxjn25ezX7Id+3LlhX1oyg31G/evB//89bmz+Pcvrcgd2
k2P+P12/Ine6ixzzv/JkWWpRJznm32td97oJnGP+I0fcqDfiPi/7Od6CCxMe
tJNj/sPvv/abzznmP/fMJvvRnGP+t/a5elPAOeb/+fAoKXvOMf+ZeaN83nGO
+b+Xef/1LO45Mf8r62Sm3+Ac8z9CbnxDG+eY/3+WWgo2cueA+S9eFDYylHPM
f2u54rhWzjH/jweE9dfkzh/z//XHvPWHOcf8C82fm93nHPO/Nb9d7T3nmP/k
k08X13OO+V85WLZwADcPmH9P54RBYzjH/L/KUF+mwDnm/5bfFGdFzjH/7lus
9SZxjvkP1fi4fijnmH9Vo4yCTu45Mf/mb/ZFfeQc8589csQJv3/97+/lZPP8
9tOZKv1ucszzUs/nF9u4j8c8i2lb9rrKOeb5fXN660TOMc9z9S7vi+kkxzxL
FKbEbeAc86z2MOfpWM4xz+Hia7YN5Zx9/aTO0JkqnLPfs9lywmMT55jnX0v2
ffTgnM2z87HA95xjnk9WKWhKc+8L8zwxU9xDj3PMc4j6xcZLnGOeT14qcU/j
HPNscF1DtZNzzPO2MTprpnL3wn4u0NiE6nWcY54Xuvy0P8g55jk7ySLzIueY
51WV7i8COcc8b3UwFn/COebZddJ9nVecY55tu0SOpXGOeW4fVH8zk3PMs0cv
W/90zjHPWeHVokmcY55ne6oP+O95/v4eZDafqVscC904x3yWPWtfoMM55lN3
gfSJwZxjPgNsxla87SLHfJrNtR97kXPMZ1DQQL9NnGM+e5mNMxRwjvns4Z42
ewHnmM+HWpGj13POfs6AXmaLBeeYzws/4zM9OMd8qqzsuSmec/Z7x171ji3l
HPN55ZTnO0nuHDCfZRajReZxjvnc1qd78zbOMZ/OARdHOnGO+bybvfmuP+eY
z3MXN0nGc475PKmWMfQ955hPlYTN175zjvlMvf31XDXnmM+OiOWRTZxjPqNb
+im38/OA//5NOHqik3PM59vXzuZdnGM+bygPWvmf//298GzeGnskPo/gHPPW
d51t61nOMW/X1OUzTDjHvCVeMl+jwTnmLfHReQlZzjFv37bPW9/SRY55+/aw
p2g555i3yqbulxWcY94k3vSd1MY5+z2SBi/qJLjPi3nrWaUhmMg55m1y7Ymj
Qs4xb/vjtJSNOce8WfVo7mnHOeZNWiyl9Qrn7OsZ0l4JHnKOedN0MIlK5px9
Pfk7i6bPnGPeDj/b4VvOOebN0bBHVBPnmLc/nat9OznHvE0JcW/q5hzztsNk
/gF+Tti/V3ZYubdxjnm7VNeY3/ivVycpmFjmNtP3n953mZjBOeZHWaZXxiPO
MT+Ky3u23+Ac87PaXNTnJOeYn5nK+jJ7OMf8pCybGmbAOeYnyfV0w1rOMT/L
jn+Q1+Uc83Nnxlx9Y84xPzsu5pTv5hzz8/jxkPd2nGN+3nyXfX+Oc8xPhPHe
jFucY37MK54s4s8H83Ph7lr/15xjfmb/0Hr+D+eYH7/JPc7/5BzzU2C13auO
c8zPplG+79s5x/ycKlL72s055sezy1i1i3PMz3iTnOnN/Dz8nZ9zHxcfrfjX
HfPkDVtmtLJ5yHyrofiFc8xDZ/IS20zOMQ/amsYW8ZxjHi7ttmgP5RzzcHiH
/Z9bnGMexGLPqntyjnnQ05n45SLnmIdIqe+5lznHPHy/J5pwg3PMw41ZZwf6
c455EDvmbh/COfs5Y+erNzzhHPOQvsb+12vOMQ997D3nveMc81AxaPevQs4x
D4N6j/Yo45x9fVTOaNUGzjEPoxbd1ezgHPNgNlxQ1c055sH2/nOXTs4xDwt/
Nej99/pDysesdXRvY/crr+MvKOMc99vLWmXyV87Z721pPeOVyzn7OXIH4hzT
OGf/fzHrwcFEztnvdVp5ISCWc9zv1dbU8hjOcb8vD4uZPuUc92v/52Tv55zj
fi2CBmx+xTnud4BrwFz+OXG/4RWt/XM4x/1WN7qs+Mw57jfL61BAMee4X6nH
mcfLOcf9zlHxOlnPOe7X6Kb76zbOcb9j/v0DUDfnuF+d6IP9//OAjuHLJMra
6esVfYxn1XKO+3rzuza5jHPcl9o/d6K/c4776i52aS3gHPcVHxFR+Q/nbB+/
vTfL4Rz3VbAowSubc9zXxnmSru84x30tLjfzyOUc96UuHF33kXPcl1P1Wkv+
OXFf5+8Y3vvGOe5LqkBT9BfnuK+j48+GV3CO+7osVdy3jnPc1/R7jm4tnLOv
T+iVevO/vZszSHbBtSWd7PzXalZtauIc5+8yZK9BLec4f9lrSm6VnLN/z1qe
3FDKOc7/zatDuT84x/nPHLEw+hvnOH+r7Zp7ijjH+Y+PDa7iHed/uHfa52LO
cf6CQUYd/OfF+d8MvVXxi3Ocv026v2k55zj/4c9aC6s4Z19/fqTPM/58cP6r
R0lt/u88k8dJzhkb0MXO8/1C33utnOM8IycoCfiPx3muyzpVW8c5+36iW0+T
ajjHeWrK1JdUco7ztJB1fFjOOc7z5b2q8DLO6fdIfirnHecZqNA1tIJznOfa
y+st+c/Lfo/kLMcd1ZzjPE1kbSP+cI7zPLglveS/97txtoTig65udj46q2sS
2znH+dQf7NzdyjnOJ890/ZhmznE+tZ9KfzZwjvPZ021VyH9enE9Lbs3CWs5x
Pu9c5Q7/4Rzns1Hh8wnecT5HV3jO4V8H5/N9wDpx/vPifPqopGz+r8M2d5wk
b4aJCPF+jfpOkevkHO/3m3XskXbO8X6TDkz92so53m/Qwe8rWzjH+y3Y6fGh
iXO839kFzoGNnOP9yq8o62rgHO93yn21ct7xfp2eVuv+9zrxiqIDijaLsucX
HbmiqZNzPP+DhuDcDs7Z1590xjxq5xzPf9J7i0cb53j+tLKRp1o5x/MvyrXx
buEcz+/xOkfyP+8Vc7yvvHgP9jyLtW6f7eIcz+NUsCq+k3M8j/2vVdUdnON5
NijUj+Idz7P/+Und/97XakFHz91P6fWTPEOruzjH67/q7trMO17fZPWAN/89
z/U3dt1hu3qyj3+4uGLOf/+//D9kshA/
     "]]}, {}, {}, {}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 360.},
  ImageSizeRaw->Automatic,
  PlotRange->{{-2.4251365622558967`, 2.4251365622558967`}, {
    0.8065811249805872, 5.571761738536032}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewAngle->0.4122601469965066,
  ViewPoint->{1.0009422960488794`, -2.7260389601808597`, 1.7369012947074616`},
  
  ViewVertical->{0.1092855020182263, -0.061412095645060116`, 
   2.480278756457006}]], "Output",
 CellChangeTimes->{3.764299117110606*^9},
 CellLabel->"Out[12]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["225541", "Subsubsection",
 CellChangeTimes->{{3.764300786099881*^9, 3.764300788028304*^9}}],

Cell[BoxData[
 RowBox[{"\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
coefficientsGrid$232254.mx\>\"", "//", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"asd", "=", 
       RowBox[{"Import", "[", "#", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "}"}], "]"}], 
        "&"}], "@", "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{"asd", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "<", "10"}], "&"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.764300753837772*^9, 3.764300768083362*^9}, {
  3.764300813982959*^9, 3.764300907618867*^9}},
 CellLabel->""]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Phases Fucking Suck", "Section",
 CellChangeTimes->{{3.764050538213873*^9, 3.7640505417483177`*^9}}],

Cell[BoxData[
 RowBox[{"<<", "ChemTools`All`"}]], "Input",
 CellChangeTimes->{{3.76404221206851*^9, 3.764042216224091*^9}, {
  3.7640423367964773`*^9, 3.764042337136545*^9}},
 CellLabel->"In[1]:="],

Cell[BoxData[{
 RowBox[{"WavefunctionsObject", ";"}], "\[IndentingNewLine]", 
 RowBox[{"GridFunctionObject", ";"}], "\[IndentingNewLine]", 
 RowBox[{"CoordinateGridObject", ";"}]}], "Input",
 CellChangeTimes->{{3.764042237656479*^9, 3.7640422509837313`*^9}, {
  3.764042334250399*^9, 3.764042417468834*^9}},
 CellLabel->"In[2]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"ugh", "=", 
   RowBox[{
   "Import", "@", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5Old/phaseCorrectDVR.\
mx\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764059326923007*^9, 3.764059334395007*^9}},
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"fuckingFuck", "=", 
   RowBox[{"Apply", "[", 
    RowBox[{"Join", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"{", "2", "}"}], "]"}], "]"}], "&"}], "/@", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{"ugh", ",", " ", "$Failed"}], "]"}], ",", " ", "10"}], 
       "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764059355953578*^9, 3.764059378144663*^9}, {
  3.764059464865101*^9, 3.7640594947906923`*^9}},
 CellLabel->"In[16]:="],

Cell[BoxData[
 RowBox[{"fuckingFuck", "@", 
  RowBox[{"\"\<Plot\>\"", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.764059436297473*^9, 3.764059441118849*^9}, 
   3.7640594728131866`*^9},
 CellLabel->"In[17]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteCases", "[", 
   RowBox[{"ugh", ",", " ", "$Failed"}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.76405933562359*^9, 3.764059349628433*^9}},
 CellLabel->"In[8]:="],

Cell[BoxData["1748"], "Output",
 CellChangeTimes->{{3.7640593424598007`*^9, 3.764059349856317*^9}},
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", "\[IndentingNewLine]", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5Old/newGrids$122664.\
mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764054328714986*^9, 3.7640543333705473`*^9}, {
  3.7640544528187513`*^9, 3.764054454051062*^9}},
 CellLabel->"In[132]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomSample", "[", 
   RowBox[{"huh", ",", " ", "15"}], "]"}], "//", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"#", ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.764054340164034*^9, 3.764054407826329*^9}},
 CellLabel->"In[135]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"fuckThis", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5Old/\
meanShiftedWfSets$99882.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764050553271949*^9, 3.7640505595723457`*^9}, 
   3.764054027187953*^9},
 CellLabel->"In[167]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"fuckThis2", "=", "\[IndentingNewLine]", 
   RowBox[{
   "Import", "@", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5Old/newWfns2$101634.\
mx\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764055267519866*^9, 3.764055273469489*^9}},
 CellLabel->"In[139]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"gbits", "=", 
   RowBox[{"fuckThis2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", " ", "All", ",", " ", 
      RowBox[{";;", "2"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764055365628327*^9, 3.76405537738731*^9}},
 CellLabel->"In[149]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Round", "[", 
    RowBox[{"gbits", ",", " ", 
     RowBox[{"10.", "^", 
      RowBox[{"-", "2"}]}]}], "]"}], "//", "DeleteDuplicates"}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.764055378853532*^9, 3.764055394754924*^9}},
 CellLabel->"In[151]:="],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.764055386744611*^9, 3.764055395976549*^9}},
 CellLabel->"Out[151]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomSample", "[", 
   RowBox[{"fuckThis2", ",", " ", "15"}], "]"}], "//", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"#", ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.764055274768529*^9, 3.764055307708406*^9}},
 CellLabel->"In[147]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"wfBullShit", "=", 
   RowBox[{"Join", "@@", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"fuckThis", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", "$Failed"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7640505746455603`*^9, 3.764050628187394*^9}, 
   3.764050757689228*^9},
 CellLabel->"In[168]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"wfBullShit", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "@", "\"\<Points\>\""}], "//", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"#", ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.764050900384954*^9, 3.764050921167137*^9}},
 CellLabel->"In[169]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5Old/coefficientsGrid$\
141990.mx\>\"", "]"}], "//", "ListPointPlot3D"}]], "Input",
 CellChangeTimes->{{3.764058716148267*^9, 3.764058720507332*^9}},
 CellLabel->"In[214]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["Wavefunction Shit", "Section",
 CellChangeTimes->{{3.764295221637841*^9, 3.7642952244375677`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fffufufuasd", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
phaseCorrectDVR.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764297546973599*^9, 3.764297554295789*^9}},
 CellLabel->"In[84]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fffufufuasd", "//", "Head"}], "//", "Head"}]], "Input",
 CellChangeTimes->{{3.764297712703355*^9, 3.7642977206668873`*^9}},
 CellLabel->"In[86]:="],

Cell[BoxData["getPhaseCorrection"], "Output",
 CellChangeTimes->{{3.764297717992037*^9, 3.764297720919911*^9}},
 CellLabel->"Out[86]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"r1r2s", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"$ide", "@", 
     RowBox[{
     "\"\<Path\>\"", "[", "\"\<results/H5Old/r1r2Wavefunctions.mx\>\"", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764295309732671*^9, 3.764295311724114*^9}, {
  3.764295363438566*^9, 3.764295396627261*^9}},
 CellLabel->"In[17]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r1r2s", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.764295400795659*^9, 3.764295405834607*^9}},
 CellLabel->"In[19]:="],

Cell[BoxData["Association"], "Output",
 CellChangeTimes->{{3.764295403954047*^9, 3.764295406046933*^9}},
 CellLabel->"Out[19]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"extrapolatedPotential", "//", "DownValues"}]], "Input",
 CellChangeTimes->{{3.7642955101874638`*^9, 3.764295527093075*^9}},
 CellLabel->"In[29]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r1r2s", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7642955707043867`*^9, 3.7642955716728287`*^9}},
 CellLabel->"In[31]:="],

Cell[BoxData["3200"], "Output",
 CellChangeTimes->{3.7642955719718447`*^9},
 CellLabel->"Out[31]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Keys", "[", "r1r2s", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "//", "DeleteDuplicates"}],
   "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7642955848970823`*^9, 3.764295590263081*^9}},
 CellLabel->"In[32]:="],

Cell[BoxData["80"], "Output",
 CellChangeTimes->{3.7642955905956163`*^9},
 CellLabel->"Out[32]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cgo", "=", 
   RowBox[{"CoordinateGridObject", "[", 
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{"Sort", "@", 
       RowBox[{"Keys", "[", "r1r2s", "]"}]}], ",", " ", "First"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76429551609046*^9, 3.764295614430135*^9}, {
  3.764295777950529*^9, 3.764295781028256*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"<<", "SpectrumScriptPackage`"}], ";"}]], "Input",
 CellChangeTimes->{{3.764295774484509*^9, 3.764295784718439*^9}},
 CellLabel->"In[55]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pick", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Keys", "[", "r1r2s", "]"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"UnitStep", "[", 
     RowBox[{
      RowBox[{"10", "^", "8"}], "-", 
      RowBox[{
       RowBox[{"averagedPot", "[", 
        RowBox[{"r1r2s", ",", " ", "1"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "1"}], "\[IndentingNewLine]", "]"}], "//", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"#", ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.76429587967904*^9, 3.7642959943162603`*^9}},
 CellLabel->"In[72]:="],

Cell[BoxData[
 RowBox[{"meh", "=", "\[IndentingNewLine]", 
  RowBox[{"Catch", "@", "\[IndentingNewLine]", 
   RowBox[{"extrapolatedPotential", "[", "\[IndentingNewLine]", 
    RowBox[{
    "cgo", ",", "\[IndentingNewLine]", "r1r2s", ",", "\[IndentingNewLine]", 
     "2"}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.764295301139359*^9, 3.764295306684415*^9}, {
  3.764295504483061*^9, 3.764295507641102*^9}, {3.7642955469501953`*^9, 
  3.764295547590393*^9}, {3.7642956161101847`*^9, 3.764295626278084*^9}, {
  3.764295715191284*^9, 3.764295721209362*^9}, {3.76429578861477*^9, 
  3.764295790485709*^9}, {3.764295843582962*^9, 3.764295846515069*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"wat", "=", 
   RowBox[{
   "Import", "@", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
noQuantaWfns.mx\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7642996055268297`*^9, 3.764299610862043*^9}},
 CellLabel->"In[16]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"fuuuuuck", "=", 
   RowBox[{
   "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
goodSparseOneQuantum.mx\>\"", "//", "Import"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764305167968074*^9, 3.764305194717025*^9}},
 CellLabel->"In[47]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"fuuuuuck", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{";;", " ", ";;", " ", "2"}], ",", " ", 
     RowBox[{";;", " ", ";;", " ", "2"}]}], "]"}], "]"}], "//", 
  "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.7643051967911797`*^9, 3.76430521230816*^9}},
 CellLabel->"In[48]:="],

Cell[BoxData[
 RowBox[{"//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.764305167968074*^9, 3.764305194717025*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fucksad", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
extrapCoeffs$2154845.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7643052406206837`*^9, 3.7643052450755653`*^9}},
 CellLabel->"In[49]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
extrapCoeffs$153881.mx\>\"", "\[IndentingNewLine]", "]"}], "//", 
  "ListPlot3D"}]], "Input",
 CellChangeTimes->{{3.764306647668489*^9, 3.764306650876285*^9}},
 CellLabel->"In[54]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
extrapCoeffs$109609.mx\>\"", "\[IndentingNewLine]", "]"}], "//", 
  "ListPlot3D"}]], "Input",
 CellChangeTimes->{{3.7643052406206837`*^9, 3.7643052450755653`*^9}, {
  3.764305300190538*^9, 3.764305307533052*^9}, {3.7643065629620743`*^9, 
  3.764306563725464*^9}},
 CellLabel->"In[53]:="],

Cell[BoxData[
 RowBox[{"fucksad", "//", "ListPlot3D"}]], "Input",
 CellChangeTimes->{{3.764305245832519*^9, 3.764305250786644*^9}},
 CellLabel->"In[51]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"fuck", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
extrapCoeffs$109610.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76431272915926*^9, 3.7643127321417713`*^9}},
 CellLabel->"In[80]:="],

Cell[BoxData["fuck"], "Input",
 CellChangeTimes->{{3.764312733239073*^9, 3.7643127338221607`*^9}},
 CellLabel->"In[81]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["asd", "Section",
 CellChangeTimes->{{3.7643395709741096`*^9, 3.7643395711338797`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{
   "Import", "@", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
oneQuantumWfns.mx\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7643395755576973`*^9, 3.764339579918195*^9}, 
   3.76433970773656*^9, 3.764362090202407*^9, {3.764429935904755*^9, 
   3.7644299381496468`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"noquant", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
noQuantaWfns.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7643610624372463`*^9, 3.7643610798255053`*^9}},
 CellLabel->"In[52]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "@", "\"\<Energies\>\""}], "-", 
  RowBox[{
   RowBox[{"noquant", "[", "\"\<Energies\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.764339586304408*^9, 3.764339590382264*^9}, {
  3.764361083867354*^9, 3.76436109239292*^9}},
 CellLabel->"In[64]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bbbb2", "=", 
    RowBox[{
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
goodSparseOneQuantum.mx\>\"", "//", "Import"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.764339717840444*^9, 3.764339722790234*^9}, {
  3.764339754230865*^9, 3.764339785414645*^9}, {3.7643620515525084`*^9, 
  3.764362077258*^9}, {3.764368472692058*^9, 3.764368489968799*^9}, {
  3.764430347953513*^9, 3.764430372199472*^9}},
 CellLabel->"In[3]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", "2"}], ",", 
      RowBox[{"m", "=", "2"}], ",", " ", 
      RowBox[{"s", "=", "1"}], ",", 
      RowBox[{"d", "=", "3600"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"bbbb2", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"d", "*", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}]}], ";;", 
        RowBox[{"d", "*", "n"}], ";;", "s"}], ",", " ", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"d", "*", 
          RowBox[{"(", 
           RowBox[{"m", "-", "1"}], ")"}]}]}], ";;", 
        RowBox[{"d", "*", "m"}], ";;", "s"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.7643663822538147`*^9, 3.764366508905078*^9}, {
   3.764366603946204*^9, 3.7643666059995317`*^9}, 3.7643666571054363`*^9, 
   3.7643679854514837`*^9, 3.764430381446928*^9, {3.764430426530644*^9, 
   3.764430481158867*^9}},
 CellLabel->"In[4]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"bbbb", "=", 
   RowBox[{
   "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/debug/\
goodSparseTwoQuanta.mx\>\"", "//", "Import"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764366360782484*^9, 3.764366371344337*^9}, {
   3.764366671001453*^9, 3.7643666776803417`*^9}, {3.7644669072575006`*^9, 
   3.764466909295389*^9}, 3.7644756894960737`*^9},
 CellLabel->"In[2]:="],

Cell[BoxData[
 RowBox[{"bbbb", "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.764475761563876*^9, 3.764475764430854*^9}},
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", "3"}], ",", 
      RowBox[{"m", "=", "2"}], ",", " ", 
      RowBox[{"s", "=", "1"}], ",", 
      RowBox[{"d", "=", "3600"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"bbbb", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"d", "*", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}]}], ";;", 
        RowBox[{"d", "*", "n"}], ";;", "s"}], ",", " ", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"d", "*", 
          RowBox[{"(", 
           RowBox[{"m", "-", "1"}], ")"}]}]}], ";;", 
        RowBox[{"d", "*", "m"}], ";;", "s"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.7643663822538147`*^9, 3.764366508905078*^9}, {
   3.764366603946204*^9, 3.7643666059995317`*^9}, 3.7643666571054363`*^9, 
   3.7643679854514837`*^9, {3.764430496566114*^9, 3.764430499755356*^9}, {
   3.764447681549924*^9, 3.764447749796342*^9}, {3.764466925066266*^9, 
   3.764466942657189*^9}, {3.764475745994151*^9, 3.764475753348387*^9}},
 CellLabel->"In[4]:="],

Cell[BoxData[
 RowBox[{"\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
extrapCoeffs$156732.mx\>\"", "//", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", "=", 
       RowBox[{"Import", "[", "#", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", 
           RowBox[{";;", "2"}]}], "]"}], "]"}], ",", 
        RowBox[{"Clip", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "]"}], ",", " ", "2"}], 
       " ", "]"}], "//", "ListPointPlot3D"}]}], "\[IndentingNewLine]", "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.7644305818911057`*^9, 3.7644306996298933`*^9}},
 CellLabel->"In[36]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d1", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/d1$\
237746.mx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"d2", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/d2$\
237746.mx\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.764432320401791*^9, 3.764432332520445*^9}, {
  3.764432398590302*^9, 3.764432400276004*^9}, {3.764432481950309*^9, 
  3.764432518138095*^9}, {3.764432553930727*^9, 3.764432555705406*^9}, {
  3.764432588465345*^9, 3.764432589976766*^9}},
 CellLabel->"In[61]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteDuplicatesBy", "[", "\n", "      ", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Pick", "[", 
       RowBox[{"d1", ",", " ", 
        RowBox[{"UnitStep", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"10", "^", "9"}], "-", "10"}], ")"}], "-", 
          RowBox[{"d1", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "]"}], ",", " ", 
        "1"}], "]"}], ",", " ", "d2"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", ".001"}], "]"}], 
     "&"}]}], "\n", "      ", "]"}], "//", "ListPointPlot3D"}]], "Input",
 CellChangeTimes->{{3.764432392964836*^9, 3.764432405099218*^9}},
 CellLabel->"In[63]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Glarg", "Section",
 CellChangeTimes->{{3.764441365578944*^9, 3.764441370702969*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gggg", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
phaseCorrectSCF.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7644413774890347`*^9, 3.76444138105519*^9}},
 CellLabel->"In[41]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gggg", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.764441381995575*^9, 3.764441384929123*^9}},
 CellLabel->"In[10]:="],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.764441385182765*^9},
 CellLabel->"Out[10]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<Chem*`*Wavefunctions*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.76444144606317*^9, 3.764441453451969*^9}},
 CellLabel->"In[23]:="],

Cell[BoxData[
 RowBox[{"WavefunctionsObject", "//", "DownValues"}]], "Input",
 CellChangeTimes->{{3.76444151299339*^9, 3.764441518587688*^9}},
 CellLabel->"In[27]:="],

Cell[BoxData[
 RowBox[{"ChemTools`Wavefunctions`Private`ConstructWavefunctions", "//", 
  "DownValues"}]], "Input",
 CellChangeTimes->{{3.764441470351418*^9, 3.7644414716123257`*^9}},
 CellLabel->"In[24]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gggg", "[", 
     RowBox[{"[", "1000", "]"}], "]"}], "[", "\"\<Wavefunctions\>\"", "]"}], 
   "[", 
   RowBox[{"[", "6", "]"}], "]"}], "@", 
  RowBox[{"\"\<Plot\>\"", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.7644413861286497`*^9, 3.764441410980658*^9}, {
  3.764441582261554*^9, 3.764441613500497*^9}},
 CellLabel->"In[50]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChemTools`Wavefunctions`Private`WFKeyPart", "//", 
  "OwnValues"}]], "Input",
 CellChangeTimes->{{3.764441436798348*^9, 3.764441440692686*^9}},
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.764441438762231*^9, 3.764441441004219*^9}},
 CellLabel->"Out[22]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hmmm", "Section",
 CellChangeTimes->{{3.764443654972063*^9, 3.764443656075033*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r1r2Wavefunctions", "=", "\[IndentingNewLine]", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
r1r2Wavefunctions.mx\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phaseCorrectSCF", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
phaseCorrectSCF.mx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phaseCorrectDVR", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
phaseCorrectDVR.mx\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.764443675276134*^9, 3.764443764474346*^9}},
 CellLabel->"In[17]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"fcc", "=", "\[IndentingNewLine]", 
   RowBox[{"getCoeffPhaseCorrection", "[", "\[IndentingNewLine]", 
    RowBox[{
    "phaseCorrectSCF", ",", " ", "phaseCorrectDVR", ",", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"Keys", "[", "r1r2Wavefunctions", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Range", "[", "6", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", " ", "1", ",", " ", "1", ",", " ", "1", ",", " ", "1", ",", 
       " ", "1"}], "}"}], ",", "\[IndentingNewLine]", "True"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7644436838026*^9, 3.764443689963008*^9}, {
  3.764443750376545*^9, 3.764443785350235*^9}},
 CellLabel->"In[100]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["Frack", "Section",
 CellChangeTimes->{{3.7644652294197483`*^9, 3.764465230211383*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"shittyShit", "=", "\[IndentingNewLine]", 
   RowBox[{"Join", "@@", "\[IndentingNewLine]", 
    RowBox[{"KeyValueMap", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{"Length", "@", "#2"}]}], "]"}], ",", " ", 
          RowBox[{"#2", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "}"}], "]"}], 
       "&"}], ",", " ", "\[IndentingNewLine]", "gg"}], "\[IndentingNewLine]", 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7644651725751867`*^9, 3.764465263556612*^9}},
 CellLabel->"In[722]:="],

Cell[BoxData[
 RowBox[{"<<", "SpectrumScriptPackage`"}]], "Input",
 CellChangeTimes->{{3.76429528687892*^9, 3.764295325147764*^9}, {
  3.764441556183457*^9, 3.76444155647542*^9}, {3.7644685323497553`*^9, 
  3.764468532835794*^9}},
 CellLabel->"In[977]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ListPointPlot3D", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"All", ",", " ", "All", ",", " ", 
            RowBox[{"1.2", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "}"}]}], ",", 
         " ", 
         RowBox[{"ViewPoint", "\[Rule]", "Front"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Import", "[", "#", "]"}], ",", " ", 
        RowBox[{"smoothOutCoeffs", "[", 
         RowBox[{"Import", "[", "#", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Select", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FileNames", "[", "\[IndentingNewLine]", 
        RowBox[{
        "\"\<extrapolatedCo*\>\"", ",", "\[IndentingNewLine]", 
         "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/\
debug/\>\""}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"StringFreeQ", "[", "\"\<Smooth\>\"", "]"}]}], 
      "\[IndentingNewLine]", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{"8", ",", " ", "9", ",", " ", "10"}], "}"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.764468846743681*^9, 3.7644688797993717`*^9}, {
  3.764469452424266*^9, 3.764469455309469*^9}, {3.764469509070656*^9, 
  3.764469515204763*^9}, {3.764470076789537*^9, 3.764470076963832*^9}},
 CellLabel->"In[978]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Tooltip", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPointPlot3D", "[", 
         RowBox[{
          RowBox[{"Import", "[", "#", "]"}], ",", " ", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"All", ",", " ", "All", ",", " ", 
             RowBox[{"1.2", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "}"}]}], ",", 
          " ", 
          RowBox[{"ViewPoint", "\[Rule]", "Front"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "#"}], "\[IndentingNewLine]", "]"}], "&"}], "/@",
      "\[IndentingNewLine]", 
     RowBox[{"FileNames", "[", 
      RowBox[{
      "\"\<extrapolatedCo*\>\"", ",", 
       "\"\</Users/Mark/Documents/UW/Research/H5+/results/H5OldOriginal/debug/\
\>\""}], "]"}]}], "//", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"#", ",", " ", "5"}], "]"}], "&"}]}], "//", "Transpose"}], "//",
   "Grid"}]], "Input",
 CellChangeTimes->{{3.7644668697700043`*^9, 3.764466878089362*^9}, {
  3.764467256323275*^9, 3.764467301338797*^9}, {3.7644674085969067`*^9, 
  3.764467412031496*^9}},
 CellLabel->"In[777]:="],

Cell[BoxData[
 RowBox[{"shittyShit", "//", "ListPointPlot3D"}]], "Input",
 CellChangeTimes->{{3.7644665090782423`*^9, 3.764466511454967*^9}},
 CellLabel->"In[764]:="],

Cell[BoxData[
 RowBox[{"cc", "//", "ListPointPlot3D"}]], "Input",
 CellChangeTimes->{{3.764466075920127*^9, 3.7644660840690393`*^9}},
 CellLabel->"In[763]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cc", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7644659540335712`*^9, 3.764465956572033*^9}},
 CellLabel->"In[740]:="],

Cell[BoxData["3600"], "Output",
 CellChangeTimes->{3.764465956827079*^9, 3.764466072075713*^9},
 CellLabel->"Out[740]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"cc", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.764465890137928*^9, 3.764465894120121*^9}, 
   3.7644659295640097`*^9},
 CellLabel->"In[732]:="],

Cell[BoxData["60"], "Output",
 CellChangeTimes->{3.764465894378716*^9, 3.76446592982957*^9},
 CellLabel->"Out[732]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"cc", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", " ", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.76446589518557*^9, 3.764465928096366*^9}},
 CellLabel->"In[733]:="],

Cell[BoxData["60"], "Output",
 CellChangeTimes->{{3.764465904119011*^9, 3.764465931179599*^9}},
 CellLabel->"Out[733]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}], "&"}], "@", 
   RowBox[{
    RowBox[{"KeySort", "[", "gg", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.7644656162005243`*^9, 3.764465656060073*^9}, {
   3.764465696382688*^9, 3.764465773909951*^9}, 3.764465834098962*^9}]
}, Closed]]
},
WindowSize->{928, 785},
WindowMargins->{{Automatic, 208}, {3, Automatic}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 152, 2, 70, "Section",ExpressionUUID->"afb8eacc-f709-44f4-9b17-4f68539cdc2f"],
Cell[735, 26, 147, 3, 70, "Input",ExpressionUUID->"56584ada-0c97-464b-b21e-5dfd930fe049"],
Cell[885, 31, 254, 6, 70, "Input",ExpressionUUID->"0de3fd91-373b-4112-95de-e62e6023ea1b"],
Cell[1142, 39, 665, 17, 70, "Input",ExpressionUUID->"9e00bcf9-109c-41f7-906d-27ad875410ea"],
Cell[1810, 58, 486, 11, 70, "Input",ExpressionUUID->"c7017b23-c375-4872-89eb-a65cb2ae1c8f"],
Cell[2299, 71, 83, 2, 70, "Input",ExpressionUUID->"58f03ad3-fc5d-44b8-a355-da8ee2609332"],
Cell[2385, 75, 334, 6, 70, "Input",ExpressionUUID->"9010b734-dbce-48c8-a0cc-e8beb99e325d"],
Cell[2722, 83, 204, 4, 70, "Input",ExpressionUUID->"a2140d42-8564-4b55-80df-1de57bfe9ce5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2963, 92, 98, 1, 70, "Section",ExpressionUUID->"01d21bf4-0138-4054-997f-d1c24800acb7"],
Cell[3064, 95, 173, 3, 70, "Input",ExpressionUUID->"bfe2c0a2-3349-4f38-9f19-a679114d211a"],
Cell[3240, 100, 198, 4, 70, "Input",ExpressionUUID->"5aa5672e-875f-41c3-a51a-1af6c23076b3"],
Cell[3441, 106, 331, 6, 70, "Input",ExpressionUUID->"93e1d095-bab0-4e17-ba1d-abb9d53d44fe"],
Cell[3775, 114, 330, 9, 70, "Input",ExpressionUUID->"cecb9c8e-4870-4876-a6fa-ff121d51abd7"],
Cell[4108, 125, 1179, 27, 70, "Input",ExpressionUUID->"da2944a7-ecc7-44df-afc2-71001d063e67"],
Cell[5290, 154, 11397, 260, 70, "Input",ExpressionUUID->"c62546de-3354-434c-982e-2f6d7a95d161"],
Cell[16690, 416, 760, 19, 70, "Input",ExpressionUUID->"463b83e7-8890-4666-a1c7-86ada191cc9b"],
Cell[17453, 437, 676, 19, 70, "Input",ExpressionUUID->"cda151e4-8a7d-43ac-99c4-070a26f511be"],
Cell[18132, 458, 796, 20, 70, "Input",ExpressionUUID->"98e1d66f-1a93-4076-ac84-314ecbf59e78"],
Cell[CellGroupData[{
Cell[18953, 482, 401, 13, 70, "Input",ExpressionUUID->"8cb5f8c8-8bc6-46b4-9ada-31ea43dc978e"],
Cell[19357, 497, 217, 6, 70, "Output",ExpressionUUID->"c557a9c1-f8e2-4fe3-aaa0-dd0c265c5a56"]
}, Open  ]],
Cell[19589, 506, 425, 13, 70, "Input",ExpressionUUID->"60ca9fac-1e08-4c8d-821f-6f9cbd8860e2"],
Cell[20017, 521, 238, 6, 70, "Input",ExpressionUUID->"703149eb-c174-4e5c-8e9e-e4f13ad595b2"],
Cell[CellGroupData[{
Cell[20280, 531, 153, 4, 70, "Input",ExpressionUUID->"8dc942ad-060d-441f-873f-d8e712b8625b"],
Cell[20436, 537, 51647, 863, 70, "Output",ExpressionUUID->"e29d15cc-776e-4320-bf5d-d9866ce3c472"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72120, 1405, 467, 14, 70, "Input",ExpressionUUID->"c3f1b337-6f31-4b58-bbbe-0200ee02eec5"],
Cell[CellGroupData[{
Cell[72612, 1423, 387, 6, 70, "Print",ExpressionUUID->"45bcc89c-6585-4c89-bc47-0a9129047a81"],
Cell[73002, 1431, 345, 5, 70, "Print",ExpressionUUID->"a7d0c6d4-0323-45d2-b0bc-4c78f26f6aad"]
}, Open  ]]
}, Open  ]],
Cell[73374, 1440, 282, 7, 70, "Input",ExpressionUUID->"f407c906-145b-4236-b0d7-6c8df8610cd6"],
Cell[73659, 1449, 270, 6, 70, "Input",ExpressionUUID->"6e72d627-e4a4-4c4b-92fc-b3ecda862e7b"],
Cell[CellGroupData[{
Cell[73954, 1459, 263, 6, 70, "Input",ExpressionUUID->"01e53ca3-f35e-478b-a3fe-10a3b93b10eb"],
Cell[74220, 1467, 165, 4, 70, "Output",ExpressionUUID->"dd2fd872-1cf8-4cd1-b5ef-82bbd751ca1a"]
}, Open  ]],
Cell[74400, 1474, 253, 7, 70, "Input",ExpressionUUID->"56d03095-0f3c-42a5-a4f1-4e61d99f7e29"]
}, Closed]],
Cell[CellGroupData[{
Cell[74690, 1486, 92, 1, 70, "Section",ExpressionUUID->"1b55f23c-69a3-4390-8fe3-8f0d784f7c71"],
Cell[74785, 1489, 309, 9, 70, "Input",ExpressionUUID->"775fb7fd-1b57-4043-b119-8c46c3de722c"],
Cell[75097, 1500, 288, 8, 70, "Input",ExpressionUUID->"fd158943-49d3-44eb-b6cf-bc5a3ddbc9ec"],
Cell[75388, 1510, 447, 10, 70, "Input",ExpressionUUID->"e91b588e-af77-496a-b3a6-b648d76d812e"],
Cell[CellGroupData[{
Cell[75860, 1524, 152, 3, 70, "Input",ExpressionUUID->"08f7f837-555c-4f69-813b-878e98f45471"],
Cell[76015, 1529, 157, 4, 70, "Output",ExpressionUUID->"b1e52549-a84d-4c87-8ceb-61f625ce4e43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76209, 1538, 206, 5, 70, "Input",ExpressionUUID->"2a7a93b3-596f-452d-8930-a96ffd332922"],
Cell[76418, 1545, 146, 4, 70, "Output",ExpressionUUID->"7a3a8f98-09d2-4089-89c5-3636a2a68f48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76601, 1554, 187, 4, 70, "Input",ExpressionUUID->"ae6033b5-4d57-448e-ac06-308fe78f385a"],
Cell[76791, 1560, 118, 3, 70, "Output",ExpressionUUID->"c0f286e7-ecdf-4cd0-81c2-2edbe5d97059"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[76958, 1569, 91, 1, 70, "Section",ExpressionUUID->"5fc7dee0-4d1a-455d-a639-069219d70e1d"],
Cell[77052, 1572, 148, 3, 70, "Input",ExpressionUUID->"75d0e04e-d986-4b05-8948-4d085f5c7c1d"],
Cell[77203, 1577, 287, 8, 70, "Input",ExpressionUUID->"40d602c8-ee64-4778-b967-b573ae6853cd"],
Cell[CellGroupData[{
Cell[77515, 1589, 817, 25, 70, "Input",ExpressionUUID->"ad23b35c-ea8a-4517-9e55-fcd58b7b2479"],
Cell[78335, 1616, 181, 5, 70, "Output",ExpressionUUID->"66e32cef-7d4b-43fd-93b8-2e290ec17efc"]
}, Open  ]],
Cell[78531, 1624, 317, 9, 70, "Input",ExpressionUUID->"e860dc97-b3d7-470a-ab28-d6f9034aafea"],
Cell[CellGroupData[{
Cell[78873, 1637, 251, 6, 70, "Input",ExpressionUUID->"ca9031d5-6f04-42e9-a877-c544bc23b025"],
Cell[79127, 1645, 208, 4, 70, "Output",ExpressionUUID->"4b32aa71-bc10-4f09-a772-6358567dd583"]
}, Open  ]],
Cell[79350, 1652, 224, 6, 70, "Input",ExpressionUUID->"6193fe2c-4606-4a7a-a9ae-cf87b5c9c4c2"],
Cell[79577, 1660, 7252, 169, 70, "Input",ExpressionUUID->"5ba8795f-b0c7-40b0-a9dd-b9dd96db58f0"],
Cell[86832, 1831, 682, 18, 70, "Input",ExpressionUUID->"b1ec69f0-7a8d-44cb-8a25-40dd711d84ac"]
}, Closed]],
Cell[CellGroupData[{
Cell[87551, 1854, 93, 1, 70, "Section",ExpressionUUID->"d70cc9b9-4177-4c1a-8cb5-b9754dab9de7"],
Cell[87647, 1857, 1309, 36, 70, "Input",ExpressionUUID->"5590165f-ce4c-4cd2-adea-daba9c1c3ec1"],
Cell[CellGroupData[{
Cell[88981, 1897, 98, 1, 70, "Subsubsection",ExpressionUUID->"ab1797a5-6427-4793-b1c9-0e20bf3e5cff"],
Cell[89082, 1900, 245, 4, 70, "Input",ExpressionUUID->"1f891314-e61a-4e55-8799-356400c2af60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89364, 1909, 73, 1, 70, "Subsubsection",ExpressionUUID->"a4b116b3-578a-46c1-a32d-c70a5c21a6a8"],
Cell[89440, 1912, 1452, 37, 70, "Input",ExpressionUUID->"993693ea-8b29-4d36-9676-b72c24e5ca6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90929, 1954, 73, 1, 70, "Subsubsection",ExpressionUUID->"c2500b18-c277-47e7-8e67-71453194298e"],
Cell[CellGroupData[{
Cell[91027, 1959, 1478, 38, 70, "Input",ExpressionUUID->"c8fb65d3-d6b5-43d0-a1c1-94dbb6de8955"],
Cell[92508, 1999, 23490, 394, 70, "Output",ExpressionUUID->"14dd72b1-4948-46f6-92d6-6f0679da77de"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[116047, 2399, 73, 1, 70, "Subsubsection",ExpressionUUID->"c3aab38c-f655-42fa-9f0c-9f4ec5855245"],
Cell[CellGroupData[{
Cell[116145, 2404, 1478, 38, 70, "Input",ExpressionUUID->"54cf72db-c73b-41ad-a7fc-a4a8df66a517"],
Cell[117626, 2444, 23732, 401, 70, "Output",ExpressionUUID->"ebc8fd29-e4c8-4f9b-86cb-c4f4f3285bcb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[141407, 2851, 97, 1, 70, "Subsubsection",ExpressionUUID->"d45f39d1-51c6-4bb3-8e5b-5ef61dbf515f"],
Cell[141507, 2854, 1360, 36, 70, "Input",ExpressionUUID->"1e2923c5-c6a1-49cc-885e-7efc6e8cfc54"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[142916, 2896, 106, 1, 70, "Section",ExpressionUUID->"0f2318de-2585-48a9-9af3-245bd3036f19"],
Cell[143025, 2899, 197, 4, 70, "Input",ExpressionUUID->"faf583ee-e81a-400f-aada-7eed4cc8ad88"],
Cell[143225, 2905, 330, 6, 70, "Input",ExpressionUUID->"fb488219-b45d-43cd-82be-1ba5f354269b"],
Cell[143558, 2913, 275, 8, 70, "Input",ExpressionUUID->"7a44c58e-57c3-48fc-8231-e00c89da7d6f"],
Cell[143836, 2923, 597, 17, 70, "Input",ExpressionUUID->"cb8bc76b-b7c8-47ea-9663-430b8fa8357e"],
Cell[144436, 2942, 211, 5, 70, "Input",ExpressionUUID->"368fa053-67a4-4cb6-a461-052c4296e733"],
Cell[CellGroupData[{
Cell[144672, 2951, 218, 5, 70, "Input",ExpressionUUID->"5033379d-672b-419c-9045-e0a8579f2a6e"],
Cell[144893, 2958, 122, 2, 70, "Output",ExpressionUUID->"0f63e5cc-40c3-4068-afb0-27ded764006f"]
}, Open  ]],
Cell[145030, 2963, 358, 9, 70, "Input",ExpressionUUID->"b99e5c59-f0c5-4cee-b286-c5dcfae51c44"],
Cell[145391, 2974, 340, 9, 70, "Input",ExpressionUUID->"9c81aee8-aad0-435d-bc46-785bce468827"],
Cell[145734, 2985, 323, 9, 70, "Input",ExpressionUUID->"8a2432ad-bbd3-4f8d-8e49-96249e30ca5f"],
Cell[146060, 2996, 306, 8, 70, "Input",ExpressionUUID->"3d289859-6d7c-44a0-b51c-464a09f41f03"],
Cell[146369, 3006, 296, 8, 70, "Input",ExpressionUUID->"e43fa260-c849-49f2-a144-1324ab3d8da8"],
Cell[CellGroupData[{
Cell[146690, 3018, 305, 9, 70, "Input",ExpressionUUID->"ccc646db-54a0-477c-9f20-6b463ceb979b"],
Cell[146998, 3029, 119, 2, 70, "Output",ExpressionUUID->"861826af-a213-4e9a-a429-6e9e66ead480"]
}, Open  ]],
Cell[147132, 3034, 351, 9, 70, "Input",ExpressionUUID->"608b1394-fb10-4e0f-b850-ffedefbaf14c"],
Cell[147486, 3045, 370, 11, 70, "Input",ExpressionUUID->"83dc3e05-b7b2-4a0a-b526-c26e39f382aa"],
Cell[147859, 3058, 429, 12, 70, "Input",ExpressionUUID->"926218bf-6733-4cd4-849c-441d7a6d946c"],
Cell[148291, 3072, 282, 7, 70, "Input",ExpressionUUID->"026070c4-5640-4962-94cf-bddeb8317c7b"]
}, Closed]],
Cell[CellGroupData[{
Cell[148610, 3084, 104, 1, 70, "Section",ExpressionUUID->"0d03dd7e-16b1-4276-b524-bd3bad6eb0fc"],
Cell[148717, 3087, 297, 8, 70, "Input",ExpressionUUID->"8684aab9-1fd0-4608-80b5-067a40e74f7a"],
Cell[CellGroupData[{
Cell[149039, 3099, 182, 4, 70, "Input",ExpressionUUID->"c46b0284-ae62-4556-b7c1-fc42b02702ea"],
Cell[149224, 3105, 135, 2, 70, "Output",ExpressionUUID->"fe64487d-d018-42ae-8dfd-5b5ad9dbf763"]
}, Open  ]],
Cell[149374, 3110, 368, 10, 70, "Input",ExpressionUUID->"e34c8eb5-4efa-4565-aad9-088eaacc10d8"],
Cell[CellGroupData[{
Cell[149767, 3124, 147, 3, 70, "Input",ExpressionUUID->"3f67c59c-61ae-4c97-a1ee-259c00e7336b"],
Cell[149917, 3129, 128, 2, 70, "Output",ExpressionUUID->"752bf88f-660e-44aa-b828-6f79c29c60dc"]
}, Open  ]],
Cell[150060, 3134, 171, 3, 70, "Input",ExpressionUUID->"15d26634-faf3-4d9c-a8ff-e8fff25ee5ef"],
Cell[CellGroupData[{
Cell[150256, 3141, 153, 3, 70, "Input",ExpressionUUID->"b4114e84-d0ec-4891-9b01-e06b1717d65b"],
Cell[150412, 3146, 99, 2, 70, "Output",ExpressionUUID->"c09cbd0b-6f76-420a-b025-14e7682066e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150548, 3153, 313, 9, 70, "Input",ExpressionUUID->"96358869-3c34-4831-853d-b0ca26b43cc9"],
Cell[150864, 3164, 97, 2, 70, "Output",ExpressionUUID->"151cd1dc-e6eb-4d34-92c2-d5249477c3d1"]
}, Open  ]],
Cell[150976, 3169, 378, 10, 70, "Input",ExpressionUUID->"f6bc6c53-2052-4006-9e2e-1b184a66286d"],
Cell[151357, 3181, 174, 4, 70, "Input",ExpressionUUID->"693fb622-50a5-4662-9775-1ebc3906ce3f"],
Cell[151534, 3187, 751, 20, 70, "Input",ExpressionUUID->"e43784ea-5463-4627-8e1b-6c46cd35ef0a"],
Cell[152288, 3209, 674, 11, 70, "Input",ExpressionUUID->"d12dadd3-9f80-4368-ba7a-0402a5f3b91b"],
Cell[152965, 3222, 283, 8, 70, "Input",ExpressionUUID->"6aca263e-e0c1-447e-ae80-ed0570a30b7c"],
Cell[153251, 3232, 290, 7, 70, "Input",ExpressionUUID->"1e5d51a3-4a2a-47b4-96e6-65da7d94863d"],
Cell[153544, 3241, 318, 9, 70, "Input",ExpressionUUID->"0b1506fe-75af-4cd3-952b-219b2447718c"],
Cell[153865, 3252, 120, 2, 70, "Input",ExpressionUUID->"36198fda-09f2-4161-b18c-b77577426648"],
Cell[153988, 3256, 302, 8, 70, "Input",ExpressionUUID->"b63ffa0a-330b-4ec4-ada7-69745173ba0b"],
Cell[154293, 3266, 306, 8, 70, "Input",ExpressionUUID->"07c97d41-904c-48ab-a2ea-2f22a5552f10"],
Cell[154602, 3276, 410, 10, 70, "Input",ExpressionUUID->"17ae0168-7d92-43ce-b7b2-e4056a63230e"],
Cell[155015, 3288, 155, 3, 70, "Input",ExpressionUUID->"2993a420-2c58-4353-89bf-2fc0b5de1dad"],
Cell[155173, 3293, 295, 8, 70, "Input",ExpressionUUID->"3ba4b553-d559-4009-8f4e-49956bbed643"],
Cell[155471, 3303, 122, 2, 70, "Input",ExpressionUUID->"41d4509d-25cd-46cf-b26c-91f64e62f7c5"]
}, Closed]],
Cell[CellGroupData[{
Cell[155630, 3310, 92, 1, 70, "Section",ExpressionUUID->"8463bc0a-fb55-473c-a5fa-f763046f0569"],
Cell[155725, 3313, 361, 9, 70, "Input",ExpressionUUID->"ee286885-e8ea-4e73-85b3-0bfee781fd22"],
Cell[156089, 3324, 294, 8, 70, "Input",ExpressionUUID->"3546d61c-7e39-4ff8-9284-62e7d6f7b53e"],
Cell[156386, 3334, 330, 8, 70, "Input",ExpressionUUID->"106c111d-9540-4b4c-9dc2-b1153af970f4"],
Cell[156719, 3344, 499, 11, 70, "Input",ExpressionUUID->"2ed8afb9-d1e8-4f80-9c5b-6854e43230fa"],
Cell[157221, 3357, 1092, 30, 70, "Input",ExpressionUUID->"ac38c597-65ac-49a8-b976-7c767d529972"],
Cell[158316, 3389, 418, 9, 70, "Input",ExpressionUUID->"9c19c1ef-1496-4f42-8d8b-07a7ef08278c"],
Cell[158737, 3400, 151, 3, 70, "Input",ExpressionUUID->"816c7178-48f0-452d-b3c8-08b40975d8da"],
Cell[158891, 3405, 1211, 31, 70, "Input",ExpressionUUID->"77e9b770-0e7a-47e1-95e8-d32976870fab"],
Cell[160105, 3438, 897, 24, 70, "Input",ExpressionUUID->"7d24ef04-d2a6-400d-9560-c29e29a7e6e0"],
Cell[161005, 3464, 653, 17, 70, "Input",ExpressionUUID->"f27a029a-12b7-4f0d-a851-984ab4734f05"],
Cell[161661, 3483, 880, 25, 70, "Input",ExpressionUUID->"d29f79d3-829c-45b7-bfb6-c75b90f24ef6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162578, 3513, 90, 1, 70, "Section",ExpressionUUID->"11d63c40-be83-43ad-b00e-433ce91d8c55"],
Cell[162671, 3516, 291, 8, 70, "Input",ExpressionUUID->"dbcc5cde-7bc9-4088-88dd-be1f142a5774"],
Cell[CellGroupData[{
Cell[162987, 3528, 146, 3, 70, "Input",ExpressionUUID->"2e10e90e-cb0c-4ab7-a206-7daa383d8c98"],
Cell[163136, 3533, 97, 2, 70, "Output",ExpressionUUID->"71a5ac10-5028-49ea-b0e0-f39084e1dec2"]
}, Open  ]],
Cell[163248, 3538, 175, 3, 70, "Input",ExpressionUUID->"e7aacd29-954a-4880-ae60-272003571ed6"],
Cell[163426, 3543, 166, 3, 70, "Input",ExpressionUUID->"3a53f804-39d6-42da-90b5-754bf159ef7f"],
Cell[163595, 3548, 207, 4, 70, "Input",ExpressionUUID->"6a4c7ef0-7695-4197-96a9-0bd00c3adc4b"],
Cell[163805, 3554, 391, 11, 70, "Input",ExpressionUUID->"81cf9074-16f7-46fa-aead-1f60f3cd88e9"],
Cell[CellGroupData[{
Cell[164221, 3569, 191, 4, 70, "Input",ExpressionUUID->"e9102d36-30f0-4c79-89dd-bb8a477e84bb"],
Cell[164415, 3575, 135, 3, 70, "Output",ExpressionUUID->"3b401568-b19f-46f5-8035-5a9f0c615f06"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[164599, 3584, 89, 1, 70, "Section",ExpressionUUID->"b391fbf0-4f87-4c33-9bac-531ada2e864f"],
Cell[164691, 3587, 737, 20, 70, "Input",ExpressionUUID->"a4bd70b6-e71b-4b8e-a012-e05ed6a96ef2"],
Cell[165431, 3609, 770, 17, 70, "Input",ExpressionUUID->"633e1290-c161-40b1-b134-a2444c3b79e2"]
}, Closed]],
Cell[CellGroupData[{
Cell[166238, 3631, 92, 1, 70, "Section",ExpressionUUID->"6cd5f7f2-cfe7-49be-adf0-1057ffa267ea"],
Cell[166333, 3634, 882, 22, 70, "Input",ExpressionUUID->"5f702104-c7d4-4a28-9ebe-7aa6be32da87"],
Cell[167218, 3658, 255, 5, 70, "Input",ExpressionUUID->"414c8ce5-ee2f-482d-af69-27b846ff26b0"],
Cell[167476, 3665, 1741, 42, 70, "Input",ExpressionUUID->"11204659-eb96-4cc8-9b0a-99bd5c924828"],
Cell[169220, 3709, 1329, 35, 70, "Input",ExpressionUUID->"167d900e-4a01-4cf4-ae85-d55506a721ac"],
Cell[170552, 3746, 166, 3, 70, "Input",ExpressionUUID->"00e3092c-0b29-4a42-a3a1-ade093abbd61"],
Cell[170721, 3751, 158, 3, 70, "Input",ExpressionUUID->"afaeb4f3-5661-4091-b9fb-9c10d284247b"],
Cell[CellGroupData[{
Cell[170904, 3758, 149, 3, 70, "Input",ExpressionUUID->"1cf58b4d-c4c5-4fb3-8f71-cd073439769b"],
Cell[171056, 3763, 120, 2, 70, "Output",ExpressionUUID->"2a505380-ea91-48d1-816d-c7bcc8af78ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171213, 3770, 256, 7, 70, "Input",ExpressionUUID->"de4f5002-98b2-4dd9-a27d-16fee1a56f69"],
Cell[171472, 3779, 117, 2, 70, "Output",ExpressionUUID->"b71b79f6-680a-47e8-b7ac-44a94783f8ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171626, 3786, 227, 6, 70, "Input",ExpressionUUID->"01dca4c7-b4db-43ba-b915-cd951882da7f"],
Cell[171856, 3794, 120, 2, 70, "Output",ExpressionUUID->"d1de89ba-031e-408d-a147-ebf234507233"]
}, Open  ]],
Cell[171991, 3799, 708, 19, 70, "Input",ExpressionUUID->"94d32cb4-86cf-4bc9-bcb9-736e927dc55b"]
}, Closed]]
}
]
*)

(* End of internal cache information *)
