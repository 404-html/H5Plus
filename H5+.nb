Notebook[{

Cell[CellGroupData[{
Cell["SpectrumScript", \
"CodeSection",ExpressionUUID->"163dd87f-9881-4b34-85d8-8bbc96770c56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", 
   RowBox[{"\"\<SpectrumScriptPackage`\>\"", ",", " ", 
    RowBox[{"{", "\"\<H5Core`\>\"", "}"}]}], "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"52030416-f317-4967-9405-\
1ea22b892d32"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"loadEnvironment", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"adfdc86f-4855-4f48-ae90-176e08d1cfc0"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Caching / Debugging\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,ExpressionUUID->"ac6f49c5-f904-47b4-8b1b-828a6b186824"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dumpSymbolFile", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dumpSymbol", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cachedLoad", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"debugPrint", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"82a30e1f-d0cb-4f8d-92d3-418844488878"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]r1/r2\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"dae10ee9-d290-49fd-82cf-3a9de070bfff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getR1R2Potential", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getR1R2PotentialMin", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getR1R2Wavefunctions", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"3ecc574e-1378-47ca-a33e-283fc0fd9b5f"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Phases\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"58270e1b-3aec-409d-ae4f-bc9377cf75ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"meanShiftedWavefunctions", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"384650a0-622c-4a71-b977-6038d4fa56b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rephaseThingies", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rephaseWfns", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getPhaseCorrection", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getVectorPhaseCorrection", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"921fab52-9da7-45c3-861b-be552640b51d"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Grids\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"6096ebb5-c174-4590-81db-f6cb78f646f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"b3fd16b2-81b6-4c89-b0e6-199e9d0d511a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Extrap\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ac82bc1c-2047-4149-a16b-08d624380ba8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"extrapolatedFunction", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"e9f2424d-1ded-487c-a319-11b183d3db74"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SCF\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8fa75935-84b0-414d-b031-d0f82a2b8e92"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"scfGrid", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scfWavefunction", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scfCoeffData", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"d008c123-b845-4d65-bb31-fba25533cdb8"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Overlaps\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"7ff7dcd6-cf3d-4403-95bd-559f50956534"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getSCFOverlapMatrix", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"925f2436-b1e1-4a73-857f-3ebb21eb4108"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Wavefunctions\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b95c00a1-1153-4316-befb-e6acd1fe03e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"coupledKineticEnergy", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"averagedPot", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coupledPot", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coupledGrid", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getWavefunctions", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pullProjections", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"95b8a0d5-d546-4968-b335-5f3093ab3a1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getPot", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extrapolatedPotential", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"df32ed1e-8a67-4dd1-a2a1-6fd1ae18a496"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Spectra\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ba0135da-5b55-41bf-b93b-1126da4992f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rebuildInterpolation", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"interpolatedDipoleSurface", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getDipoleVecs", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getTransitionMoments", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getTransitionWavefunctions", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getIntensities", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getFreqs", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"buildSpectra", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"1a3504ac-1479-4710-bb42-251dff6587ae"]\

}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"5735e729-3407-4f8e-931e-\
0748f0341d6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "ChemTools`DVR`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"<<", "ChemTools`Wavefunctions`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"<<", "ChemTools`DataStructures`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"<<", "ChemTools`Spectroscopy`"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", "preload", " ", 
    RowBox[{"because", " ", ".", "mx"}], " ", "can", " ", "do", " ", "weird", 
    " ", "things", " ", "sometimes"}], " ", "*)"}]}], "\n", 
 RowBox[{"CoordinateGridObject", ";"}], "\n", 
 RowBox[{"GridFunctionObject", ";"}], "\n", 
 RowBox[{"WavefunctionsObject", 
  ";"}]}], "CodeInput",ExpressionUUID->"04b61ed4-6532-4a42-9389-567f87e9eef8"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Caching / Loading\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"c3a69715-ad2b-417c-99f0-271d2b110553"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getDumpBase\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"89718322-d497-413b-bb80-1922114fae96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getDumpBase", "[", "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dir", "=", 
       RowBox[{"H5PackageFile", "[", 
        RowBox[{"\"\<results\>\"", ",", " ", 
         RowBox[{
          RowBox[{"StringSplit", "[", 
           RowBox[{"$Context", ",", " ", "\"\<`\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Quiet", "@", 
       RowBox[{"CreateDirectory", "[", "dir", "]"}]}], ";", "\n", "\t\t", 
      "dir"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"39dd43c5-2e19-454d-bcb6-8e2b0f23633f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]dumpSymbolFile\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.760135507705349*^9},ExpressionUUID->"89b47846-a713-412d-9ba5-\
040aa38f5b24"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dumpSymbolFile", "[", "symbol_Symbol", "]"}], ":=", "\n", "\t", 
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"getDumpBase", "[", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"SymbolName", "[", 
        RowBox[{"Unevaluated", "[", "symbol", "]"}], "]"}], "<>", 
       "\"\<.mx\>\""}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dumpSymbolFile", "~", "SetAttributes", "~", "HoldFirst"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"24e13176-60ef-475e-bcae-9a1f597c8599"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]dumpSymbol\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.760135510912756*^9},ExpressionUUID->"4b38895a-4d20-4230-9270-\
f5c467390fe7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dumpSymbol", "[", "symbol_Symbol", "]"}], ":=", "\n", "\t", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"dumpSymbolFile", "[", "symbol", "]"}], ",", " ", "symbol"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"dumpSymbol", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], \
"CodeInput",ExpressionUUID->"5efb5619-565f-4bd3-8cb0-dd7e01ebd5eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]cachedLoad\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.760135545094695*^9},ExpressionUUID->"77a076f3-e01e-4497-9234-\
ea86af1b66c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cachedLoad", "[", 
    RowBox[{"symbol_Symbol", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dsf", "=", 
       RowBox[{"dumpSymbolFile", "[", "symbol", "]"}]}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "dsf", "]"}], ",", " ", "\n", "\t\t\t", 
       RowBox[{"symbol", "=", 
        RowBox[{"Import", "[", "dsf", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"symbol", "=", "expr"}], ";", "\n", "\t\t\t", 
        RowBox[{"Export", "[", 
         RowBox[{"dsf", ",", " ", "symbol"}], "]"}], ";", "\n", "\t\t\t", 
        "symbol"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cachedLoad", "[", "expr_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Function", "[", 
    RowBox[{"Null", ",", " ", 
     RowBox[{"cachedLoad", "[", 
      RowBox[{"#", ",", " ", "expr"}], "]"}], ",", " ", "HoldAllComplete"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cachedLoad", "~", "SetAttributes", "~", "HoldAllComplete"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"61251391-fb67-430e-9a5b-e602a5d2e01c"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]debugPrint\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.760187355719488*^9, 
  3.760187358307583*^9}},ExpressionUUID->"1401d813-d737-4a74-a695-\
51d436ac3d38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$debugMode", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"debugPrint", "[", "a___", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"$debugMode", ",", " ", 
     RowBox[{"Print", "[", "a", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76018736060884*^9, 
  3.760187376144834*^9}},ExpressionUUID->"7bb564cf-70cb-4cf0-9822-\
99e4546e2c23"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Misc\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"73f85fb6-7291-48c2-b065-de159551c01a"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]gridMemberQ\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9fdf7aa5-f34f-46fb-a180-0c00f0310e3d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"_List", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", " ", "Internal`RealValuedNumberQ"}], "]"}], "&"}],
         ")"}]}]}], ",", " ", "range_List", ",", " ", "transf_"}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"tpts", " ", "=", " ", 
        RowBox[{"transf", "@", "pts"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"checker", " ", "=", " ", 
        RowBox[{"RegionMember", "[", 
         RowBox[{"Cuboid", "@@", 
          RowBox[{"Transpose", "[", "range", "]"}]}], "]"}]}]}], "\n", 
      "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{"checker", "/@", "tpts"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"_List", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", " ", "Internal`RealValuedNumberQ"}], "]"}], "&"}],
         ")"}]}]}], ",", " ", "range_List"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"tfunc", ",", "\n", "\t\t\t", "r2"}], "\n", "\t\t\t", "}"}], 
     ",", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "pts", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], ",", "\n", "\t\t\t\t", "2", ",", 
        "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"tfunc", " ", "=", " ", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
             RowBox[{"Transpose", "[", "#", "]"}]}], "]"}], "&"}]}], ";", 
         "\n", "\t\t\t\t\t", 
         RowBox[{"r2", " ", "=", " ", 
          RowBox[{"range", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "2"}], ";;"}], "]"}], "]"}]}]}], ",", "\n", 
        "\t\t\t\t", "4", ",", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"tfunc", " ", "=", " ", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"ArrayFlatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", " ", "0"}], 
                 "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"RotationMatrix", "[", 
                   RowBox[{
                    RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}]}], "}"}]}], 
               "}"}], "]"}], ".", 
             RowBox[{"Transpose", "[", "#", "]"}]}], "]"}], "&"}]}], ";", 
         "\n", "\t\t\t\t\t", 
         RowBox[{"r2", " ", "=", " ", "range"}]}], ",", "\n", "\t\t\t\t", "_",
         ",", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"tfunc", " ", "=", " ", "Identity"}], ";", "\n", 
         "\t\t\t\t\t", 
         RowBox[{"r2", " ", "=", " ", "range"}]}]}], "\n", "\t\t\t\t", "]"}], 
      ";", "\n", "\t\t", 
      RowBox[{"gridMemberQ", "[", 
       RowBox[{"pts", ",", " ", "r2", ",", " ", "tfunc"}], "]"}]}]}], "\n", 
    "\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"_List", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"VectorQ", "[", 
          RowBox[{"#", ",", " ", "Internal`RealValuedNumberQ"}], "]"}], "&"}],
         ")"}]}]}], ",", " ", "range_List", ",", " ", "transf_"}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{
    RowBox[{"gridMemberQ", "[", 
     RowBox[{
      RowBox[{"{", "pts", "}"}], ",", " ", "range", ",", " ", "transf"}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"_List", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"VectorQ", "[", 
          RowBox[{"#", ",", " ", "Internal`RealValuedNumberQ"}], "]"}], "&"}],
         ")"}]}]}], ",", " ", "range_List"}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"gridMemberQ", "[", 
     RowBox[{
      RowBox[{"{", "pts", "}"}], ",", " ", "range"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "[", 
    RowBox[{
    "pts_", ",", " ", "i_InterpolatingFunction", ",", " ", "transf_"}], "]"}],
    ":=", "\n", "\t", 
   RowBox[{"gridMemberQ", "[", 
    RowBox[{"pts", ",", " ", 
     RowBox[{"i", "[", "\"\<Domain\>\"", "]"}], ",", " ", "transf"}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"gridMemberQ", "[", 
   RowBox[{"pts_", ",", " ", "i_InterpolatingFunction"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"gridMemberQ", "[", 
   RowBox[{"pts", ",", " ", 
    RowBox[{"i", "[", "\"\<Domain\>\"", "]"}]}], 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"f4875f6e-d065-4865-8d6a-0c6104588fe6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]nonlinearFitStuff\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1865a74d-d7fe-40ab-be39-2da02d709ea1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonlinearFitStuff", "[", 
   RowBox[{
   "data_", ",", " ", "r_", ",", " ", "form_", ",", " ", "r0_", ",", " ", 
    "c_", ",", " ", "ops___"}], "]"}], ":=", "\n", "  ", 
  RowBox[{"Replace", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"Thread", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"ToExpression", "[", "\n", "        ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\"\<par\>\"", "<>", 
           RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", 
           RowBox[{"form", "[", "\"\<Parameters\>\"", "]"}], "]"}], "]"}]}], 
        ",", " ", "\n", "        ", "StandardForm", ",", " ", "\n", 
        "        ", "Hold"}], "\n", "        ", "]"}], ",", "\n", "      ", 
      "Hold"}], "\n", "      ", "]"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"Hold", "[", "p__", "]"}], ":>", "\n", "      ", 
     RowBox[{"Block", "[", 
      RowBox[{"p", ",", "\n", "        ", 
       RowBox[{"With", "[", "\n", "          ", 
        RowBox[{
         RowBox[{"{", "\n", "            ", 
          RowBox[{"model", " ", "=", " ", "\n", "              ", 
           RowBox[{
            RowBox[{"form", "[", "\"\<Form\>\"", "]"}], "/.", "\n", 
            "                ", 
            RowBox[{"Join", "[", "\n", "                  ", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"form", "[", "\"\<Parameters\>\"", "]"}], "->", "p"}],
                "]"}], ",", "\n", "                  ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Point", "\[Rule]", "r0"}], ",", " ", 
                RowBox[{"Value", "\[Rule]", "c"}]}], "}"}]}], "\n", 
             "                  ", "]"}]}]}], "\n", "             ", "}"}], 
         ",", "\n", "          ", 
         RowBox[{
          RowBox[{"NonlinearModelFit", "[", "\n", "            ", 
           RowBox[{
           "data", ",", "\n", "            ", "model", ",", " ", "\n", 
            "            ", "p", ",", " ", "\n", "            ", "r", ",", 
            "\n", "            ", "ops"}], "\n", "            ", "]"}], "[", 
          "\"\<Function\>\"", "]"}]}], "\n", "          ", "]"}]}], "\n", 
      "        ", "]"}]}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"774d9acf-cdfc-49bc-8522-ce5612567489"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]fitExtrapForms\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8fa81752-d38e-44af-8f79-8fdeb5856729"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fitExtrapForms", "[", "\n", "  ", 
   RowBox[{
   "trueRotSubGrids_", ",", "\n", "  ", "pointSampling_", ",", " ", 
    "fitForms_", ",", " ", "monkeyPatch_", ",", " ", "\n", "  ", "gind1_", 
    ",", " ", "gind2_", ",", "\n", "  ", "ops___"}], "\n", "  ", "]"}], ":=", 
  "\n", "  ", 
  RowBox[{"Block", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{"r", ",", " ", "forms", ",", " ", "\n", "      ", 
      RowBox[{"nl", " ", "=", " ", 
       RowBox[{"pointSampling", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"nr", " ", "=", " ", 
       RowBox[{"pointSampling", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", "      ", "gl", ",", " ",
       "gr"}], "\n", "      ", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"forms", " ", "=", " ", 
      RowBox[{"Through", "[", 
       RowBox[{"fitForms", "[", "r", "]"}], "]"}]}], ";", "\n", "    ", 
     RowBox[{"debugPrint", "[", "\"\<Fitting forms\>\"", "]"}], ";", "\n", 
     "    ", 
     RowBox[{"Map", "[", "\n", "      ", 
      RowBox[{
       RowBox[{"Function", "[", "\n", "        ", 
        RowBox[{
         RowBox[{"gl", " ", "=", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "take", " ", "the", " ", "points", " ", "to", " ", "fit", " ", 
            "on", "the", " ", "\"\<left\>\""}], " ", "*)"}], "\n", 
          "          ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "\n", "  ", "          ", 
            RowBox[{
             RowBox[{";;", 
              RowBox[{"Min", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Replace", "[", 
                  RowBox[{"nl", ",", " ", 
                   RowBox[{
                    RowBox[{"Scaled", "[", "i_", "]"}], ":>", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"i", "*", 
                    RowBox[{"Length", "[", "#", "]"}]}], "]"}]}]}], "]"}], 
                 ",", " ", 
                 RowBox[{"Length", "@", "#"}]}], "}"}]}]}], ",", "\n", 
             "            ", 
             RowBox[{"{", 
              RowBox[{"gind2", ",", " ", "3"}], "}"}]}], "\n", "            ",
             "]"}], "]"}]}], ";", "\n", "        ", 
         RowBox[{"gr", " ", "=", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "take", " ", "the", " ", "points", " ", "to", " ", "fit", " ", 
            "on", "the", " ", "\"\<right\>\""}], " ", "*)"}], "\n", 
          "          ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "\n", "            ", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Min", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Replace", "[", 
                   RowBox[{"nr", ",", " ", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "i_", "]"}], ":>", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"i", "*", 
                    RowBox[{"Length", "[", "#", "]"}]}], "]"}]}]}], "]"}], 
                  ",", " ", 
                  RowBox[{"Length", "@", "#"}]}], "}"}]}]}], ";;"}], ",", 
             "\n", "            ", 
             RowBox[{"{", 
              RowBox[{"gind2", ",", " ", "3"}], "}"}]}], "\n", "            ",
             "]"}], "]"}]}], ";", "\n", "        ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"debugPrint", "[", "\"\<Generating fits...\>\"", "]"}], 
           ";"}], "*)"}], "\n", "        ", 
         RowBox[{"MapThread", "[", "\n", "          ", 
          RowBox[{
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"data", " ", "=", " ", "#"}], ",", " ", 
                RowBox[{"r0", " ", "=", " ", 
                 RowBox[{"#3", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                RowBox[{"c", " ", "=", " ", 
                 RowBox[{"#3", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", 
              "            ", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "data", "]"}], "===", "0"}], ",", 
                 " ", "\n", "              ", 
                 RowBox[{"Throw", "[", 
                  RowBox[{
                  "\"\<?No data @ ``, ``?\>\"", "~", "TemplateApply", "~", 
                   RowBox[{"{", 
                    RowBox[{"r0", ",", " ", "c"}], "}"}]}], "]"}]}], "\n", 
                "              ", "]"}], ";", "\n", "            ", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ListQ", "@", "#2"}], ",", " ", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "linear", " ", "fitted", " ", "model", " ", "vs", " ", 
                    "non", " ", "linear", " ", "model"}], " ", "*)"}], "\n", 
                  "              ", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    "debugPrint", "[", "\"\<Fitting data points...\>\"", 
                    "]"}], ";"}], "*)"}], "\n", "              ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", "data"}], "\[Equal]", "1"}], ",", 
                    "\n", "                ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "single", " ", "data", " ", "points", " ", "are", " ", 
                    "always", " ", "extrapolated", " ", "as", " ", "a", " ", 
                    "constant", " ", "function"}], " ", "*)"}], "\n", "  ", 
                    "              ", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"pt", "=", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], ",", " ", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"pt", ",", " ", 
                    RowBox[{"Length", "[", "#", "]"}]}], "]"}], "&"}]}], 
                    "]"}], ",", "\n", "                ", 
                    RowBox[{
                    RowBox[{"LinearModelFit", "[", 
                    RowBox[{
                    "data", ",", " ", "#2", ",", " ", "r", ",", " ", "ops"}], 
                    "]"}], "[", "\"\<Function\>\"", "]"}]}], "\n", 
                   "                ", "]"}], ",", "\n", "              ", 
                  RowBox[{"nonlinearFitStuff", "[", 
                   RowBox[{
                   "data", ",", " ", "r", ",", " ", "#2", ",", " ", "r0", ",",
                     " ", "c", ",", " ", "ops"}], "]"}]}], "\n", 
                 "              ", "]"}], "//", 
                RowBox[{
                 RowBox[{"monkeyPatch", "[", 
                  RowBox[{"#", ",", " ", "r0", ",", " ", "c"}], "]"}], 
                 "&"}]}]}]}], "\n", "            ", "]"}], "&"}], ",", "\n", 
           "          ", 
           RowBox[{"{", "\n", "            ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"gl", ",", " ", "gr"}], "}"}], ",", "\n", 
             "            ", "forms", ",", "\n", "            ", 
             RowBox[{"(*", " ", 
              RowBox[{"take", " ", "the", " ", "boundary", " ", "points"}], 
              " ", "*)"}], "\n", "            ", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", " ", 
                  RowBox[{"-", "1"}]}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"gind2", ",", " ", "3"}], "}"}]}], "]"}], "]"}]}], 
            "\n", "            ", "}"}]}], "\n", "          ", "]"}]}], "\n", 
        "        ", "]"}], ",", "\n", "      ", "trueRotSubGrids"}], "\n", 
      "      ", "]"}]}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"15290aa5-22dc-4685-b10a-402b4d51d832"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]extraGridVals\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ccf79983-3720-4a90-a3be-de88f1b5a8c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"extraGridVals", "[", "\n", "  ", 
    RowBox[{
    "rotSubGrids_", ",", " ", "trueRotSubGrids_", ",", "\n", "  ", "gind1_", 
     ",", " ", "gind2_", ",", "\n", "  ", "fits_"}], "\n", "  ", "]"}], ":=", 
   "\n", "  ", 
   RowBox[{"MapThread", "[", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", "\n", "      ", 
       RowBox[{
        RowBox[{"{", "\n", "        ", 
         RowBox[{
          RowBox[{"minFit", " ", "=", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
          RowBox[{"maxFit", " ", "=", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "\n", "        ", 
          RowBox[{"ptRaw", " ", "=", " ", 
           RowBox[{"#3", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "gind2"}], "]"}], "]"}]}], ",", "\n", 
          "        ", 
          RowBox[{"goodBounds", " ", "=", " ", 
           RowBox[{"MinMax", " ", "@", " ", 
            RowBox[{"#2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "gind2"}], "]"}], "]"}]}]}]}], "\n", 
         "        ", "}"}], ",", "\n", "      ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"use", " ", "the", " ", "left"}], "-", "and", "-", 
          RowBox[{
          "right", " ", "side", " ", "first", " ", "to", " ", "evaluate", " ",
            "the", " ", "smaller", " ", "and", " ", "larger", " ", 
           "points"}]}], "*)"}], "\n", "      ", 
        RowBox[{"Join", "[", "\n", "        ", 
         RowBox[{
          RowBox[{"With", "[", "\n", "          ", 
           RowBox[{
            RowBox[{"{", "\n", "            ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "get", " ", "the", " ", "points", " ", "off", " ", "the", " ", 
               "grid", " ", "too", " ", "small"}], "*)"}], "\n", 
             "            ", 
             RowBox[{"pts", "=", "\n", "              ", 
              RowBox[{"Pick", "[", 
               RowBox[{"ptRaw", ",", " ", 
                RowBox[{"UnitStep", "[", 
                 RowBox[{
                  RowBox[{"goodBounds", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
                  RowBox[{"(", 
                   RowBox[{"ptRaw", " ", "+", " ", "$MachineEpsilon"}], 
                   ")"}]}], "]"}], ",", " ", "1"}], "]"}]}], "\n", 
             "            ", "}"}], ",", "\n", "          ", 
            RowBox[{"(*", " ", 
             RowBox[{"if", " ", "there", " ", "no", " ", "points", " ", 
              RowBox[{"don", "'"}], "t", " ", "worry", " ", "about", " ", 
              "it"}], " ", "*)"}], "\n", "          ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "@", "pts"}], ">", "0"}], ",", "\n", 
              "            ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "recreate", " ", "the", " ", "triples", " ", "we", " ", 
                "originally", " ", "had", " ", "by", " ", "adding", " ", "a", 
                " ", "constant", " ", "slice", " ", "coordinate"}], " ", 
               "*)"}], "\n", "            ", 
              RowBox[{"Transpose", "[", "\n", "              ", 
               RowBox[{
                RowBox[{"{", "\n", "                ", 
                 RowBox[{
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"#3", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", " ", "gind1"}], "]"}], "]"}], ",", " ", 
                    
                    RowBox[{"Length", "@", "pts"}]}], "]"}], ",", "\n", "  ", 
                  "              ", "pts", ",", "\n", "  ", "              ", 
                  
                  RowBox[{"minFit", "@", "pts"}]}], " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "actual", " ", "extrapolation", " ", "to", " ", "smaller", 
                   " ", "points"}], " ", "*)"}], "\n", "  ", "              ",
                  "}"}], "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"gind1", ",", " ", "gind2", ",", " ", "3"}], "}"}], 
                 "]"}], "]"}], "\n", "  ", "              ", "]"}], ",", "\n",
               "            ", "pts"}], "\n", "           ", "]"}]}], "\n", 
           "          ", "]"}], ",", "\n", "        ", "#2", ",", "\n", 
          "        ", 
          RowBox[{"With", "[", "\n", "          ", 
           RowBox[{
            RowBox[{"{", "\n", "            ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "get", " ", "the", " ", "points", " ", "off", " ", "the", " ", 
               "grid", " ", "too", " ", "large"}], "*)"}], "\n", 
             "            ", 
             RowBox[{"pts", "=", "\n", "              ", 
              RowBox[{"Pick", "[", 
               RowBox[{"ptRaw", ",", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ptRaw", " ", "-", " ", "$MachineEpsilon"}], ")"}],
                   " ", "-", " ", 
                  RowBox[{"goodBounds", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "//", "UnitStep"}], ",", 
                " ", "1"}], "]"}]}], "\n", "            ", "}"}], ",", "\n", 
            "          ", 
            RowBox[{"(*", " ", 
             RowBox[{"if", " ", "there", " ", "no", " ", "points", " ", 
              RowBox[{"don", "'"}], "t", " ", "worry", " ", "about", " ", 
              "it"}], " ", "*)"}], "\n", "          ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "@", "pts"}], ">", "0"}], ",", "\n", 
              "            ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "recreate", " ", "the", " ", "triples", " ", "we", " ", 
                "originally", " ", "had", " ", "by", " ", "adding", " ", "a", 
                " ", "constant", " ", "slice", " ", "coordinate"}], " ", 
               "*)"}], "\n", "            ", 
              RowBox[{"Transpose", "[", "\n", "              ", 
               RowBox[{
                RowBox[{"{", "\n", "                ", 
                 RowBox[{
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"#3", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", " ", "gind1"}], "]"}], "]"}], ",", " ", 
                    
                    RowBox[{"Length", "@", "pts"}]}], "]"}], ",", "\n", "  ", 
                  "              ", "pts", ",", " ", "\n", "  ", 
                  "              ", 
                  RowBox[{"maxFit", "@", "pts"}]}], "  ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "actual", " ", "extrapolation", " ", "to", " ", "larger", 
                   " ", "points"}], " ", "*)"}], "\n", "  ", "              ",
                  "}"}], "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"gind1", ",", " ", "gind2", ",", " ", "3"}], "}"}], 
                 "]"}], "]"}], "\n", "              ", "]"}], ",", "\n", 
              "            ", "pts"}], "\n", "            ", "]"}]}], "\n", 
           "          ", "]"}]}], "\n", "        ", "]"}]}], "\n", "      ", 
       "]"}], "&"}], ",", "\n", "    ", 
     RowBox[{"{", "\n", "      ", 
      RowBox[{
      "fits", ",", "\n", "      ", "trueRotSubGrids", ",", "\n", "\t      ", 
       RowBox[{"KeyTake", "[", 
        RowBox[{"rotSubGrids", ",", " ", 
         RowBox[{"Keys", "[", "trueRotSubGrids", "]"}]}], "]"}]}], "\n", 
      "      ", "}"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"5721da43-95af-4734-8445-c1a36b31bbda"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]extrapFitForms\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1656a57d-b12c-4e27-8ea4-2343ce1fb552"],

Cell[BoxData[
 RowBox[{
  RowBox[{"extrapFitForms", "=", "\n", "  ", 
   RowBox[{"{", "\n", "\t    ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"eh", " ", "fuck", " ", "this", " ", "form", " ", 
       RowBox[{"it", "'"}], "s", " ", "fine", " ", "to", " ", "just", " ", 
       "use", " ", "a", " ", "6"}], "-", 
      RowBox[{
      "th", " ", "order", " ", "polynomial", " ", "to", " ", "fit", " ", 
       "the", " ", "_entire", "_", " ", "potential"}]}], " ", "*)"}], "\n", 
    "      ", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", "\n", "        ", 
       RowBox[{
        RowBox[{"\"\<Form\>\"", "\[Rule]", "\n", "          ", 
         RowBox[{"{", "\n", "            ", 
          RowBox[{
           RowBox[{
            RowBox[{"C", "[", "2", "]"}], " ", "+", " ", 
            RowBox[{
             RowBox[{"C", "[", "1", "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"C", "[", "3", "]"}]}], "*", "#"}], "]"}]}]}], ",", 
           " ", "\n", "            ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"C", "[", "3", "]"}], ">", "0"}], 
            RowBox[{"(*", 
             RowBox[{",", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"C", "[", "2", "]"}], " ", "+", " ", 
                RowBox[{
                 RowBox[{"C", "[", "1", "]"}], "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"C", "[", "3", "]"}]}], "*", "Point"}], "]"}]}]}],
                " ", "\[Equal]", " ", "Value"}]}], "*)"}], "}"}]}], "\n", 
          "            ", "}"}]}], ",", "\n", "        ", 
        RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
         RowBox[{"Array", "[", 
          RowBox[{"C", ",", " ", "3"}], "]"}]}]}], "\n", "        ", "|>"}], 
      "&"}], ",", " ", "\n", "      ", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Form\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"C", "[", "2", "]"}], "+", 
           RowBox[{
            RowBox[{"C", "[", "1", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", "#", ")"}], "^", "4"}], ")"}]}]}], ")"}]}], ",", 
        " ", 
        RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
         RowBox[{"Array", "[", 
          RowBox[{"C", ",", " ", "2"}], "]"}]}]}], "|>"}], "&"}]}], "\n", 
    "      ", "}"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"80996b5e-1a64-45e0-ad19-7618b42345b4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]extrapolatedFunction\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f75d809e-6081-4f9d-8d97-19a85e586abd"],

Cell[BoxData[{
 RowBox[{"extrapolatedFunction", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extrapolatedFunction", "[", "\n", "  ", 
    RowBox[{"fn_", ",", " ", "\n", "  ", 
     RowBox[{"cutOffs", ":", " ", 
      RowBox[{"{", "\n", "    ", 
       RowBox[{
        RowBox[{"Except", "[", 
         RowBox[{
          RowBox[{"_Integer", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0", "<", "#", "<", "1000"}], "&"}], ")"}]}], ",", " ", 
          RowBox[{"_", "?", "NumericQ"}]}], "]"}], ",", " ", "\n", "    ", 
        RowBox[{"Except", "[", 
         RowBox[{
          RowBox[{"_Integer", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0", "<", "#", "<", "1000"}], "&"}], ")"}]}], ",", " ", 
          RowBox[{"_", "?", "NumericQ"}]}], "]"}]}], "\n", "    ", "}"}], " ",
       ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"10", "^", "8"}]}], ",", " ", 
        RowBox[{"5", "*", 
         RowBox[{"10", "^", "8"}]}]}], "}"}]}], " ", "\n", "    ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "\"\<bad values\>\"", " ", "should", " ", "be", " ", "indicated", " ", 
       "by", " ", "larger", " ", "or", " ", "smaller", " ", "numbers", " ", 
       "than", " ", "this"}], " ", "*)"}], ",", "\n", "  ", 
     RowBox[{"pointSampling", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"_Scaled", "|", "_Integer"}], ",", " ", 
        RowBox[{"_Scaled", "|", "_Integer"}]}], "}"}], ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", ".1", "]"}], ",", " ", 
        RowBox[{"Scaled", "[", ".2", "]"}]}], "}"}]}], ",", "\n", "  ", 
     RowBox[{"fitForms", ":", " ", 
      RowBox[{"{", 
       RowBox[{"_Function", ",", " ", "_Function"}], "}"}], " ", ":", " ", 
      "extrapFitForms"}], ",", "\n", "  ", 
     RowBox[{"direction", ":", 
      RowBox[{"First", "|", "Last"}], ":", "First"}], ",", "\n", "  ", 
     RowBox[{"symmetry", ":", 
      RowBox[{"1", "|", 
       RowBox[{"-", "1"}], "|", "None"}], ":", "1"}], ",", "\n", "  ", 
     RowBox[{"def", ":", 
      RowBox[{"DefaultValue", "[", "_", "]"}], ":", 
      RowBox[{"DefaultValue", "[", "Automatic", "]"}]}], ",", "\n", "  ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "  ", "]"}], ":=", "\n",
    "  ", 
   RowBox[{"Module", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{
       RowBox[{"trueGridVals", " ", "=", " ", "\n", "        ", 
        RowBox[{"Pick", "[", 
         RowBox[{"fn", ",", "\n", "          ", 
          RowBox[{
           RowBox[{"UnitStep", "[", 
            RowBox[{
             RowBox[{"cutOffs", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", 
             RowBox[{"fn", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "]"}], "*", 
           "\n", "            ", 
           RowBox[{"UnitStep", "[", 
            RowBox[{
             RowBox[{"fn", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"cutOffs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", "\n", 
          "          ", "1"}], "\n", "          ", "]"}]}], ",", "\n", 
       "      ", "basePot", ",", "\n", "      ", "rotWfnGrid", ",", " ", 
       "trueGridRot", ",", "\n", "      ", "trueRotSubGrids", ",", " ", 
       "rotSubGrids", ",", "\n", "      ", "fits", ",", " ", "monkeyPatch", 
       ",", "\n", "      ", "gridVals", ",", " ", "gpts", ",", "\n", "      ",
        "gptsRegrouped", ",", " ", "fullGridRegrouped", ",", "\n", "      ", 
       "missing", ",", " ", "patchedPts", ",", "\n", "      ", 
       RowBox[{"gind1", "=", 
        RowBox[{"Replace", "[", 
         RowBox[{"direction", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "\[Rule]", "1"}], ",", " ", 
            RowBox[{"Last", "\[Rule]", "2"}]}], "}"}]}], "]"}]}], ",", "\n", 
       "      ", 
       RowBox[{"gind2", "=", 
        RowBox[{"Replace", "[", 
         RowBox[{"direction", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "\[Rule]", "2"}], ",", " ", 
            RowBox[{"Last", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], ",", "\n", 
       "      ", 
       RowBox[{"dv", "=", 
        RowBox[{"def", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", "      ", "}"}], ",", "\n",
      "    ", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Extracting grids\>\"", "]"}], ";", "\n",
       "    ", 
      RowBox[{"rotWfnGrid", " ", "=", " ", "\n", "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"fn", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{";;", "2"}]}], "]"}], "]"}], "//", 
         RowBox[{
          RowBox[{
           RowBox[{"RotationMatrix", "[", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
           RowBox[{"Transpose", "[", "#", "]"}]}], "&"}]}], "//", 
        "Transpose"}]}], ";", "\n", "    ", 
      RowBox[{"trueGridRot", " ", "=", " ", "\n", "      ", 
       RowBox[{"Join", "[", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"trueGridVals", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", 
              RowBox[{";;", "2"}]}], "]"}], "]"}], "//", 
           RowBox[{
            RowBox[{
             RowBox[{"RotationMatrix", "[", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
             RowBox[{"Transpose", "[", "#", "]"}]}], "&"}]}], "//", 
          "Transpose"}], ",", " ", "\n", "        ", 
         RowBox[{"trueGridVals", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{"{", "3", "}"}]}], "]"}], "]"}], ",", " ", "\n", 
         "        ", "2"}], "\n", "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Rotating to R1/R2 space\>\"", "]"}], 
      ";", "\n", "    ", 
      RowBox[{"rotSubGrids", " ", "=", "\n", "      ", 
       RowBox[{"GroupBy", "[", 
        RowBox[{"rotWfnGrid", ",", " ", "\n", "        ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "gind1", "]"}], "]"}], ",", " ", ".00001"}], 
             "]"}], "&"}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{";;", "2"}], "]"}], "]"}], "&"}], ")"}]}], ",", " ", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "gind2", "]"}], "]"}], "&"}], "]"}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"trueRotSubGrids", " ", "=", " ", "\n", "      ", 
       RowBox[{"GroupBy", "[", 
        RowBox[{"trueGridRot", ",", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "gind1", "]"}], "]"}], ",", " ", ".00001"}], "]"}],
            "&"}], ")"}], ",", " ", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "gind2", "]"}], "]"}], "&"}], "]"}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"monkeyPatch", "[", 
        RowBox[{"f_", ",", " ", "r_", ",", " ", "c_"}], "]"}], ":=", "f"}], 
      ";", "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Fitting forms\>\"", "]"}], ";", "\n", 
      "    ", 
      RowBox[{"fits", " ", "=", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "take", " ", "the", " ", "subgrids", " ", "and", " ", "extrapolate", 
         " ", "along", " ", "them"}], " ", "*)"}], "\n", "      ", 
       RowBox[{"fitExtrapForms", "[", "\n", "        ", 
        RowBox[{
        "trueRotSubGrids", ",", "\n", "        ", "pointSampling", ",", " ", 
         "fitForms", ",", " ", "\n", "  ", "      ", "monkeyPatch", ",", " ", 
         "\n", "  ", "      ", "gind1", ",", " ", "gind2", ",", "\n", "  ", 
         "      ", "ops"}], "\n", "  ", "      ", "]"}]}], ";", "\n", "    ", 
      
      RowBox[{"debugPrint", "[", "\"\<Extapolating grid values\>\"", "]"}], 
      ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "use", " ", "the", " ", "fitted", " ", "forms", " ", "to", " ", 
        "extrapolate", " ", "off", " ", "the", " ", "grid"}], " ", "*)"}], 
      "\n", "    ", 
      RowBox[{"gridVals", " ", "=", " ", "\n", "      ", 
       RowBox[{"extraGridVals", "[", 
        RowBox[{
        "rotSubGrids", ",", " ", "trueRotSubGrids", ",", " ", "gind1", ",", 
         " ", "gind2", ",", " ", "fits"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"gpts", "=", "\n", "      ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "reformat", " ", "so", " ", "that", " ", "we", " ", "have", " ", "a", 
         " ", "list", " ", "of", " ", "triples"}], "*)"}], "\n", "      ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Values", "[", "gridVals", "]"}], ",", " ", "1"}], "]"}]}], 
      ";", "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Symmetrizing grid\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"symmetry", "=!=", "None"}], ",", "\n", "      ", 
        RowBox[{"gpts", "=", "\n", "      ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "symmetrize", " ", "the", " ", "grid", " ", "of", " ", "triples"}], 
          " ", "*)"}], "\n", "      ", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", "\n", "        ", 
            RowBox[{"#", ",", "\n", "          ", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", " ", "gind2"}], "]"}], "]"}], ",", " ", 
                
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", " ", "gind1"}], "]"}], "]"}], ",", " ", 
                
                RowBox[{"symmetry", "*", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}]}], "}"}], 
              "]"}]}], "\n", "  ", "  ", "  ", "  ", "  ", "]"}], "&"}], "@", 
          "gpts"}]}]}], "\n", "      ", "]"}], ";", "\n", "    ", 
      RowBox[{"gpts", "=", "\n", "    ", 
       RowBox[{"DeleteDuplicatesBy", "[", 
        RowBox[{"gpts", ",", " ", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", ".005"}], "]"}], 
          "&"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"gpts", "=", "\n", "     ", 
       RowBox[{"(*", " ", 
        RowBox[{"convert", " ", "back", " ", "to", " ", 
         RowBox[{"a", "/", "s"}], " ", "space"}], " ", "*)"}], "\n", "     ", 
       
       RowBox[{"Join", "[", "\n", "       ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"RotationMatrix", "[", 
            RowBox[{"Pi", "/", "4"}], "]"}], ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"gpts", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", 
               RowBox[{";;", "2"}]}], "]"}], "]"}], "]"}]}], "//", 
          "Transpose"}], ",", " ", "\n", "       ", 
         RowBox[{"gpts", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{"{", "3", "}"}]}], "]"}], "]"}], ",", "\n", "       ", 
         "2"}], "\n", "       ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "group", " ", "extrap", " ", "points", " ", "by", " ", "a", " ", 
        RowBox[{"value", "?"}]}], " ", "*)"}], "\n", "    ", 
      RowBox[{"gptsRegrouped", " ", "=", " ", 
       RowBox[{"GroupBy", "[", 
        RowBox[{"gpts", ",", " ", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", ".005"}], "]"}], 
          "&"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"group", " ", "everything", " ", "by", " ", "a", " ", 
        RowBox[{"value", "?"}]}], " ", "*)"}], "\n", "    ", 
      RowBox[{"fullGridRegrouped", " ", "=", " ", 
       RowBox[{"GroupBy", "[", 
        RowBox[{
         RowBox[{"fn", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", ".005"}], "]"}], 
          "&"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dumpSymbol", "[", "gptsRegrouped", "]"}], ";"}], "*)"}], 
      "\n", "    ", 
      RowBox[{
      "debugPrint", "[", "\"\<Doing secondary extrapolation\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"patchedPts", "=", "\n", "      ", 
       RowBox[{"MapThread", "[", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], " ", "=!=", " ", 
             RowBox[{"Length", "[", "#2", "]"}]}], ",", " ", "\n", 
            "          ", 
            RowBox[{"(*", " ", "\n", "                            ", 
             RowBox[{
              RowBox[{
               RowBox[{
               "I", " ", "guess", " ", "some", " ", "times", " ", "we", " ", 
                RowBox[{"don", "'"}], "t", " ", "have", " ", "the", " ", 
                "full", " ", 
                RowBox[{
                "grid", "?", " ", "\n", "                            ", 
                 "In"}], " ", "this", " ", "case", " ", "we", " ", "just", 
                " ", "extrapolate", " ", "using", " ", "a", " ", "default", 
                " ", "value"}], "..."}], " ", "\n", 
              "                            ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"originally", " ", "default", " ", "stuff"}], 
                 "..."}], " ", "dunno", " ", "what", " ", "should", " ", 
                "do"}], ")"}]}], "\n", "                            ", "*)"}],
             "\n", "         ", 
            RowBox[{"Join", "[", "\n", "           ", 
             RowBox[{"#2", ",", "\n", "           ", 
              RowBox[{"List", "/@", "\n", "             ", 
               RowBox[{
                RowBox[{"Interpolation", "[", "\n", "               ", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "3"}], "}"}]}], "]"}], "]"}], ",", 
                  " ", "\n", "               ", 
                  RowBox[{"{", "\n", "                 ", 
                   RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
                    RowBox[{"{", "\n", "                   ", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{"dv", ",", " ", 
                    RowBox[{
                    RowBox[{"n_", "?", "NumberQ"}], ":>", 
                    RowBox[{"(", 
                    RowBox[{"n", "&"}], ")"}]}]}], "]"}], ",", " ", "\n", 
                    "                   ", 
                    RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
                    "\n", "                   ", "}"}]}], "\n", 
                   "                 ", "}"}]}], "\n", "               ", 
                 "]"}], "[", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}]}], ",", 
              "\n", "  ", "           ", "2"}], "\n", "             ", "]"}], 
            ",", "\n", "          ", "#"}], "\n", "          ", "]"}], "&"}], 
         ",", "\n", "       ", 
         RowBox[{"{", "\n", "         ", 
          RowBox[{
           RowBox[{"KeySort", "@", "gptsRegrouped"}], ",", "\n", "         ", 
           
           RowBox[{"KeySort", "@", "fullGridRegrouped"}]}], "\n", "         ",
           "}"}]}], "\n", "       ", "]"}]}], ";", "\n", "     ", 
      RowBox[{"Round", "[", "\n", "       ", 
       RowBox[{
        RowBox[{"Developer`ToPackedArray", "@", "\n", "         ", 
         RowBox[{"DeleteDuplicatesBy", "[", "\n", "           ", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Values", "[", "patchedPts", "]"}], ",", " ", "1"}], 
            "]"}], ",", "\n", "           ", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", ".005"}], "]"}], 
            "&"}]}], "\n", "           ", "]"}]}], ",", "\n", "       ", 
        ".0001"}], "\n", "       ", "]"}]}]}], 
    RowBox[{"(*", 
     RowBox[{"//", "Interpolation"}], "*)"}], "\n", "    ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"extrapolatedFunction", "[", "\n", "  ", 
   RowBox[{"a__", ",", "\n", "  ", "\"\<Both\>\"", ",", "\n", "  ", 
    RowBox[{"symmetry", ":", 
     RowBox[{"1", "|", 
      RowBox[{"-", "1"}], "|", "None"}], ":", "1"}], ",", "\n", "  ", 
    RowBox[{"def", ":", 
     RowBox[{"DefaultValue", "[", "_", "]"}], ":", 
     RowBox[{"DefaultValue", "[", "Automatic", "]"}]}], ",", "\n", "  ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "  ", "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dv", " ", "=", " ", 
       RowBox[{
        RowBox[{"10.", "^", "9.5"}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"Abs", "[", 
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{"def", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"Automatic", "\[RuleDelayed]", "5000"}]}], "]"}], 
          "]"}]}]}]}], ",", " ", "d1", ",", " ", "d2", ",", " ", "d3", ",", 
      " ", "d"}], "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"d1", " ", "=", " ", 
      RowBox[{"extrapolatedFunction", "[", 
       RowBox[{"a", ",", " ", "First", ",", " ", "None", ",", " ", 
        RowBox[{"DefaultValue", "[", "dv", "]"}], ",", " ", "ops"}], "]"}]}], 
     ";", "\n", "    ", 
     RowBox[{"d2", " ", "=", " ", 
      RowBox[{"extrapolatedFunction", "[", 
       RowBox[{
       "a", ",", " ", "Last", ",", " ", "symmetry", ",", " ", "def", ",", " ",
         "ops"}], "]"}]}], ";", "\n", "    ", 
     RowBox[{"d", " ", "=", " ", 
      RowBox[{"DeleteDuplicatesBy", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"d1", ",", " ", "d2"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", ".001"}], "]"}], 
         "&"}]}], "]"}]}]}]}], "\n", "    ", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"51b07a93-1800-48f9-b6d1-fc18478f01d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]R1R2 Stuff\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"717b48e1-6e05-4d8a-a35c-a0201614f9d8"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getR1R2Potential\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"64a3ecd9-9655-4ea9-8c46-90c455bb79a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getR1R2Potential", "[", 
    RowBox[{"fullPot_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"a_", ",", " ", "s_"}], "}"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"With", "[", "\n", "\t", "\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{"R1R2", "=", 
          RowBox[{
           RowBox[{"RotationMatrix", "[", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{"a", ",", " ", "s"}], "}"}]}]}], ",", " ", "\n", 
         "\t\t\t\t", 
         RowBox[{"bounds", "=", 
          RowBox[{"$H5PotentialRegion", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], 
        RowBox[{"(*", 
         RowBox[{"fullPot", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*)"}], "\n", "\t", 
        "\t\t\t", "}"}], ",", "\n", "\t", "\t\t", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"R1R2", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"bounds", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<=", "#", "<", 
           RowBox[{"bounds", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], "\n", 
      "\t\t\t", "]"}], ",", "\n", "\t\t", 
     RowBox[{"H5VectorizedInterpCut", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "a", ",", " ", "s", ",", " ", "Automatic", ",", " ", "Automatic"}], 
        "}"}], ",", " ", "\n", "\t\t\t", "fullPot", ",", " ", "\n", "\t\t\t", 
       "$H5PotentialRegion", ",", "\n", "\t\t\t", 
       RowBox[{"10.", "^", "9"}], ",", " ", "\n", "\t\t\t", "0."}], "\n", 
      "\t\t\t", "]"}], ",", "\n", "\t\t", "$Failed"}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"fb7b21bb-28e4-4621-a274-b77b698c52a9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getR1R2PotentialMin\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,ExpressionUUID->"534327db-c393-43cc-a0cd-e5d89bbf83f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getR1R2PotentialMin", "[", 
   RowBox[{
    RowBox[{"shit_:", "None"}], ",", " ", "potGenerator_", ",", " ", 
    "r1r2grid_", ",", " ", "saGrid_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"AssociationMap", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pot", "=", 
         RowBox[{"potGenerator", "[", "#", "]"}]}], "}"}], ",", "\n", "\t", 
       "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pot", "=!=", "$Failed"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Min", "[", 
          RowBox[{"pot", "@", 
           RowBox[{"r1r2grid", "[", "\"\<Points\>\"", "]"}]}], "]"}], ",", 
         "\n", "\t\t\t\t", "$Failed"}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t",
       "\t\t", "]"}], "&"}], ",", "\n", "\t\t", 
    RowBox[{"saGrid", "@", "\"\<Points\>\""}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"6869158d-0fb0-4ce2-906b-490586ef3d5c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getR1R2Wavefunctions\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2a3f1c81-098a-4390-8e20-d61389eb84e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getR1R2Wavefunctions", "[", 
   RowBox[{
   "dvr_", ",", " ", "potGenerator_", ",", " ", "r1r2grid_", ",", " ", 
    "saGrid_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"AssociationMap", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pot", "=", 
         RowBox[{"potGenerator", "[", "#", "]"}]}], "}"}], ",", "\n", "\t", 
       "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pot", "=!=", "$Failed"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"dvr", "[", "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<Wavefunctions\>\"", ",", "\n", "\t\t\t\t\t", 
           RowBox[{
           "\"\<PotentialEnergy\>\"", "\[Rule]", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"Band", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "1"}], "}"}], "]"}], "->", 
              RowBox[{"pot", "@", 
               RowBox[{"r1r2grid", "[", "\"\<Points\>\"", "]"}]}]}], "]"}]}], 
           ",", "\n", "\t\t\t\t\t", 
           RowBox[{"\"\<Grid\>\"", "->", "r1r2grid"}], ",", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"\"\<ArnoldiIterations\>\"", "\[Rule]", "5000"}], ",", 
           "\n", "\t", "\t\t\t\t", 
           RowBox[{"\"\<NodelessGroundState\>\"", "\[Rule]", "True"}]}], "\n",
           "\t", "\t\t\t\t", "]"}], ",", "\n", "\t", "\t\t\t", "$Failed"}], 
        "\n", "\t", "\t\t\t", "]"}]}], "\n", "\t", "\t\t", "]"}], "&"}], ",", 
    "\n", "\t\t", 
    RowBox[{"saGrid", "@", "\"\<Points\>\""}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"a7cd47ad-46b8-43ae-a1b8-69c1556d71c9"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Phase Corrections\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.757304590763949*^9, 
  3.757304597120837*^9}},ExpressionUUID->"b3cd6052-c279-423d-a545-\
450dd73e3393"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]meanShiftedWavefunctions\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"db871ab4-5d94-4f04-a5ed-0a6c3dc2c75f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"shiftWfGrid", "[", 
    RowBox[{"nearest_", ",", "baseGrid_", ",", " ", "vals_"}], "]"}], ":=", 
   "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mean", "=", 
       RowBox[{
        RowBox[{"nearest", "[", 
         RowBox[{"Mean", "[", 
          RowBox[{"WeightedData", "[", 
           RowBox[{"baseGrid", ",", " ", 
            RowBox[{"Abs", "@", "vals"}]}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", "baseGrid", "]"}], "-", "mean"}], "//", 
      "Transpose"}]}], "\n", "    ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meanShiftedWavefunctions", "[", "wfns_WavefunctionsObject", "]"}],
    ":=", "\n", "  ", 
   RowBox[{"Module", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{
      "baseGrid", ",", "\n", "      ", "nfunc", ",", "\n", "      ", "shifts",
        ",", "\n", "      ", "newGrids", ",", "\n", "      ", "gridBits", ",",
        "\n", "      ", "zeroGrid", ",", "\n", "      ", "fullGrid", ",", 
       "\n", "      ", "newWfns", ",", "\n", "      ", "newWfns2", ",", "\n", 
       "      ", "newWfnsGrid", ",", "\n", "      ", "grids"}], "\n", 
      "      ", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"baseGrid", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"wfns", "@", "\"\<Grid\>\""}], "]"}], ",", " ", "1"}], 
        "]"}]}], ";", "\n", "    ", 
      RowBox[{"nfunc", "=", 
       RowBox[{"Nearest", "[", "baseGrid", "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"shift", " ", "the", " ", "original", " ", "grids"}], " ", 
       "*)"}], "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Shifting core grids\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"newGrids", " ", "=", " ", "\n", "      ", 
       RowBox[{"Map", "[", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", "\n", "  ", "        ", 
           RowBox[{
            RowBox[{"shiftWfGrid", "[", 
             RowBox[{"nfunc", ",", " ", "baseGrid", ",", " ", 
              RowBox[{"Flatten", "@", 
               RowBox[{"#", "[", "\"\<Values\>\"", "]"}]}]}], "]"}], ",", 
            "\n", "          ", 
            RowBox[{"List", "/@", 
             RowBox[{"Flatten", "[", 
              RowBox[{"#", "[", "\"\<Values\>\"", "]"}], "]"}]}], ",", "\n", 
            "  ", "        ", "2"}], "\n", "  ", "        ", "]"}], "&"}], 
         ",", "\n", "  ", "      ", 
         RowBox[{"wfns", "[", "\"\<Wavefunctions\>\"", "]"}]}], "\n", 
        "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dumpSymbol", "[", "newGrids", "]"}], ";"}], "*)"}], "\n", 
      "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "determine", " ", "what", " ", "the", " ", "tensor", " ", "product", 
        " ", "grid", " ", "parts", " ", "would", " ", "be"}], " ", "*)"}], 
      "\n", "    ", 
      RowBox[{"gridBits", "=", "\n", "      ", 
       RowBox[{
        RowBox[{"Sort", "@*", 
         RowBox[{"DeleteDuplicatesBy", "[", 
          RowBox[{
           RowBox[{"Round", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"10.", "^", 
              RowBox[{"-", "3"}]}]}], "]"}], "&"}], "]"}], "@*", "Flatten"}], 
        "/@", 
        RowBox[{"{", "\n", "        ", 
         RowBox[{
          RowBox[{"newGrids", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], 
          ",", "\n", "        ", 
          RowBox[{"newGrids", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "All", ",", " ", "2"}], "]"}], "]"}]}], 
         "\n", "        ", "}"}]}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "make", " ", "the", " ", "full", " ", "grid", " ", "that", " ", 
        "every", " ", "wavefunction", " ", "will", " ", "live", " ", "on"}], 
       " ", "*)"}], "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Constructing full grid\>\"", "]"}], ";",
       "\n", "    ", 
      RowBox[{"fullGrid", "=", 
       RowBox[{"Tuples", "[", "gridBits", "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "but", " ", "zero", " ", "out", " ", "undefined", " ", "parts"}], " ", 
       "*)"}], "\n", "    ", 
      RowBox[{"zeroGrid", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"fullGrid", ",", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0.", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "@", "fullGrid"}], ",", " ", "1"}], "}"}]}], 
          "]"}], ",", " ", "2"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{
      "debugPrint", "[", "\"\<Reconstructing wavefunctions\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"newWfns", "=", 
       RowBox[{"(*", " ", 
        RowBox[{"fill", " ", "out", " ", "the", " ", "entire", " ", "grid"}], 
        " ", "*)"}], "\n", "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteDuplicatesBy", "[", "\n", "        ", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"#", ",", " ", "zeroGrid"}], "]"}], ",", " ", "\n", 
           "        ", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", 
              RowBox[{"10.", "^", 
               RowBox[{"-", "3"}]}]}], "]"}], "&"}]}], "\n", "        ", 
          "]"}], "&"}], "/@", "newGrids"}]}], ";", "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dumpSymbol", "[", "newWfns", "]"}], ";"}], "*)"}], "\n", 
      "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "set", " ", "up", " ", "the", " ", "new", " ", "wavefunctions"}], " ", 
       "*)"}], "\n", "    ", 
      RowBox[{"newWfns", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"Ordering", "[", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", 
                 RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", 
              RowBox[{"10.", "^", 
               RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@",
         "newWfns"}]}], ";", "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"newWfns2", " ", "=", " ", "newWfns"}], ";"}], "*)"}], "\n", 
      "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dumpSymbol", "[", "newWfns2", "]"}], ";"}], "*)"}], "\n", 
      "    ", 
      RowBox[{"grids", " ", "=", " ", 
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Map", "[", 
         RowBox[{"Sort", ",", " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"newWfns", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"-", "2"}]}]}], "]"}]}], "]"}]}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "grids"}], ">", "1"}], ",", " ", "\n", 
        "      ", 
        RowBox[{
         RowBox[{"debugPrint", "[", 
          RowBox[{"\"\<`` distinct grids\>\"", "~", "TemplateApply", "~", 
           RowBox[{"Length", "[", "grids", "]"}]}], "]"}], ";", "\n", 
         "      ", 
         RowBox[{"dumpSymbol", "[", "grids", "]"}]}]}], "\n", "      ", "]"}],
       ";", "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Making grid functions\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"newWfnsGrid", "=", 
       RowBox[{"(*", " ", 
        RowBox[{
        "by", " ", "making", " ", "a", " ", "new", " ", "full", " ", 
         "coordinate", " ", "grid"}], " ", "*)"}], "\n", "      ", 
       RowBox[{"CoordinateGridObject", "@", "\n", "        ", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"newWfns", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "All", ",", " ", 
             RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", 
          RowBox[{"Length", "@", 
           RowBox[{"gridBits", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}]}], ";", "\n", "    ", 
      
      RowBox[{"debugPrint", "@", "\n", "      ", 
       RowBox[{"TemplateApply", "[", "\n", "        ", 
        RowBox[{
        "\"\<`` wavefunctions with length `` and grid of dimension ``\>\"", 
         ",", "\n", "        ", 
         RowBox[{"{", "\n", "          ", 
          RowBox[{
           RowBox[{"Length", "@", "newWfns"}], ",", "\n", "  ", "        ", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Length", "/@", "newWfns"}], "]"}], ",", "\n", "  ", 
           "        ", 
           RowBox[{"Dimensions", "[", "newWfnsGrid", "]"}]}], "\n", 
          "          ", "}"}]}], "\n", "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"newWfns", " ", "=", " ", "\n", "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"GridFunctionObject", "[", 
          RowBox[{"newWfnsGrid", ",", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "]"}], "&"}], "/@",
         "newWfns"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "and", " ", "then", " ", "finally", " ", "constructing", " ", "a", " ",
         "new", " ", "WavefunctionsObject"}], " ", "*)"}], "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Making wavefunction object\>\"", "]"}], 
      ";", "\n", "    ", 
      RowBox[{"WavefunctionsObject", "[", "\n", "      ", 
       RowBox[{
        RowBox[{"{", "\n", "        ", 
         RowBox[{
          RowBox[{"wfns", "[", "\"\<Energies\>\"", "]"}], ",", "\n", 
          "        ", "newWfns"}], "\n", "        ", "}"}], ",", "\n", 
        "      ", "newWfnsGrid"}], "\n", "      ", "]"}]}]}], "\n", "    ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meanShiftedWavefunctions", "[", "wfList_", "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"Module", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{
       RowBox[{"nonFailedPos", "=", 
        RowBox[{"Pick", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "@", "wfList"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "=!=", "$Failed"}], "&"}], "/@", "wfList"}]}], 
         "]"}]}], ",", "\n", "      ", "nonFailedWfns", ",", "\n", "      ", 
       "shifted", ",", "\n", "      ", "newWfnsList"}], "\n", "      ", "}"}],
      ",", "\n", "    ", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Mean shifting wavefunctions\>\"", "]"}],
       ";", "\n", "    ", 
      RowBox[{"nonFailedWfns", " ", "=", " ", "\n", "      ", 
       RowBox[{"WavefunctionsObject", "[", "\n", "        ", 
        RowBox[{
         RowBox[{"{", "\n", "          ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"Length", "@", "nonFailedPos"}]}], "]"}], ",", "\n", 
           "          ", 
           RowBox[{"wfList", "[", 
            RowBox[{"[", "nonFailedPos", "]"}], "]"}]}], "\n", "          ", 
          "}"}], ",", "\n", "        ", 
         RowBox[{
          RowBox[{"wfList", "[", 
           RowBox[{"[", 
            RowBox[{"nonFailedPos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "@", 
          "\"\<Grid\>\""}]}], "\n", "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"shifted", " ", "=", " ", 
       RowBox[{"meanShiftedWavefunctions", "[", "nonFailedWfns", "]"}]}], ";",
       "\n", "    ", 
      RowBox[{"Print", "[", "\"\<Reconstructing wavefunction list\>\"", "]"}],
       ";", "\n", "    ", 
      RowBox[{"newWfnsList", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"$Failed", ",", " ", 
         RowBox[{"Length", "@", "wfList"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{"newWfnsList", "[", 
        RowBox[{"[", "nonFailedPos", "]"}], "]"}], " ", "=", " ", "\n", 
       "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"WavefunctionsObject", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "0", "}"}], ",", " ", 
             RowBox[{"{", "#", "}"}]}], "}"}], ",", " ", 
           RowBox[{"#", "[", "\"\<Grid\>\"", "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"shifted", "[", "\"\<Wavefunctions\>\"", "]"}]}]}], ";", "\n",
       "    ", "newWfnsList"}]}], "\n", "    ", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"446d2a62-a5e1-4f56-8475-a3b75b17cfe4"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]rephaseThingies\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"7bdbc0e2-c93f-4470-bb8b-7f33bc302c63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rephaseThingies", "=", "\n", "\t", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"overlaps", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"init", ",", " ", "_Integer"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"tol", ",", " ", "_Real"}], "}"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"prev", ",", " ", "el", ",", " ", 
         RowBox[{"ov", "=", "overlaps"}], ",", 
         RowBox[{"swapEl", "=", "init"}]}], "}"}], ",", "\n", "\t\t\t", 
       RowBox[{"Prepend", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Table", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"el", "=", 
             RowBox[{"ov", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", "\t\t\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"el", "<", 
               RowBox[{"-", "tol"}]}], ",", " ", 
              RowBox[{"swapEl", "=", 
               RowBox[{"-", "swapEl"}]}]}], "]"}], ";", "\n", "\t\t\t\t\t", 
            "swapEl"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"Length", "@", "ov"}]}], "}"}]}], "\n", "\t\t\t\t\t", 
          "]"}], ",", "\n", "\t\t\t\t", "init"}], "\n", "\t\t\t\t", "]"}]}], 
      "\n", "\t\t\t", "]"}]}], 
    RowBox[{"(*", 
     RowBox[{",", "\n", "\t\t", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "*)"}], "\n", 
    "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"c836e476-5d17-411f-8795-9e19c4045a25"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]rephaseWfns\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"52abe0c4-6c89-47b7-a77e-573b466cd2b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rephaseWfns", "[", 
   RowBox[{"s_", ",", " ", "wfns_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"WavefunctionsObject", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"wfns", "[", "\"\<Energies\>\"", "]"}], ",", " ", "\n", 
      "\t\t\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Scale", "[", 
          RowBox[{"#", ",", " ", "s"}], "]"}], "&"}], ",", " ", 
        RowBox[{"wfns", "[", "\"\<Wavefunctions\>\"", "]"}]}], "]"}]}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"wfns", "[", "\"\<Grid\>\"", "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"db3dcc2c-f124-4c74-ae3a-515d7d764140"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getPhaseCorrection\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1e2a98de-5579-4b6c-b1a4-b6af9ece677c"],

Cell[BoxData[{
 RowBox[{"getPhaseCorrection", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getPhaseCorrection", "[", 
    RowBox[{"wfs_List", ",", " ", "\n", "\t", "grid_", ",", "\n", "\t", 
     RowBox[{"state", ":", 
      RowBox[{"{", 
       RowBox[{"_Integer", "?", "IntegerQ"}], "}"}], ":", 
      RowBox[{"{", "2", "}"}]}], ",", "\n", "\t", 
     RowBox[{"basePhase", ":", 
      RowBox[{"1", "|", 
       RowBox[{"-", "1"}]}], ":", "1"}], ",", "\n", "\t", 
     RowBox[{"rephase", ":", 
      RowBox[{"True", "|", "False"}], ":", "False"}], ",", "\n", "\t", 
     RowBox[{"defaultOrder", ":", 
      RowBox[{"First", "|", "Last"}], ":", "First"}]}], "\n", "\t", "]"}], ":=",
    "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"pos", ",", "\n", "\t\t\t", 
       RowBox[{"gridPoints", "=", 
        RowBox[{"grid", "[", "\"\<Points\>\"", "]"}]}], ",", "\n", "\t\t\t", 
       "cleanGrid", ",", "\n", "\t\t\t", "cleanGridSorted", ",", "\n", 
       "\t\t\t", "gridReordering", ",", "\n", "\t\t\t", "gridPositions", ",", 
       "\n", "\t\t\t", "reorderedWfs", ",", "\n", "\t\t\t", 
       "rephasedWavefunctions", ",", "\n", "\t\t\t", "fullWfs", ",", "\n", 
       "\t\t\t", "overlaps", ",", "\n", "\t\t\t", "phases", ",", "\n", 
       "\t\t\t", "orderComplement", ",", "\n", "\t\t\t", "phaseVector", ",", 
       "\n", "\t\t\t", "newWfns", ",", "\n", "\t\t\t", "rephasingData"}], 
      "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"pos", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
           RowBox[{"#", ">", "0"}]}], "&"}], "]"}], "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Position", "[", 
          RowBox[{"wfs", ",", " ", "_WavefunctionsObject", ",", " ", 
           RowBox[{"{", "1", "}"}]}], "]"}]}]}]}], ";", "\n", "\t\t", 
      RowBox[{"cleanGrid", "=", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", "pos", "]"}], "]"}], ".", 
          RowBox[{"RotationMatrix", "[", 
           RowBox[{"\[Pi]", "/", "4"}], "]"}]}], ",", " ", ".001"}], "]"}]}], 
      ";", "\n", "\t\t", 
      RowBox[{"rephasingData", "=", "\n", "\t\t\t", 
       RowBox[{"Table", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"cleanGridSorted", "=", "\n", "\t", "\t\t\t\t", 
           RowBox[{
            RowBox[{"MapIndexed", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"EvenQ", "[", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", "Reverse",
                  ",", " ", "Identity"}], "]"}], "@", "#"}], "&"}], "]"}], 
            "@", "\n", "\t", "\t", "\t\t\t\t", 
            RowBox[{"SortBy", "[", "\n", "\t", "\t", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"SortBy", "[", 
                 RowBox[{"#", ",", " ", 
                  RowBox[{"sorting", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], "/@", 
               RowBox[{"GatherBy", "[", 
                RowBox[{"cleanGrid", ",", " ", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"sorting", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "&"}]}], 
                "]"}]}], ",", " ", "\n", "\t", "\t", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", " ", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}]}], "&"}]}], "\n", "\t", 
             "\t", "\t\t\t\t\t", "]"}]}]}], ";", "\n", "\t", "\t", "\t\t", 
          RowBox[{"gridReordering", "=", "\n", "\t", "\t", "\t\t\t", 
           RowBox[{"Flatten", "@", "\n", "\t", "\t", "\t\t\t\t", 
            RowBox[{"Lookup", "[", 
             RowBox[{
              RowBox[{"PositionIndex", "[", "cleanGrid", "]"}], ",", " ", 
              RowBox[{"Flatten", "[", 
               RowBox[{"cleanGridSorted", ",", " ", "1"}], "]"}]}], "\n", 
             "\t", "\t", "\t\t\t\t\t", "]"}]}]}], ";", "\n", "\t", "\t", 
          "\t\t", 
          RowBox[{"gridPositions", "=", 
           RowBox[{"pos", "[", 
            RowBox[{"[", "gridReordering", "]"}], "]"}]}], ";", "\n", "\t", 
          "\t", "\t\t", 
          RowBox[{"reorderedWfs", "=", 
           RowBox[{"wfs", "[", 
            RowBox[{"[", "gridPositions", "]"}], "]"}]}], ";", "\n", "\t", 
          "\t", "\t\t", 
          RowBox[{"fullWfs", "=", "\n", "\t", "\t", "\t\t\t", 
           RowBox[{"WavefunctionsObject", "[", "\n", "\t", "\t", "\t\t\t\t", 
            RowBox[{
             RowBox[{"Flatten", "/@", "\n", "\t", "\t", "\t\t\t\t", 
              RowBox[{"Transpose", "[", "\n", "\t", "\t", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", " ", 
                   RowBox[{
                    RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}], "[", 
                    RowBox[{"[", "state", "]"}], "]"}]}], "}"}], "&"}], "/@", 
                "\n", "\t", "\t", "\t\t\t\t\t", "reorderedWfs"}], "\n", "\t", 
               "\t", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{
              RowBox[{"reorderedWfs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Grid\>\"", "]"}]}], 
            "\n", "\t", "\t", "\t\t\t\t", "]"}]}], ";", "\n", "\t", "\t", 
          "\t\t", 
          RowBox[{"overlaps", "=", 
           RowBox[{"Developer`ToPackedArray", "[", 
            RowBox[{"fullWfs", "@", 
             RowBox[{"\"\<Overlaps\>\"", "[", "fullWfs", "]"}]}], "]"}]}], 
          ";", "\n", "\t", "\t", "\t\t", 
          RowBox[{"phases", "=", 
           RowBox[{"rephaseThingies", "[", 
            RowBox[{
             RowBox[{"Diagonal", "[", 
              RowBox[{"overlaps", ",", " ", "1"}], "]"}], ",", " ", 
             "basePhase", ",", " ", "0"}], "]"}]}], ";", "\n", "\t", "\t", 
          "\t\t", 
          RowBox[{"orderComplement", "=", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "@", "wfs"}], "]"}], ",", " ", 
             "gridPositions"}], "]"}]}], ";", "\n", "\t\t\t\t", 
          RowBox[{"phaseVector", "=", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"phases", ",", " ", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"$Failed", ",", " ", 
                RowBox[{"Length", "@", "orderComplement"}]}], "]"}]}], "]"}], 
            "[", 
            RowBox[{"[", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{"Ordering", "@", 
              RowBox[{"Join", "[", 
               RowBox[{"gridPositions", ",", " ", "orderComplement"}], 
               "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], "]"}]}], ";", "\n", 
          "\t\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{"gridReordering", ",", "\n", "\t\t\t\t\t", "phaseVector"}],
            "\n", "\t\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{"sorting", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"First", ",", " ", "2"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"Last", ",", " ", "1"}], "}"}]}], "}"}]}], "}"}]}], 
        "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rephasingData", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], " ", "=!=", " ", 
         RowBox[{"rephasingData", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", " ", "2"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
        
        RowBox[{
        "Print", "[", 
         "\"\<Rephasing disagreement by sampling direction. Be careful.\>\"", 
         "]"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{"gridReordering", ",", "\n", "\t\t\t", "phaseVector"}], "\n", 
        "\t\t\t", "}"}], " ", "=", " ", "\n", "\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"defaultOrder", "===", "First"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"rephasingData", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"rephasingData", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"rephase", ",", "\n", "\t\t\t", 
        RowBox[{"newWfns", "=", "\n", "\t\t\t\t", 
         RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", "===", "$Failed"}], ",", "\n", "\t\t\t\t\t\t", "#",
               ",", "\n", "\t\t\t\t\t\t", 
              RowBox[{"rephaseWfns", "[", 
               RowBox[{"#", ",", " ", "#2"}], "]"}]}], " ", "\n", 
             "\t\t\t\t\t\t", "]"}], "&"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t\t\t", 
            RowBox[{"phaseVector", ",", "\n", "\t\t\t\t\t\t", "wfs"}], "\n", 
            "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"newWfns", "=", "None"}]}], "\n", "\t\t\t", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"<|", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Wavefunctions\>\"", "->", "newWfns"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"\"\<PhaseVector\>\"", "\[Rule]", "phaseVector"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"\"\<Positions\>\"", "\[Rule]", "pos"}], ",", "\n", "\t\t\t", 
        
        RowBox[{"\"\<Ordering\>\"", "->", "gridPositions"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"\"\<Phases\>\"", "\[Rule]", "phases"}]}], "\n", "\t\t\t", 
       "|>"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"dc222f06-732a-4a0a-8e4d-e61139dec02c"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getPhaseCorrection\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"a196a07e-88f1-4948-a228-46bffe44908a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPhaseCorrection", "[", "\n", "\t", 
   RowBox[{"wfs_List", ",", " ", "\n", "\t", "grid_", ",", "\n", "\t", 
    RowBox[{"states", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_Integer", "?", "IntegerQ"}], ",", " ", 
       RowBox[{"__Integer", "?", "IntegerQ"}]}], "}"}]}], ",", "\n", "\t", 
    RowBox[{"basePhases", ":", 
     RowBox[{"1", "|", 
      RowBox[{"-", "1"}], "|", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "|", 
          RowBox[{"-", "1"}]}], ")"}], ".."}], "}"}]}], ":", "1"}], ",", "\n",
     "\t", 
    RowBox[{"rephase", ":", 
     RowBox[{"True", "|", "False"}], ":", "True"}]}], "\n", "\t", "]"}], ":=",
   "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "wfSets", ",", " ", "meanShiftedWfSets", ",", " ", "rephasing", ",", " ",
       "newWfns"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"wfSets", "=", "\n", "\t\t  ", 
      RowBox[{"Table", "[", "\n", "  \t\t    ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", "state", "}"}], "]"}], "]"}]}], "]"}], "&"}], "/@",
          "wfs"}], ",", " ", "\n", "  \t\t  ", 
        RowBox[{"{", 
         RowBox[{"state", ",", " ", "states"}], "}"}]}], "\n", "  \t\t  ", 
       "]"}]}], ";", "\n", "   ", 
     RowBox[{"meanShiftedWfSets", "=", "\n", "\t\t  ", 
      RowBox[{"Table", "[", "\n", "  \t\t  ", 
       RowBox[{
        RowBox[{"meanShiftedWavefunctions", "[", "\n", "  \t\t    ", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
             RowBox[{
              RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}], "[", 
              RowBox[{"[", "state", "]"}], "]"}]}], "\n", "  \t\t    ", "]"}],
            "&"}], "/@", "wfs"}], "\n", "  \t\t    ", "]"}], ",", " ", "\n", 
        "  \t\t  ", 
        RowBox[{"{", 
         RowBox[{"state", ",", " ", "states"}], "}"}]}], "\n", "  \t\t  ", 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"rephasing", "=", "\n", "\t\t\t", 
      RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"getPhaseCorrection", "[", 
          RowBox[{"#", ",", " ", "grid", ",", " ", 
           RowBox[{"{", "1", "}"}], ",", " ", "#2", ",", " ", "False"}], 
          "]"}], "&"}], ",", " ", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{"meanShiftedWfSets", ",", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"basePhases", ",", " ", 
              RowBox[{"Length", "@", "wfSets"}]}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"Length", "@", "wfSets"}]}], "]"}], "]"}]}], "\n", 
         "\t\t\t\t\t", "}"}]}], " ", "\n", "\t\t\t\t", "]"}]}], ";", "\n", 
     "\t ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"dumpSymbol", "[", "rephasing", "]"}], ";", "\n", "\t ", 
       RowBox[{"dumpSymbol", "[", "meanShiftedWfSets", "]"}], ";"}], "*)"}], 
     "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"rephase", ",", "\n", "\t\t\t", 
       RowBox[{"newWfns", "=", "\n", "\t\t\t\t", 
        RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
             RowBox[{"Join", "[", "##", "]"}]}], "]"}], "&"}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#", "===", "$Failed"}], ",", "\n", 
                  "\t\t\t\t\t\t\t\t", "#", ",", "\n", "\t\t\t\t\t\t\t\t", 
                  RowBox[{"rephaseWfns", "[", 
                   RowBox[{"#", ",", " ", "#2"}], "]"}]}], " ", "\n", 
                 "\t\t\t\t\t\t\t\t", "]"}], "&"}], ",", "\n", 
               "\t\t\t\t\t\t\t", 
               RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"#", "[", "\"\<PhaseVector\>\"", "]"}], ",", "\n", 
                 "\t\t\t\t\t\t\t\t", "#2"}], "\n", "\t\t\t\t\t\t\t\t", 
                "}"}]}], "\n", "\t\t\t\t\t\t\t", "]"}], "&"}], ",", "\n", 
            "\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"rephasing", ",", " ", "wfSets"}], "}"}]}], "\n", 
           "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"newWfns", "=", "None"}]}], "\n", "\t\t\t", "]"}], ";", "\n", 
     "\t\t", 
     RowBox[{"<|", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<Wavefunctions\>\"", "->", "newWfns"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<Rephasings\>\"", "->", "rephasing"}]}], "\n", "\t\t\t", 
      "|>"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"c95566d8-7792-4b32-bdf7-26fcde5ff971"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getVectorPhaseCorrection\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"a25b66cc-dfd1-4ee4-8087-86c3cfe0c830"],

Cell[BoxData[{
 RowBox[{"getVectorPhaseCorrection", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"getVectorPhaseCorrection", "[", 
   RowBox[{"values_List", ",", " ", "\n", "\t", "grid_", ",", " ", "\n", "\t", 
    RowBox[{"basePhase", ":", 
     RowBox[{"1", "|", 
      RowBox[{"-", "1"}]}], ":", "1"}], ",", "\n", "\t", 
    RowBox[{"rephase", ":", 
     RowBox[{"True", "|", "False"}], ":", "True"}], ",", "\n", "\t", 
    RowBox[{"tol", ":", "_Real", ":", ".001"}]}], "\n", "\t", "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"pos", ",", "\n", "\t\t\t", 
      RowBox[{"gridPoints", "=", 
       RowBox[{"grid", "[", "\"\<Points\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      "cleanGrid", ",", "\n", "\t\t\t", "cleanGridSorted", ",", "\n", 
      "\t\t\t", "gridReordering", ",", "\n", "\t\t\t", "gridPositions", ",", 
      "\n", "\t\t\t", "ratios", ",", "\n", "\t\t\t", "reorderedVals", ",", 
      "\n", "\t\t\t", "phases", ",", "\n", "\t\t\t", "orderComplement", ",", 
      "\n", "\t\t\t", "phaseVector", ",", "\n", "\t\t\t", "newValues"}], "\n",
      "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"pos", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Position", "[", 
        RowBox[{"values", ",", " ", 
         RowBox[{"_", "?", "NumericQ"}], ",", " ", 
         RowBox[{"{", "1", "}"}]}], "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"cleanGrid", "=", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"grid", "[", 
          RowBox[{"[", "pos", "]"}], "]"}], ".", 
         RowBox[{"RotationMatrix", "[", 
          RowBox[{"\[Pi]", "/", "4"}], "]"}]}], ",", " ", ".001"}], "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"cleanGridSorted", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"EvenQ", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", "Reverse", ",",
             " ", "Identity"}], "]"}], "@", "#"}], "&"}], "]"}], "@", "\n", 
       "\t\t\t\t", 
       RowBox[{"SortBy", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"SortBy", "[", 
            RowBox[{"#", ",", " ", "First"}], "]"}], "&"}], "/@", 
          RowBox[{"GatherBy", "[", 
           RowBox[{"cleanGrid", ",", " ", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ",", 
         " ", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], "&"}]}], "\n", 
        "\t\t\t\t\t", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"gridReordering", "=", "\n", "\t\t\t", 
      RowBox[{"Flatten", "@", "\n", "\t\t\t\t", 
       RowBox[{"Lookup", "[", 
        RowBox[{
         RowBox[{"PositionIndex", "[", "cleanGrid", "]"}], ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"cleanGridSorted", ",", " ", "1"}], "]"}]}], "\n", 
        "\t\t\t\t\t", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"gridPositions", "=", 
      RowBox[{"pos", "[", 
       RowBox[{"[", "gridReordering", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"reorderedVals", "=", 
      RowBox[{"values", "[", 
       RowBox[{"[", "gridPositions", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"ratios", "=", 
      RowBox[{"MovingMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}], ",", " ", 
           RowBox[{"Divide", "@@", "#"}], ",", " ", "0."}], "]"}], "&"}], ",",
         " ", "reorderedVals", 
        RowBox[{"(*", 
         RowBox[{"Differences", "[", "reorderedVals", "]"}], "*)"}], ",", " ",
         "1"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"ratios", ",", " ", 
         RowBox[{"ratios", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ";"}], " ", "*)"}], 
     "\n", "\t\t", 
     RowBox[{"phases", "=", 
      RowBox[{"rephaseThingies", "[", 
       RowBox[{"ratios", ",", " ", "basePhase", ",", " ", "tol"}], "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"orderComplement", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "values"}], "]"}], ",", " ", 
        "gridPositions"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"phaseVector", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"phases", ",", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"$Failed", ",", " ", 
           RowBox[{"Length", "@", "orderComplement"}]}], "]"}]}], "]"}], "[", 
       
       RowBox[{"[", "\n", "\t\t\t\t", 
        RowBox[{"Ordering", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"gridPositions", ",", " ", "orderComplement"}], "]"}]}], 
        "\n", "\t\t\t\t", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"rephase", ",", "\n", "\t\t\t", 
       RowBox[{"newValues", "=", "\n", "\t\t\t\t", 
        RowBox[{"values", "*", 
         RowBox[{"Replace", "[", 
          RowBox[{"phaseVector", ",", " ", 
           RowBox[{"$Failed", "\[Rule]", "1"}], ",", " ", "1"}], "]"}]}]}], 
       ",", "\n", "\t\t\t", 
       RowBox[{"newValues", "=", "None"}]}], "\n", "\t\t\t", "]"}], ";", "\n",
      "\t\t", 
     RowBox[{"<|", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<Values\>\"", "->", "newValues"}], ",", "\n", "\t\t\t", 
       RowBox[{"\"\<PhaseVector\>\"", "\[Rule]", "phaseVector"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<Positions\>\"", "\[Rule]", "pos"}], ",", "\n", "\t\t\t", 
       RowBox[{"\"\<Ordering\>\"", "->", "gridPositions"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<Phases\>\"", "\[Rule]", "phases"}]}], "\n", "\t\t\t", 
      "|>"}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"44099dab-9163-400d-a85c-72e2599760f8"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SCF\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"dfb8f55e-f91f-44f9-ae97-abafb2f78a50"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]scfGrid\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e674badc-fab1-44ba-a065-9a0d97834046"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"scfGrid", "[", 
    RowBox[{"scfDvr_", ",", " ", "basisSize_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"scfGrid", "[", 
     RowBox[{"scfDvr", ",", " ", "basisSize"}], "]"}], "=", "\n", "\t\t", 
    RowBox[{"scfDvr", "[", 
     RowBox[{"\"\<Grid\>\"", ",", "\n", "\t", "\t\t", 
      RowBox[{"\"\<Points\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"basisSize", ",", " ", "basisSize"}], "}"}]}], ",", "\n", 
      "\t", "\t\t", 
      RowBox[{"\"\<PotentialOptimize\>\"", "\[Rule]", "False"}]}], "\n", "\t",
      "\t\t", "]"}]}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"b1a17673-38d0-4cfe-bdb2-7079b2808361"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]scfWavefunction\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"25607787-9272-46c5-8712-ec5bfb4c7db5"],

Cell[BoxData[{
 RowBox[{"scfWavefunction", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scfWavefunction", "[", "\n", "\t", 
    RowBox[{
    "scf1DDVR_", ",", "\n", "\t", "scfGrid_", ",", "\n", "\t", 
     "pot_CompiledFunction", ",", "\n", "\t", 
     RowBox[{"states", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}], 
     ",", "\n", "\t", 
     RowBox[{"n", ":", 
      RowBox[{"_Integer", "|", "Automatic"}], ":", "Automatic"}]}], "\n", 
    "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"WavefunctionsObject", "[", "\n", "\t\t", 
    RowBox[{"\"\<SCF\>\"", ",", "\n", "\t\t", "scf1DDVR", ",", "\n", "\t\t", 
     RowBox[{"GridFunctionObject", "[", "\n", "\t\t\t", 
      RowBox[{"scfGrid", ",", "\n", "\t\t\t", 
       RowBox[{"pot", "@", 
        RowBox[{"scfGrid", "[", "\"\<Points\>\"", "]"}]}]}], "\n", "\t\t\t", 
      "]"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<StateVectors\>\"", "\[Rule]", "states"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "n"}]}], "\n", "\t\t", 
    "]"}]}], ";"}]}], \
"CodeInput",ExpressionUUID->"f09552eb-32b1-4080-b086-e418e31c29c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"scfWavefunction", "[", "\n", "\t", 
    RowBox[{
    "scf1DDVR_", ",", "\n", "\t", "scfGrid_", ",", "\n", "\t", 
     "potentialGenerator_", ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"a_", ",", " ", "s_"}], "}"}], ",", "\n", "\t", 
     RowBox[{"states", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}], 
     ",", "\n", "\t", 
     RowBox[{"n", ":", 
      RowBox[{"_Integer", "|", "Automatic"}], ":", "Automatic"}]}], "\n", 
    "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pot", "=", 
       RowBox[{"potentialGenerator", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", " ", "s"}], "}"}], "]"}]}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pot", "===", "$Failed"}], ",", "\n", "\t\t\t", "$Failed", ",",
        "\n", "\t\t\t", 
       RowBox[{"scfWavefunction", "[", "\n", "\t\t\t\t", 
        RowBox[{
        "scf1DDVR", ",", "\n", "\t\t\t\t", "scfGrid", ",", "\n", "\t\t\t\t", 
         "pot", ",", "\n", "\t\t\t\t", "states", ",", "\n", "\t\t\t\t", "n"}],
         "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
    "]"}]}], ";"}]], \
"CodeInput",ExpressionUUID->"02e9e7a4-1c35-44d6-998a-ac94d65308af"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]scfCoeffData\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"66edc1ae-df36-4451-9750-4d383daf71fe"],

Cell[BoxData[{
 RowBox[{"scfCoeffData", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"scfCoeffData", "[", "\n", "\t", 
   RowBox[{
   "scf1DDVR_", ",", "\n", "\t", "scf2DDVR_", ",", "\n", "\t", "scfGrid_", 
    ",", "\n", "\t", "potentialGenerator_", ",", "\n", "\t", "states_", ",", 
    "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", "s_"}], "}"}], ",", "\n", "\t", "basisSize_"}], 
   "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"pot", "=", 
       RowBox[{"potentialGenerator", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", " ", "s"}], "}"}], "]"}]}], ",", "\n", "\t\t\t", 
      "wfs", ",", "\n", "\t\t\t", "wfs2D", ",", "\n", "\t\t\t", "coeffs", ",",
       "\n", "\t\t\t", "expand"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"pot", "===", "$Failed"}], ",", "\n", "\t\t\t", "$Failed", ",", 
      "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"wfs", "=", "\n", "\t\t\t\t", 
        RowBox[{"scfWavefunction", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
         "scf1DDVR", ",", "\n", "\t\t\t\t\t", "scfGrid", ",", "\n", 
          "\t\t\t\t\t", "pot", ",", "\n", "\t\t\t\t\t", "states"}], "\n", 
         "\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
       RowBox[{"wfs2D", "=", "\n", "\t\t\t\t", 
        RowBox[{"scf2DDVR", "[", "\n", "\t\t\t\t\t", 
         RowBox[{"\"\<Wavefunctions\>\"", ",", "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<Points\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"basisSize", ",", " ", "basisSize"}], "}"}]}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"\"\<PotentialOptimize\>\"", "\[Rule]", "False"}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<PotentialFunction\>\"", "\[Rule]", "pot"}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"\"\<NumberOfWavefunctions\>\"", "\[Rule]", 
           RowBox[{"Length", "@", "states"}]}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<PreadjustHamiltonian\>\"", "\[Rule]", "False"}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<ValidateHamiltonian\>\"", "\[Rule]", "False"}]}], "\n",
          "\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
       RowBox[{"<|", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"\"\<SCFWavefunctions\>\"", "->", "wfs"}], ",", " ", "\n", 
         "\t\t\t\t", 
         RowBox[{"\"\<DVRWavefunctions\>\"", "->", "wfs2D"}]}], "\n", 
        "\t\t\t\t", "|>"}]}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"0263855e-a0a2-4b83-a891-c352e855ecbe"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Overlaps\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"c63b8b08-8625-4abc-9654-6306a4150403"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getSCFOverlapMatrix\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,ExpressionUUID->"d5ce53f0-e03c-4abd-82e1-fd43ec099266"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Old\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2c38f705-265e-41fe-8fa7-98e1fd0e5579"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"getSCFOverlapMatrix", "[", 
    RowBox[{
    "scfWavefunctions_", ",", " ", "dvrWavefunctions_", ",", " ", "states_", 
     ",", " ", "scalings_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"fleng", ",", "\n", "\t\t\t", 
       RowBox[{"overlapStates", "=", "states"}], ",", "\n", "\t\t\t", 
       RowBox[{"scalingThings", "=", "scalings"}], ",", "\n", "\t\t\t", 
       "blerp", ",", "\n", "\t\t\t", "baseWfnsSCF", ",", "\n", "\t\t\t", 
       "baseWfnsDVR", ",", "\n", "\t\t\t", "expansionCoeffs", ",", "\n", 
       "\t\t\t", "blerpDVR", ",", "\n", "\t\t\t", "coeffs", ",", "\n", 
       "\t\t\t", "overlaps", ",", "\n", "\t\t\t", "goodPlace", ",", "\n", 
       "\t\t\t", "goodPos", ",", "\n", "\t\t\t", "goodPairs", ",", "\n", 
       "\t\t\t", "goodSparseOneQuantum"}], "\n", "\t\t\t", "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "overlapStates"}], "!=", 
         RowBox[{"Length", "@", "scalingThings"}]}], ",", " ", 
        RowBox[{"Throw", "@", "\"\<I'm sad\>\""}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"fleng", "=", 
       RowBox[{"Length", "[", "scfWavefunctions", "]"}]}], ";", "\n", "\t\t", 
      
      RowBox[{"blerp", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"scfWavefunctions", ",", " ", 
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"blerpDVR", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"dvrWavefunctions", ",", " ", 
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"baseWfnsSCF", "=", "\n", "\t\t\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
            "blerp"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "overlapStates"}], "}"}]}], "]"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"baseWfnsDVR", "=", "\n", "\t\t\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
            "blerpDVR"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "overlapStates"}], "}"}]}], "]"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"coeffs", "=", "\n", "\t\t\t", 
       RowBox[{"Apply", "[", "\n", "\t\t\t\t", 
        RowBox[{"Join", ",", "\n", "\t\t\t\t", 
         RowBox[{"scalingThings", "*", "\n", "\t\t\t\t", 
          RowBox[{"Table", "[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Transpose", "@", "\n", "\t\t\t\t\t\t", 
             RowBox[{"Table", "[", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Diagonal", "[", 
                 RowBox[{"dvrWfs", "@", 
                  RowBox[{"\"\<Overlaps\>\"", "[", "scfWfs", "]"}]}], "]"}], 
                "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"scfWfs", ",", " ", "baseWfnsSCF"}], "}"}]}], "\n", 
              "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"dvrWfs", ",", " ", "baseWfnsDVR"}], "}"}]}], "\n", 
           "\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"overlaps", "=", 
       RowBox[{"coeffs", ".", 
        RowBox[{"Transpose", "[", "coeffs", "]"}]}]}], ";", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{"overlaps", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"goodPlace", "=", 
          RowBox[{"Pick", "[", 
           RowBox[{
            RowBox[{"Range", "[", "fleng", "]"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "=!=", "$Failed"}], "&"}], "/@", 
             "scfWavefunctions"}]}], "]"}]}], ";", "\n", "\t\t\t", 
         RowBox[{"goodPos", "=", 
          RowBox[{"Join", "@@", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "+", "goodPlace"}], "&"}], ",", " ", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", 
                RowBox[{
                 RowBox[{"Length", "[", "overlapStates", "]"}], "-", "1"}]}], 
               "]"}], "*", "fleng"}]}], "]"}]}]}], ";", "\n", "\t\t\t", 
         RowBox[{"goodPairs", "=", 
          RowBox[{"Developer`ToPackedArray", "@", 
           RowBox[{"Tuples", "[", 
            RowBox[{"goodPos", ",", " ", "2"}], "]"}]}]}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{"goodPairs", "\[Rule]", 
            RowBox[{"Flatten", "@", "overlaps"}]}], ",", " ", 
           RowBox[{
            RowBox[{"Length", "[", "overlapStates", "]"}], "*", "fleng", "*", 
            
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], " ", ",", " ", "0."}], 
          "]"}]}]}], "\n", "\t\t\t", "}"}]}]}], "\n", "\t\t", "]"}]}], 
  "*)"}]], "CodeInput",ExpressionUUID->"0c7b7fc9-cad2-4638-b9f5-2996b9272497"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]New\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"59da165a-90ec-45bd-ba9b-df9ce18a56a4"],

Cell[BoxData[{
 RowBox[{"getSCFOverlapMatrix", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"getSCFOverlapMatrix", "[", "\n", "\t", 
   RowBox[{
   "scfWavefunctions_", ",", " ", "dvrWavefunctions_", ",", " ", "\n", "\t", 
    "states_", ",", " ", "\n", "\t", "scalings_", ",", " ", "\n", "\t", 
    "grid_", ",", " ", "extrapGrid_", ",", "\n", "\t", "symmetries_"}], "\n", 
   "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "nstates", ",", " ", "fleng", ",", " ", "pickSpec", ",", " ", "pickComp",
       ",", "\n", "\t\t\t", "gg", ",", " ", "blerp", ",", " ", "blerpDVR", 
      ",", " ", "\n", "\t\t\t", "baseWfnsSCF", ",", " ", "baseWfnsDVR", ",", 
      " ", "\n", "\t\t\t", "coeffs", ",", " ", "coeffLists", ",", "\n", 
      "\t\t\t", "baseGrid", ",", " ", "extrapCoeffs", ",", " ", "\n", 
      "\t\t\t", "coeffInterps", ",", " ", "newCoeffs", ",", "\n", "\t\t\t", 
      "fuckTheseFuckingPointsFuckThisIDontWantToDoIt"}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"nstates", " ", "=", " ", 
      RowBox[{"Length", "@", "states"}]}], ";", "\n", "\t\t", 
     RowBox[{"pickSpec", " ", "=", " ", 
      RowBox[{"Pick", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "scfWavefunctions", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], "&"}], "/@", 
         "scfWavefunctions"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"pickComp", " ", "=", " ", 
      RowBox[{"Pick", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "scfWavefunctions", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "===", "$Failed"}], "&"}], "/@", 
         "scfWavefunctions"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"fleng", " ", "=", " ", 
      RowBox[{"Length", "[", "pickSpec", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"debugPrint", "[", "\"\<Loading base coefficients\>\"", "]"}], 
     ";", "\n", "   ", 
     RowBox[{"blerp", "=", 
      RowBox[{"scfWavefunctions", "[", 
       RowBox[{"[", "pickSpec", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"blerpDVR", "=", 
      RowBox[{"dvrWavefunctions", "[", 
       RowBox[{"[", "pickSpec", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"gg", " ", "=", " ", 
      RowBox[{"Join", "@@", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"grid", "[", 
          RowBox[{"[", "pickSpec", "]"}], "]"}], ",", " ", "nstates"}], 
        "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"baseWfnsSCF", "=", "\n", "\t\t\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
           "blerp"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "states"}], "}"}]}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"baseWfnsDVR", "=", "\n", "\t\t\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
           "blerpDVR"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "states"}], "}"}]}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"coeffs", "=", "\n", "\t\t\t", 
      RowBox[{"Apply", "[", "\n", "\t\t\t\t", 
       RowBox[{"Join", ",", "\n", "\t\t\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Transpose", "@", "\n", "\t\t\t\t\t\t", 
           RowBox[{"Table", "[", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Developer`ToPackedArray", "[", 
              RowBox[{"Diagonal", "[", 
               RowBox[{"dvrWfs", "@", 
                RowBox[{"\"\<Overlaps\>\"", "[", "scfWfs", "]"}]}], "]"}], 
              "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"scfWfs", ",", " ", "baseWfnsSCF"}], "}"}]}], "\n", 
            "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"dvrWfs", ",", " ", "baseWfnsDVR"}], "}"}]}], "\n", 
         "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     
     RowBox[{"coeffLists", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"gg", ",", " ", 
          RowBox[{"coeffs", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", 
             RowBox[{"{", "#", "}"}]}], "]"}], "]"}], ",", " ", "2"}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Range", "[", "nstates", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"debugPrint", "[", "\"\<Extrapolating coefficients\>\"", "]"}], 
     ";", "\n", "\t\t", 
     RowBox[{"coeffInterps", " ", "=", " ", "\n", "\t\t\t", 
      RowBox[{"Table", "[", "\n", "\t\t\t  ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "debugPrint", "[", "\"\<Loading base function data\>\"", "]"}], ";", 
         "\n", "\t\t\t  ", 
         RowBox[{"baseGrid", "=", "\n", "\t\t\t    ", 
          RowBox[{"Join", "[", "\n", "\t\t\t      ", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"grid", "[", 
               RowBox[{"[", "pickComp", "]"}], "]"}], ",", " ", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"10", "^", "9"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Length", "@", "pickComp"}], ",", " ", "1"}], 
                 "}"}]}], "]"}], ",", " ", "2"}], "]"}], ",", "\n", 
            "\t\t\t      ", 
            RowBox[{"coeffList", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "fleng"}]}], " ", ";;",
                " ", 
               RowBox[{"i", "*", "fleng"}]}], "]"}], "]"}]}], "\n", 
           "\t\t\t      ", "]"}]}], ";", "\n", "\t\t\t  ", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"u", "=", 
             RowBox[{"Unique", "[", "coefficientsGrid", "]"}]}], "}"}], ",", 
           " ", 
           RowBox[{
            RowBox[{"u", "=", "baseGrid"}], ";", 
            RowBox[{"dumpSymbol", "[", "u", "]"}]}]}], "]"}], ";", "\n", 
         "\t\t\t  ", 
         RowBox[{"debugPrint", "[", "\"\<Extrapolating off grid\>\"", "]"}], 
         ";", "\n", "\t\t\t  ", 
         RowBox[{"extrapCoeffs", "=", "\n", "\t\t\t    ", 
          RowBox[{"extrapolatedFunction", "[", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{"baseGrid", ",", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
              RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "^", 
                RowBox[{"Range", "[", "3", "]"}]}], "&"}], ",", " ", 
              RowBox[{
               RowBox[{"#", "^", 
                RowBox[{"Range", "[", "3", "]"}]}], "&"}]}], "}"}], ",", "\n",
             "\t\t\t\t\t\t\t", "\"\<Both\>\"", ",", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"symmetries", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"DefaultValue", "[", "0", "]"}]}], "\n", "\t\t\t\t\t\t\t",
            "]"}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"dumpSymbol", "[", "extrapCoeffs", "]"}], ";", "\n", 
         "\t\t\t\t", 
         RowBox[{
         "debugPrint", "[", "\"\<Constructing interpolation off grid\>\"", 
          "]"}], ";", "\n", "\t\t\t\t", 
         RowBox[{
         "fuckTheseFuckingPointsFuckThisIDontWantToDoIt", "=", "\n", 
          "\t\t\t\t  ", 
          RowBox[{"DeleteDuplicatesBy", "[", "\n", "\t\t\t\t    ", 
           RowBox[{
            RowBox[{"Join", "[", "\n", "    \t\t\t  \t", 
             RowBox[{
              RowBox[{"extrapCoeffs", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", 
                 RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", "\n", "  ", 
              "  ", "  ", "\t\t\t\t", 
              RowBox[{"List", "/@", 
               RowBox[{"Clip", "[", 
                RowBox[{"extrapCoeffs", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], "]"}]}], ",", 
              "\n", "  ", "    \t\t\t\t", "2"}], "\n", "  ", "    \t\t\t\t", 
             "]"}], ",", "\n", "  ", "    \t\t  ", 
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", ".01"}], "]"}], 
             "&"}]}], "\n", "      \t\t  ", "]"}]}], ";", "\n", "      ", 
         RowBox[{
         "dumpSymbol", "[", "fuckTheseFuckingPointsFuckThisIDontWantToDoIt", 
          "]"}], ";", "\n", "\t\t\t\t", 
         RowBox[{
         "fuckTheseFuckingPointsFuckThisIDontWantToDoIt", "//", 
          "Interpolation"}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"coeffList", ",", " ", "coeffLists"}], "}"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "nstates"}], "}"}]}], "\n", "\t\t\t\t", 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"coeffs", " ", "=", " ", "\n", "\t\t\t", 
      RowBox[{"Normalize", "/@", 
       RowBox[{"Transpose", "[", "\n", "\t\t\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Apply", "[", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{"Join", ",", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"interp", "=", "#"}], "}"}], ",", "\n", "\t", "\t", 
                "\t", "\t\t\t\t", 
                RowBox[{"interp", "@@", 
                 RowBox[{"Transpose", "[", "extrapGrid", "]"}]}]}], "\n", 
               "\t", "\t", "\t", "\t\t\t\t", "]"}], "&"}], "/@", 
             "interpList"}]}], "\n", "\t", "\t\t\t\t\t", "]"}], ",", "\n", 
          "\t", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"interpList", ",", " ", "coeffInterps"}], "}"}]}], "\n", 
         "\t\t\t\t\t", "]"}], "\n", "\t\t\t\t", "]"}]}]}], ";", "\n", "\t\t", 
     
     RowBox[{"coeffs", ".", 
      RowBox[{"Transpose", "[", "coeffs", "]"}]}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"08473c95-7d85-4c65-9393-200913a3d4f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Wavefunctions\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"f150a06e-5f3c-41f4-a284-0491faff4074"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Kinetic Energy\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"46e076af-c7ca-44b9-b000-3a32a071ef13"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"coupledKineticEnergy", "//", "Clear"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coupledKineticEnergy", "[", 
    RowBox[{
    "dvr_", ",", " ", "grid_", ",", " ", "overlapMat_", ",", " ", "i___"}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"lens", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"{", "i", "}"}], "]"}]}], ",", "\n", "\t\t\t", "woop", ",", 
       "\n", "\t\t\t", 
       RowBox[{"waap", "=", 
        RowBox[{"dvr", "[", 
         RowBox[{"\"\<KineticEnergy\>\"", ",", " ", 
          RowBox[{"\"\<Points\>\"", "\[Rule]", 
           RowBox[{"Dimensions", "[", "grid", "]"}]}]}], "]"}]}], ",", "\n", 
       "\t\t\t", "klap"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"woop", "=", "overlapMat"}], ";", "\n", "\t\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Echo", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Dimensions", "[", "grid", "]"}], ",", " ", 
           RowBox[{"Dimensions", "[", "waap", "]"}], ",", " ", 
           RowBox[{"Dimensions", "[", "woop", "]"}]}], "}"}], "]"}], ";"}], 
       "*)"}], "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "woop", "]"}], "=!=", 
         RowBox[{"lens", "*", 
          RowBox[{"Length", "[", "waap", "]"}]}]}], ",", "\n", "\t\t\t", 
        RowBox[{"Throw", "[", "\n", "\t\t\t\t", 
         RowBox[{
         "\"\<Overlap matrix misdimensioned, `` overlaps, `` functions, `` \
points\>\"", "~", "TemplateApply", "~", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Dimensions", "[", "woop", "]"}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{"lens", "*", 
             RowBox[{"Dimensions", "[", "waap", "]"}]}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"Dimensions", "[", "grid", "]"}]}], "\n", "\t\t\t\t", 
           "}"}]}], "\n", "\t\t\t\t", "]"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"klap", "=", "\n", "\t\t\t\t", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"{", 
               RowBox[{"lens", ",", " ", "lens"}], "}"}]}], "]"}], ",", " ", 
            "waap"}], "]"}]}], ";", "\n", "\t\t\t", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"woop", "*", "klap"}], "]"}]}]}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "this", " ", "_must", "_", " ", "be", " ", "a", " ", "SparseArray", 
         " ", "to", " ", "be", " ", "manageable", " ", "later"}], " ", "*)"}],
        "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"1bbe0c85-d747-483c-8c42-5dc6f60ce938"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Potential Energy\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"99004b6e-b6bb-48b4-963f-da28ef86ee9d"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getPot\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f7e342c3-3319-4d48-b430-746224348841"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getPot", "[", 
    RowBox[{"wfns_", ",", " ", "i_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Keys", "[", "wfns", "]"}], ",", "\n", "\t\t", 
     RowBox[{"Developer`ToPackedArray", "@", 
      RowBox[{"Map", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "===", "$Failed"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"10.", "^", "9"}], "}"}], ",", " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"{", "i", "}"}], "]"}], "]"}]}], "]"}], "&"}], ",", "\n",
         "\t", "\t\t", 
        RowBox[{"Values", "@", "wfns"}]}], "\n", "\t\t\t", "]"}]}], ",", "\n",
      "\t\t", "2"}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"5136a536-83a9-4916-bbcc-440ffeec630e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]averagedPot\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b5e92ca6-f6c7-4fb3-9936-ac0417123e93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"averagedPot", "[", 
   RowBox[{"wnfs_", ",", " ", "i_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Developer`ToPackedArray", "@", 
   RowBox[{"Map", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "===", "$Failed"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"10.", "^", "9"}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"{", "i", "}"}], "]"}], "]"}]}], "]"}], "&"}], ",", "\n", 
     "\t\t", 
     RowBox[{"Values", "@", "wnfs"}]}], "\n", "\t\t", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"5b0a0b17-2087-4b70-89df-7dd3c2066b33"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]extrapolatedPotential\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"99dd8d2f-4f71-47e5-a4ea-96319ae46ad8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"extrapolatedPotential", "[", 
   RowBox[{"grid_", ",", " ", "wfns_", ",", " ", "i_"}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"Module", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{
     "pot", ",", "\n", "      ", "extrap", ",", "\n", "      ", "interp"}], 
     "\n", "      ", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"debugPrint", "[", "\"\<Extracting potential\>\"", "]"}], ";", 
     "\n", "    ", 
     RowBox[{"pot", " ", "=", " ", 
      RowBox[{"getPot", "[", 
       RowBox[{"wfns", ",", " ", "i"}], "]"}]}], ";", "\n", "    ", 
     RowBox[{"dumpSymbol", "[", "pot", "]"}], ";", "\n", "    ", 
     RowBox[{"debugPrint", "[", "\"\<Extrapolating potential\>\"", "]"}], ";",
      "\n", "    ", 
     RowBox[{"extrap", " ", "=", "\n", "      ", 
      RowBox[{"extrapolatedFunction", "[", "\n", "\t\t\t\t\t  ", 
       RowBox[{"pot", ",", "\n", "\t\t\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{"10", "^", "9."}], "-", "1"}]}], "}"}], ",", "\n", "\t", 
        "\t\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", "1", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".2", "]"}]}], "}"}], ",", "\n", "\t", 
        "\t\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "^", 
            RowBox[{"Range", "[", "6", "]"}]}], "&"}], ",", " ", 
          RowBox[{
           RowBox[{"#", "^", 
            RowBox[{"Range", "[", "1", "]"}]}], "&"}]}], "}"}]}], "\n", 
       "\t\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"dumpSymbol", "[", "extrap", "]"}], ";", "\n", "\t\t", 
     RowBox[{"interp", "=", "\n", "\t\t\t\t", 
      RowBox[{"Interpolation", "[", "\n", "\t\t\t\t\t", 
       RowBox[{"extrap", ",", "\n", "\t\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t\t", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"10.", "^", "9"}], "&"}], ")"}], ",", "\n", 
            "\t\t\t\t\t\t\t", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], "\n", 
           "\t\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t\t", "}"}]}], "\n", 
       "\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"interp", "@@", 
      RowBox[{"Transpose", "[", "grid", "]"}]}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"c4d437d2-fd84-482a-8a36-cf67fea78c0c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]coupledPot\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"25aea998-0f06-4048-a745-bc3f1df54f48"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"coupledPot", "[", 
    RowBox[{"grid_", ",", " ", "wfns_", ",", " ", "i___"}], "]"}], ":=", "\n",
    "\t", 
   RowBox[{"SparseArray", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Band", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1"}], "}"}], "]"}], "\[Rule]", "\n", "\t\t\t", 
     
     RowBox[{"Developer`ToPackedArray", "@", "\n", "\t\t\t\t", 
      RowBox[{"Apply", "[", 
       RowBox[{"Join", ",", " ", "\n", "\t\t\t\t  ", 
        RowBox[{"Map", "[", "\n", "\t\t\t\t    ", 
         RowBox[{
          RowBox[{
           RowBox[{"extrapolatedPotential", "[", 
            RowBox[{"grid", ",", " ", "wfns", ",", " ", "#"}], "]"}], "&"}], 
          ",", " ", "\n", "\t\t\t\t    ", 
          RowBox[{"{", "i", "}"}]}], "\n", "\t\t\t\t    ", "]"}]}], "\n", 
       "\t\t\t\t  ", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"81da4e59-b09c-48aa-9433-4c073116fccc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Grid\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.757804645745041*^9, 
  3.757804646235776*^9}},ExpressionUUID->"02866f51-e41b-4378-a2e2-\
514ac02a0c3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coupledGrid", "[", 
   RowBox[{"grid_", ",", " ", "i__"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"grid", "@", "\"\<Grid\>\""}]}], ",", " ", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "i", "}"}], "]"}]}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"CoordinateGridObject", "@", "\n", "\t\t\t", 
     RowBox[{"Apply", "[", "\n", "\t\t\t\t", 
      RowBox[{"Join", ",", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"m", "=", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", "*", "#", "*", 
                  RowBox[{"Min", "[", "g", "]"}]}], ",", " ", "0"}], "}"}], 
               ",", " ", 
               RowBox[{
                RowBox[{"Dimensions", "[", "g", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], ",", 
           "\n", "\t\t\t\t\t", 
           RowBox[{"g", "-", "m"}]}], "\n", "\t\t\t\t\t", "]"}], "&"}], "/@", 
        
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"l", "-", "1"}]}], "]"}]}]}], "\n", "\t\t\t\t", "]"}]}]}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"df046519-907b-4f7f-b53c-3d206aad7089"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getWavefunctions\[RightFloor] ", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"54e2845d-0bf4-4c56-bb60-33bcbd8b4c36"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getWavefunctions", "[", 
    RowBox[{
    "wfns_", ",", " ", "dvr_", ",", " ", "overlaps_", ",", " ", "grid_", ",", 
     " ", "states___"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"WavefunctionsObject", "[", "\n", "\t\t", 
    RowBox[{"\"\<Diagonalize\>\"", ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Making kinetic energy\>\"", "]"}], ";", 
      "\n", "\t\t", 
      RowBox[{"coupledKineticEnergy", "[", 
       RowBox[{
       "dvr", ",", " ", "grid", ",", " ", "overlaps", ",", " ", "states"}], 
       "]"}]}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Making potential energy\>\"", "]"}], 
      ";", "\n", "\t\t", 
      RowBox[{"coupledPot", "[", 
       RowBox[{
        RowBox[{"grid", "[", "\"\<Points\>\"", "]"}], ",", " ", "wfns", ",", 
        " ", "states"}], "]"}]}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Making grid\>\"", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"coupledGrid", "[", 
       RowBox[{"grid", ",", " ", "states"}], "]"}]}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Diagonalizing\>\"", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"\"\<NumberOfWavefunctions\>\"", "\[Rule]", "100"}]}], ",", 
     "\n", "\t", "\t", 
     RowBox[{"\"\<ArnoldiIterations\>\"", "\[Rule]", "10000"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<PruningEnergy\>\"", "\[Rule]", 
      RowBox[{"Scaled", "[", ".9", "]"}]}], ",", "\n", "\t", "\t", 
     RowBox[{"\"\<ValidateHamiltonian\>\"", "\[Rule]", "False"}]}], "\n", 
    "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"73bb8d86-4ba1-4e26-b5c7-60d55370cfff"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]pullProjections\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"911f441c-af5b-45f3-8b6e-8814253e2504"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pullProjections", "[", 
   RowBox[{"wfns_", ",", " ", "grid_", ",", " ", "states_"}], "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g2", "=", "grid"}], ",", " ", 
      RowBox[{"g", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"grid", "[", "\"\<Points\>\"", "]"}], "]"}]}], ",", " ", 
      RowBox[{"len", " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", "grid", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"couplings", "=", "states"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"MapThread", "[", "\n", "\t", "\t\t", 
     RowBox[{
      RowBox[{"Function", "[", "\n", "\t", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"WavefunctionsObject", "[", "\n", "\t", "\t\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", "\n", "\t", 
             "\t\t\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{
               "GridFunctionObject", "[", "\n", "\t", "\t\t\t\t\t\t", 
                RowBox[{"g2", ",", "\n", "\t", "\t\t\t\t\t\t", 
                 RowBox[{"#", "@", "\"\<Values\>\""}]}], "\n", "\t", 
                "\t\t\t\t\t\t", "]"}], "&"}], "/@", 
              RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}]}]}], "\n", 
            "\t", "\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t", "g2"}], "\n", 
          "\t\t\t\t\t", "]"}], "&"}], "@", 
        RowBox[{"wfns", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", 
           RowBox[{"#", ";;", "#2"}]}], "]"}], "]"}]}], "\n", "\t", "\t\t\t", 
       "]"}], ",", "\n", "\t", "\t\t", 
      RowBox[{"{", "\n", "\t", "\t\t\t", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", " ", 
            RowBox[{
             RowBox[{"Length", "[", "couplings", "]"}], "-", "1"}]}], "]"}], 
          "*", "len"}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "couplings"}], "]"}], "*", "len"}]}], "\n", 
       "\t\t\t\t", "}"}]}], "\n", "\t", "\t\t", "]"}]}], "\n", "\t", "\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"55c33dec-6b37-42b7-a90f-1626320a6733"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Spectra\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"844a8188-046f-4303-993a-ec79a8d78655"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]rebuildInterpolation\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8e09c1d9-535f-457f-b8b8-d3260b94417a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rebuildInterpolation", "[", "interp_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Interpolation", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Join", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"interp", "[", "\"\<Grid\>\"", "]"}], ",", " ", "3"}], "]"}], 
      ",", "\n", "\t", "\t\t", 
      RowBox[{"List", "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"interp", "[", "\"\<ValuesOnGrid\>\"", "]"}], ",", " ", 
         "3"}], "]"}]}], ",", "\n", "\t", "\t\t", "2"}], "\n", "\t", "\t\t", 
     "]"}], ",", "\n", "\t", "\t", 
    RowBox[{"{", "\n", "\t", "\t\t", 
     RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
      RowBox[{"{", "\n", "\t", "\t\t\t\t", 
       RowBox[{
        RowBox[{"0.", "&"}], ",", "\n", "\t", "\t\t\t\t", 
        RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], "\n", "\t", 
       "\t\t\t\t", "}"}]}], "\n", "\t", "\t\t", "}"}]}], "\n", "\t", "\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5cc4aace-7ca2-4f2c-b60e-39568f1d0e4d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]interpolatedDipoleSurface\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c2d3a60a-5b55-4ef8-9c29-ae0c9e1dac07"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interpolatedDipoleSurface", "[", 
   RowBox[{"interp_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", "s_"}], "}"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R1", "=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2.", "]"}]}], 
        RowBox[{"(", 
         RowBox[{"a", "+", "s"}], ")"}]}]}], ",", " ", 
      RowBox[{"R2", "=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2.", "]"}]}], 
        RowBox[{"(", 
         RowBox[{"s", "-", "a"}], ")"}]}]}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"interp", "[", 
      RowBox[{
       RowBox[{"Sequence", "@@", 
        RowBox[{"Transpose", "[", "#", "]"}]}], ",", " ", "R1", ",", " ", 
       "R2"}], "]"}], "&"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"005c0e17-dab2-4357-93b3-ef53ffc726bf"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getDipoleVecs\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"bc00f25e-6a4c-4754-b0e7-f8f50ddff721"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getDipoleVecs", "[", 
   RowBox[{"wfns_", ",", " ", "gps_", ",", " ", "interp_"}], "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"MapIndexed", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fg", "=", "gps"}], "}"}], ",", "\n", "\t", "\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#", "=!=", "$Failed"}], ",", "\n", "\t", "\t\t\t", 
         RowBox[{"Developer`ToPackedArray", "[", 
          RowBox[{
           RowBox[{"interpolatedDipoleSurface", "[", 
            RowBox[{"interp", ",", " ", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], "]"}], "@", 
           "fg"}], "]"}], ",", "\n", "\t", "\t\t\t", "$Failed"}], "\n", "\t", 
        "\t\t\t", "]"}], "&"}]}], "\n", "\t", "\t\t", "]"}], ",", "\n", "\t", 
    "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
     "This", " ", "is", " ", "just", " ", "here", " ", "for", " ", "the", " ",
       "keys", " ", "and", " ", "the", " ", "$Failed"}], " ", "*)"}], "\n", 
    "\t", "\t", "wfns"}], "\n", "\t", "\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"50308850-af8b-4979-af6e-ae5436c5edf9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getTransitionMoments\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"5437240b-f6a0-480f-a7c0-e2f97af5ec20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getTransitionMoments", "[", 
   RowBox[{"wfns_", ",", " ", "dipoles_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"MapThread", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "=!=", "$Failed"}], ",", "\n", "\t", "\t\t", 
       RowBox[{"#", "@", 
        RowBox[{"\"\<TransitionMoments\>\"", "[", "\n", "\t", "\t\t\t\t", 
         RowBox[{
          RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{"#2", ",", " ", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0.", ",", " ", 
              RowBox[{"Length", "[", "#2", "]"}]}], "]"}], ",", " ", "\n", 
            "\t", "\t\t\t\t\t", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0.", ",", " ", 
              RowBox[{"Length", "[", "#2", "]"}]}], "]"}]}], "\n", "\t", 
           "\t\t\t\t\t", "}"}], ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", 
            RowBox[{"1", ";;", "10"}]}], "}"}]}], "\n", "\t", "\t\t\t\t", 
         "]"}]}], ",", "\n", "\t", "\t\t", "$Failed"}], "\n", "\t", "\t\t", 
      "]"}], "&"}], ",", "\n", "\t\t", 
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"wfns", ",", "\n", "\t\t\t", "dipoles"}], "\n", "\t\t\t", 
     "}"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"30f51a75-c3c8-4a7d-917e-368ae00ea7d9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getTransitionWavefunctions\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f40a3282-44c8-460f-835b-5b9d944834f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getTransitionWavefunctions", "[", 
   RowBox[{"projs_", ",", " ", "gsData_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Map", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"WavefunctionsObject", "[", "\n", "\t", "\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", " ", 
           RowBox[{"gsData", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", "\n", "\t", 
         "\t\t\t", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}], ",", " ", 
           RowBox[{"gsData", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "\n", "\t", "\t\t\t", 
        "}"}], ",", " ", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"gsData", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<Grid\>\"", "]"}]}], "\n", 
      "\t", "\t\t", "]"}], "&"}], ",", "\n", "\t\t", "projs"}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"22117e7e-bf4e-48f4-8483-03b9cc1c6c73"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getIntensities\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"eafe7c17-934c-4223-81bb-e9ffc1a8cfc7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getIntensities", "[", 
   RowBox[{"wfns_", ",", " ", "states_", ",", " ", "gridTms_"}], "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "baseTmoms", ",", "\n", "\t\t\t", "tmomLists", ",", "\n", "\t\t\t", 
      "tmGrid", ",", "\n", "\t\t\t", "tmInterps", ",", "\n", "\t\t\t", "tms", 
      ",", "\n", "\t\t\t", "wfGrid"}], "\n", "\t\t\t", "}"}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"tmGrid", " ", "=", " ", 
      RowBox[{"gridTms", "[", "\"\<Grid\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"tmInterps", " ", "=", "\n", "\t\t\t", 
      RowBox[{"Table", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Interpolation", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"tmGrid", ",", " ", 
            RowBox[{"List", "/@", 
             RowBox[{"tm", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", "2"}], "]"}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0", "&"}], ",", " ", 
             RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
            "}"}]}]}], "\n", "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "3"}], "}"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"tm", ",", " ", 
          RowBox[{"gridTms", "[", 
           RowBox[{"[", 
            RowBox[{"\"\<Values\>\"", ",", " ", "states"}], "]"}], "]"}]}], 
         "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"wfGrid", " ", "=", " ", 
      RowBox[{
       RowBox[{"wfns", "[", "\"\<Grid\>\"", "]"}], "@", "\"\<Points\>\""}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"tms", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Through", "[", 
          RowBox[{"#", "[", "wfGrid", "]"}], "]"}], "]"}], "&"}], "/@", 
       "tmInterps"}]}], ";", "\n", "\t\t", 
     RowBox[{"baseTmoms", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"wf", "=", "#"}], "}"}], ",", "\n", "\t", "\t", "\t", 
          "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"wf", "@", 
             RowBox[{
             "\"\<TransitionMoments\>\"", "[", "\n", "\t", "\t", "\t", 
              "\t\t\t\t", 
              RowBox[{
               RowBox[{"Transpose", "[", "#", "]"}], ",", "\n", "\t", "\t", 
               "\t", "\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"states", ",", " ", "1"}], "]"}], ",", " ", "1", 
                    ",", " ", "2"}], "]"}], ";;", 
                  RowBox[{"Length", "[", "wf", "]"}]}]}], "}"}]}], "\n", "\t",
               "\t", "\t", "\t\t\t\t", "]"}]}], "&"}], "/@", "tms"}]}], "\n", 
         "\t\t\t\t\t", "]"}], "&"}], "/@", "wfns"}]}], ";", "\n", "\t\t", 
     RowBox[{"tmomLists", " ", "=", " ", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "All", ",", " ", "1"}],
            "]"}], "]"}], "&"}], ",", " ", "baseTmoms"}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"Total", "[", "tmomLists", "]"}], "^", "2"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"41d62dff-62d7-4557-9073-2fd2bbd909ba"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getFreqs\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"282cdf9d-cc0c-4aff-82a0-93f9cfdfaff5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getFreqs", "[", 
   RowBox[{"wfns_", ",", " ", "gsData_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"wfns", "[", "\"\<Energies\>\"", "]"}], "-", 
   RowBox[{"gsData", "[", 
    RowBox[{"[", "1", "]"}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"3d7965e4-199f-449a-af16-802c97a3130d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]buildSpectra\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1900bbe6-9d4f-47a0-a293-2ed9dec16b46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"buildSpectra", "[", 
   RowBox[{"freqs_", ",", " ", "ints_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", "transInts", "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{
     RowBox[{"transInts", "=", "\n", "\t\t\t", 
      RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mlen", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Length", "/@", 
               RowBox[{"{", 
                RowBox[{"#", ",", " ", "#2"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{";;", "mlen"}], "]"}], "]"}], "*", 
            RowBox[{"#2", "[", 
             RowBox[{"[", 
              RowBox[{";;", "mlen"}], "]"}], "]"}]}]}], "\n", "\t\t\t\t\t", 
          "]"}], "&"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{"freqs", ",", "\n", "\t\t\t\t\t", "ints"}], "\n", 
         "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     
     RowBox[{"transInts", "=", 
      RowBox[{"transInts", "/", 
       RowBox[{"Max", "[", "transInts", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"ChemSpectrum", "@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"#", ",", " ", "#2"}], "}"}], "]"}]}], "&"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"freqs", ",", "\n", "\t\t\t\t", "transInts"}], "\n", 
        "\t\t\t\t", "}"}]}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"930f6973-454f-48dc-890d-0fead393f23e"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"9165d812-7f8c-4ea7-8d79-\
2a24617e14ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"47938e53-e30d-422c-abd3-\
99f891704dda"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"6d7b0d7e-ceeb-47af-b083-\
23a9af608444"]
},
NotebookEventActions->{{"MenuCommand", "Save"} :> 
  EasyIDE`Notebooks`Manipulation`IDESave[
    EvaluationNotebook[]], PassEventsDown -> True, EvaluationOrder -> After},
WindowSize->{808, 754},
WindowMargins->{{50, Automatic}, {Automatic, 0}},
WindowTitle->"EasyIDE: H5+",
TaggingRules->{
 "IndentCharacter" -> "  ", 
  "EasyIDE" -> {
   "Tabs" -> {
     "SpectrumScript" -> {
       "File" -> 
        "/Users/Mark/Documents/UW/Research/H5+/jobs/SpectrumScript.wl"}, 
      "SpectrumScriptPackage" -> {
       "File" -> 
        "/Users/Mark/Documents/UW/Research/H5+/Common/SpectrumScriptPackage.\
nb"}, "scratch" -> {
       "File" -> "/Users/Mark/Documents/UW/Research/H5+/.scratch/scratch.nb"},
       "H5OldOriginal" -> {
       "File" -> 
        "/Users/Mark/Documents/UW/Research/H5+/jobs/H5OldOriginal.sh"}, 
      "H5Core" -> {
       "File" -> "/Users/Mark/Documents/UW/Research/H5+/Common/H5Core.nb"}}, 
    "FileViewer" -> {"Visible" -> False}, "Toolbars" -> {"Column" -> GridBox[{{
          GridBox[{{
             PaneBox["", ImageSize -> {0, 15}], 
             ButtonBox[
             "", BaseStyle -> "ToolbarShowButton", ButtonData -> 
              "CodePackage"]}}, BaseStyle -> "ToolbarCell"]}}, BaseStyle -> 
        "Toolbars"], "Tags" -> {}, "Cells" -> {"Package" -> None}}, 
    "Project" -> {"Directory" -> "/Users/Mark/Documents/UW/Research/H5+/"}, 
    "ActiveTab" -> "SpectrumScriptPackage", "StyleSheet" -> 
    FrontEnd`FileName[{"EasyIDE", "Extensions"}, "LightMode-CodePackage.nb"], 
    "FileToolbar" -> "CodePackage", 
    "Options" -> {
     WindowSize -> {974, 843}, 
      WindowMargins -> {{Automatic, 79}, {Automatic, 0}}, 
      TaggingRules -> {
       "UUIDButtons" -> {
         "Active" -> {
           "Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
            "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
            "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False}}}, 
      FrontEndVersion -> 
      "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
      StyleDefinitions -> 
      FrontEnd`FileName[{"BTools"}, "CodePackage.nb", CharacterEncoding -> 
        "UTF-8"]}, "AutoGeneratePackage" -> True, "SavingAction" -> None}},
DynamicUpdating->Automatic,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"EasyIDE", "Extensions"}, 
       "LightMode-CodePackage.nb"]]]}, Visible -> False, 
  TaggingRules -> {
   "MyRule" -> 2, "EasyIDE" -> {"FileViewer" -> {"Visible" -> False}}}, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
